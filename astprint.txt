     0  *ast.File {
     1  .  Package: -
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 3) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  TokPos: -
     9  .  .  .  Tok: import
    10  .  .  .  Lparen: -
    11  .  .  .  Specs: []ast.Spec (len = 2) {
    12  .  .  .  .  0: *ast.ImportSpec {
    13  .  .  .  .  .  Name: *ast.Ident {
    14  .  .  .  .  .  .  NamePos: -
    15  .  .  .  .  .  .  Name: "pkgcmd"
    16  .  .  .  .  .  }
    17  .  .  .  .  .  Path: *ast.BasicLit {
    18  .  .  .  .  .  .  ValuePos: -
    19  .  .  .  .  .  .  Kind: STRING
    20  .  .  .  .  .  .  Value: "\"github.com/dongzerun/cmpgen/cmd\""
    21  .  .  .  .  .  }
    22  .  .  .  .  .  EndPos: -
    23  .  .  .  .  }
    24  .  .  .  .  1: *ast.ImportSpec {
    25  .  .  .  .  .  Path: *ast.BasicLit {
    26  .  .  .  .  .  .  ValuePos: -
    27  .  .  .  .  .  .  Kind: STRING
    28  .  .  .  .  .  .  Value: "\"net/http\""
    29  .  .  .  .  .  }
    30  .  .  .  .  .  EndPos: -
    31  .  .  .  .  }
    32  .  .  .  }
    33  .  .  .  Rparen: -
    34  .  .  }
    35  .  .  1: *ast.GenDecl {
    36  .  .  .  Doc: *ast.CommentGroup {
    37  .  .  .  .  List: []*ast.Comment (len = 1) {
    38  .  .  .  .  .  0: *ast.Comment {
    39  .  .  .  .  .  .  Slash: -
    40  .  .  .  .  .  .  Text: "// Config ..."
    41  .  .  .  .  .  }
    42  .  .  .  .  }
    43  .  .  .  }
    44  .  .  .  TokPos: -
    45  .  .  .  Tok: type
    46  .  .  .  Lparen: -
    47  .  .  .  Specs: []ast.Spec (len = 1) {
    48  .  .  .  .  0: *ast.TypeSpec {
    49  .  .  .  .  .  Name: *ast.Ident {
    50  .  .  .  .  .  .  NamePos: -
    51  .  .  .  .  .  .  Name: "Config"
    52  .  .  .  .  .  .  Obj: *ast.Object {
    53  .  .  .  .  .  .  .  Kind: type
    54  .  .  .  .  .  .  .  Name: "Config"
    55  .  .  .  .  .  .  .  Decl: *(obj @ 48)
    56  .  .  .  .  .  .  }
    57  .  .  .  .  .  }
    58  .  .  .  .  .  Assign: -
    59  .  .  .  .  .  Type: *ast.StructType {
    60  .  .  .  .  .  .  Struct: -
    61  .  .  .  .  .  .  Fields: *ast.FieldList {
    62  .  .  .  .  .  .  .  Opening: -
    63  .  .  .  .  .  .  .  List: []*ast.Field (len = 27) {
    64  .  .  .  .  .  .  .  .  0: *ast.Field {
    65  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    66  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    67  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    68  .  .  .  .  .  .  .  .  .  .  .  Name: "TXXXXXX"
    69  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    70  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    71  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TXXXXXX"
    72  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 64)
    73  .  .  .  .  .  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  .  .  .  .  }
    75  .  .  .  .  .  .  .  .  .  }
    76  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    77  .  .  .  .  .  .  .  .  .  .  NamePos: -
    78  .  .  .  .  .  .  .  .  .  .  Name: "Test"
    79  .  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  1: *ast.Field {
    82  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    83  .  .  .  .  .  .  .  .  .  .  NamePos: -
    84  .  .  .  .  .  .  .  .  .  .  Name: "Test"
    85  .  .  .  .  .  .  .  .  .  }
    86  .  .  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  .  .  2: *ast.Field {
    88  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    89  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
    90  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    91  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
    92  .  .  .  .  .  .  .  .  .  .  }
    93  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    94  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    95  .  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
    96  .  .  .  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  .  }
    99  .  .  .  .  .  .  .  .  3: *ast.Field {
   100  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   101  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   102  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   103  .  .  .  .  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
   104  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   105  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   106  .  .  .  .  .  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
   107  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 99)
   108  .  .  .  .  .  .  .  .  .  .  .  }
   109  .  .  .  .  .  .  .  .  .  .  }
   110  .  .  .  .  .  .  .  .  .  }
   111  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   112  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   113  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   114  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   115  .  .  .  .  .  .  .  .  .  .  }
   116  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   117  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   118  .  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   119  .  .  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  .  .  }
   122  .  .  .  .  .  .  .  .  4: *ast.Field {
   123  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   124  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   125  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   126  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   127  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   128  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   129  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   130  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 122)
   131  .  .  .  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  .  .  .  }
   134  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   135  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   136  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   137  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   138  .  .  .  .  .  .  .  .  .  .  }
   139  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   140  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   141  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   142  .  .  .  .  .  .  .  .  .  .  }
   143  .  .  .  .  .  .  .  .  .  }
   144  .  .  .  .  .  .  .  .  }
   145  .  .  .  .  .  .  .  .  5: *ast.Field {
   146  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   147  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   148  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   149  .  .  .  .  .  .  .  .  .  .  .  Name: "PointerStruct"
   150  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   151  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   152  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PointerStruct"
   153  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 145)
   154  .  .  .  .  .  .  .  .  .  .  .  }
   155  .  .  .  .  .  .  .  .  .  .  }
   156  .  .  .  .  .  .  .  .  .  }
   157  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   158  .  .  .  .  .  .  .  .  .  .  Star: -
   159  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   160  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   161  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   162  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   163  .  .  .  .  .  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   165  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   166  .  .  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   167  .  .  .  .  .  .  .  .  .  .  .  }
   168  .  .  .  .  .  .  .  .  .  .  }
   169  .  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  .  6: *ast.Field {
   172  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   173  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   174  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   175  .  .  .  .  .  .  .  .  .  .  .  Name: "PointInt"
   176  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   177  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   178  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PointInt"
   179  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 171)
   180  .  .  .  .  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  .  .  .  }
   182  .  .  .  .  .  .  .  .  .  }
   183  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   184  .  .  .  .  .  .  .  .  .  .  Star: -
   185  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   186  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   187  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   188  .  .  .  .  .  .  .  .  .  .  }
   189  .  .  .  .  .  .  .  .  .  }
   190  .  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  .  7: *ast.Field {
   192  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   193  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   194  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   195  .  .  .  .  .  .  .  .  .  .  .  Name: "PointString"
   196  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   197  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   198  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PointString"
   199  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 191)
   200  .  .  .  .  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  .  .  .  .  }
   202  .  .  .  .  .  .  .  .  .  }
   203  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   204  .  .  .  .  .  .  .  .  .  .  Star: -
   205  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   206  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   207  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   208  .  .  .  .  .  .  .  .  .  .  }
   209  .  .  .  .  .  .  .  .  .  }
   210  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   211  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   212  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   213  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"pointstring\"`"
   214  .  .  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  .  .  8: *ast.Field {
   217  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   218  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   219  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   220  .  .  .  .  .  .  .  .  .  .  .  Name: "PointSlice"
   221  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   222  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   223  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PointSlice"
   224  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 216)
   225  .  .  .  .  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  .  .  .  }
   228  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   229  .  .  .  .  .  .  .  .  .  .  Star: -
   230  .  .  .  .  .  .  .  .  .  .  X: *ast.ArrayType {
   231  .  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   232  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   233  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   234  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   235  .  .  .  .  .  .  .  .  .  .  .  }
   236  .  .  .  .  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  .  .  .  }
   238  .  .  .  .  .  .  .  .  }
   239  .  .  .  .  .  .  .  .  9: *ast.Field {
   240  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   241  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   242  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   243  .  .  .  .  .  .  .  .  .  .  .  Name: "PointMap"
   244  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   245  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   246  .  .  .  .  .  .  .  .  .  .  .  .  Name: "PointMap"
   247  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 239)
   248  .  .  .  .  .  .  .  .  .  .  .  }
   249  .  .  .  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  .  .  .  }
   251  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   252  .  .  .  .  .  .  .  .  .  .  Star: -
   253  .  .  .  .  .  .  .  .  .  .  X: *ast.MapType {
   254  .  .  .  .  .  .  .  .  .  .  .  Map: -
   255  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   256  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   257  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   258  .  .  .  .  .  .  .  .  .  .  .  }
   259  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   260  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   261  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   262  .  .  .  .  .  .  .  .  .  .  .  }
   263  .  .  .  .  .  .  .  .  .  .  }
   264  .  .  .  .  .  .  .  .  .  }
   265  .  .  .  .  .  .  .  .  }
   266  .  .  .  .  .  .  .  .  10: *ast.Field {
   267  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   268  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   269  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   270  .  .  .  .  .  .  .  .  .  .  .  Name: "All"
   271  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   272  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   273  .  .  .  .  .  .  .  .  .  .  .  .  Name: "All"
   274  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 266)
   275  .  .  .  .  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  .  .  .  .  }
   277  .  .  .  .  .  .  .  .  .  }
   278  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   279  .  .  .  .  .  .  .  .  .  .  NamePos: -
   280  .  .  .  .  .  .  .  .  .  .  Name: "bool"
   281  .  .  .  .  .  .  .  .  .  }
   282  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   283  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   284  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   285  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"all\"`"
   286  .  .  .  .  .  .  .  .  .  }
   287  .  .  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  .  .  11: *ast.Field {
   289  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   290  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   291  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   292  .  .  .  .  .  .  .  .  .  .  .  Name: "BuildTags"
   293  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   294  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   295  .  .  .  .  .  .  .  .  .  .  .  .  Name: "BuildTags"
   296  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 288)
   297  .  .  .  .  .  .  .  .  .  .  .  }
   298  .  .  .  .  .  .  .  .  .  .  }
   299  .  .  .  .  .  .  .  .  .  }
   300  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   301  .  .  .  .  .  .  .  .  .  .  NamePos: -
   302  .  .  .  .  .  .  .  .  .  .  Name: "string"
   303  .  .  .  .  .  .  .  .  .  }
   304  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   305  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   306  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   307  .  .  .  .  .  .  .  .  .  .  Value: "`mapstructure:\"tags\"`"
   308  .  .  .  .  .  .  .  .  .  }
   309  .  .  .  .  .  .  .  .  }
   310  .  .  .  .  .  .  .  .  12: *ast.Field {
   311  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   312  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   313  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   314  .  .  .  .  .  .  .  .  .  .  .  Name: "Version"
   315  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   316  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   317  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Version"
   318  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 310)
   319  .  .  .  .  .  .  .  .  .  .  .  }
   320  .  .  .  .  .  .  .  .  .  .  }
   321  .  .  .  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   323  .  .  .  .  .  .  .  .  .  .  NamePos: -
   324  .  .  .  .  .  .  .  .  .  .  Name: "int"
   325  .  .  .  .  .  .  .  .  .  }
   326  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   327  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   328  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   329  .  .  .  .  .  .  .  .  .  .  Value: "`json:\"-\"`"
   330  .  .  .  .  .  .  .  .  .  }
   331  .  .  .  .  .  .  .  .  }
   332  .  .  .  .  .  .  .  .  13: *ast.Field {
   333  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   334  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   335  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   336  .  .  .  .  .  .  .  .  .  .  .  Name: "Slices"
   337  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   338  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   339  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Slices"
   340  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 332)
   341  .  .  .  .  .  .  .  .  .  .  .  }
   342  .  .  .  .  .  .  .  .  .  .  }
   343  .  .  .  .  .  .  .  .  .  }
   344  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   345  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   346  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   347  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   348  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   349  .  .  .  .  .  .  .  .  .  .  }
   350  .  .  .  .  .  .  .  .  .  }
   351  .  .  .  .  .  .  .  .  }
   352  .  .  .  .  .  .  .  .  14: *ast.Field {
   353  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   354  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   355  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   356  .  .  .  .  .  .  .  .  .  .  .  Name: "SlicesStruct"
   357  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   358  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   359  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SlicesStruct"
   360  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 352)
   361  .  .  .  .  .  .  .  .  .  .  .  }
   362  .  .  .  .  .  .  .  .  .  .  }
   363  .  .  .  .  .  .  .  .  .  }
   364  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   365  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   366  .  .  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
   367  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   368  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   369  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   370  .  .  .  .  .  .  .  .  .  .  .  }
   371  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   372  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   373  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   374  .  .  .  .  .  .  .  .  .  .  .  }
   375  .  .  .  .  .  .  .  .  .  .  }
   376  .  .  .  .  .  .  .  .  .  }
   377  .  .  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  .  .  15: *ast.Field {
   379  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   380  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   381  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   382  .  .  .  .  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   383  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   384  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   385  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   386  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 378)
   387  .  .  .  .  .  .  .  .  .  .  .  }
   388  .  .  .  .  .  .  .  .  .  .  }
   389  .  .  .  .  .  .  .  .  .  }
   390  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   391  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   392  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   393  .  .  .  .  .  .  .  .  .  .  .  Star: -
   394  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   395  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   396  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   397  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   398  .  .  .  .  .  .  .  .  .  .  .  .  }
   399  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   400  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   401  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   402  .  .  .  .  .  .  .  .  .  .  .  .  }
   403  .  .  .  .  .  .  .  .  .  .  .  }
   404  .  .  .  .  .  .  .  .  .  .  }
   405  .  .  .  .  .  .  .  .  .  }
   406  .  .  .  .  .  .  .  .  }
   407  .  .  .  .  .  .  .  .  16: *ast.Field {
   408  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   409  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   410  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   411  .  .  .  .  .  .  .  .  .  .  .  Name: "SlicePoint"
   412  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   413  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   414  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SlicePoint"
   415  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 407)
   416  .  .  .  .  .  .  .  .  .  .  .  }
   417  .  .  .  .  .  .  .  .  .  .  }
   418  .  .  .  .  .  .  .  .  .  }
   419  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   420  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   421  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   422  .  .  .  .  .  .  .  .  .  .  .  Star: -
   423  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   424  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   425  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   426  .  .  .  .  .  .  .  .  .  .  .  }
   427  .  .  .  .  .  .  .  .  .  .  }
   428  .  .  .  .  .  .  .  .  .  }
   429  .  .  .  .  .  .  .  .  }
   430  .  .  .  .  .  .  .  .  17: *ast.Field {
   431  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   432  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   433  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   434  .  .  .  .  .  .  .  .  .  .  .  Name: "Arrayint"
   435  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   436  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   437  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Arrayint"
   438  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 430)
   439  .  .  .  .  .  .  .  .  .  .  .  }
   440  .  .  .  .  .  .  .  .  .  .  }
   441  .  .  .  .  .  .  .  .  .  }
   442  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   443  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   444  .  .  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   445  .  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   446  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   447  .  .  .  .  .  .  .  .  .  .  .  Value: "8"
   448  .  .  .  .  .  .  .  .  .  .  }
   449  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   450  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   451  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   452  .  .  .  .  .  .  .  .  .  .  }
   453  .  .  .  .  .  .  .  .  .  }
   454  .  .  .  .  .  .  .  .  }
   455  .  .  .  .  .  .  .  .  18: *ast.Field {
   456  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   457  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   458  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   459  .  .  .  .  .  .  .  .  .  .  .  Name: "ArrayPointer"
   460  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   461  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   462  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ArrayPointer"
   463  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 455)
   464  .  .  .  .  .  .  .  .  .  .  .  }
   465  .  .  .  .  .  .  .  .  .  .  }
   466  .  .  .  .  .  .  .  .  .  }
   467  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   468  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   469  .  .  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   470  .  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   471  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   472  .  .  .  .  .  .  .  .  .  .  .  Value: "8"
   473  .  .  .  .  .  .  .  .  .  .  }
   474  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   475  .  .  .  .  .  .  .  .  .  .  .  Star: -
   476  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   477  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   478  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   479  .  .  .  .  .  .  .  .  .  .  .  }
   480  .  .  .  .  .  .  .  .  .  .  }
   481  .  .  .  .  .  .  .  .  .  }
   482  .  .  .  .  .  .  .  .  }
   483  .  .  .  .  .  .  .  .  19: *ast.Field {
   484  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   485  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   486  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   487  .  .  .  .  .  .  .  .  .  .  .  Name: "ArrayStruct"
   488  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   489  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   490  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ArrayStruct"
   491  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 483)
   492  .  .  .  .  .  .  .  .  .  .  .  }
   493  .  .  .  .  .  .  .  .  .  .  }
   494  .  .  .  .  .  .  .  .  .  }
   495  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   496  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   497  .  .  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   498  .  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   499  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   500  .  .  .  .  .  .  .  .  .  .  .  Value: "8"
   501  .  .  .  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
   503  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   504  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   505  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   506  .  .  .  .  .  .  .  .  .  .  .  }
   507  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   508  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   509  .  .  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   510  .  .  .  .  .  .  .  .  .  .  .  }
   511  .  .  .  .  .  .  .  .  .  .  }
   512  .  .  .  .  .  .  .  .  .  }
   513  .  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  .  20: *ast.Field {
   515  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   516  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   517  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   518  .  .  .  .  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   519  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   520  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   521  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   522  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 514)
   523  .  .  .  .  .  .  .  .  .  .  .  }
   524  .  .  .  .  .  .  .  .  .  .  }
   525  .  .  .  .  .  .  .  .  .  }
   526  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   527  .  .  .  .  .  .  .  .  .  .  Lbrack: -
   528  .  .  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   529  .  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   530  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   531  .  .  .  .  .  .  .  .  .  .  .  Value: "8"
   532  .  .  .  .  .  .  .  .  .  .  }
   533  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   534  .  .  .  .  .  .  .  .  .  .  .  Star: -
   535  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   536  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   537  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   538  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   539  .  .  .  .  .  .  .  .  .  .  .  .  }
   540  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   541  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   542  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   543  .  .  .  .  .  .  .  .  .  .  .  .  }
   544  .  .  .  .  .  .  .  .  .  .  .  }
   545  .  .  .  .  .  .  .  .  .  .  }
   546  .  .  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  .  .  }
   548  .  .  .  .  .  .  .  .  21: *ast.Field {
   549  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   550  .  .  .  .  .  .  .  .  .  .  NamePos: -
   551  .  .  .  .  .  .  .  .  .  .  Name: "Mocker"
   552  .  .  .  .  .  .  .  .  .  }
   553  .  .  .  .  .  .  .  .  }
   554  .  .  .  .  .  .  .  .  22: *ast.Field {
   555  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   556  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   557  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   558  .  .  .  .  .  .  .  .  .  .  .  Name: "mocker"
   559  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   560  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   561  .  .  .  .  .  .  .  .  .  .  .  .  Name: "mocker"
   562  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 554)
   563  .  .  .  .  .  .  .  .  .  .  .  }
   564  .  .  .  .  .  .  .  .  .  .  }
   565  .  .  .  .  .  .  .  .  .  }
   566  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   567  .  .  .  .  .  .  .  .  .  .  NamePos: -
   568  .  .  .  .  .  .  .  .  .  .  Name: "Mocker"
   569  .  .  .  .  .  .  .  .  .  }
   570  .  .  .  .  .  .  .  .  }
   571  .  .  .  .  .  .  .  .  23: *ast.Field {
   572  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   573  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   574  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   575  .  .  .  .  .  .  .  .  .  .  .  Name: "Maps"
   576  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   577  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   578  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Maps"
   579  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 571)
   580  .  .  .  .  .  .  .  .  .  .  .  }
   581  .  .  .  .  .  .  .  .  .  .  }
   582  .  .  .  .  .  .  .  .  .  }
   583  .  .  .  .  .  .  .  .  .  Type: *ast.MapType {
   584  .  .  .  .  .  .  .  .  .  .  Map: -
   585  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   586  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   587  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   588  .  .  .  .  .  .  .  .  .  .  }
   589  .  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   590  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   591  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   592  .  .  .  .  .  .  .  .  .  .  }
   593  .  .  .  .  .  .  .  .  .  }
   594  .  .  .  .  .  .  .  .  }
   595  .  .  .  .  .  .  .  .  24: *ast.Field {
   596  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   597  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   598  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   599  .  .  .  .  .  .  .  .  .  .  .  Name: "MapsStruct"
   600  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   601  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   602  .  .  .  .  .  .  .  .  .  .  .  .  Name: "MapsStruct"
   603  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 595)
   604  .  .  .  .  .  .  .  .  .  .  .  }
   605  .  .  .  .  .  .  .  .  .  .  }
   606  .  .  .  .  .  .  .  .  .  }
   607  .  .  .  .  .  .  .  .  .  Type: *ast.MapType {
   608  .  .  .  .  .  .  .  .  .  .  Map: -
   609  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   610  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   611  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   612  .  .  .  .  .  .  .  .  .  .  }
   613  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   614  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   615  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   616  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   617  .  .  .  .  .  .  .  .  .  .  .  }
   618  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   619  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   620  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   621  .  .  .  .  .  .  .  .  .  .  .  }
   622  .  .  .  .  .  .  .  .  .  .  }
   623  .  .  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  .  .  }
   625  .  .  .  .  .  .  .  .  25: *ast.Field {
   626  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   627  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   628  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   629  .  .  .  .  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   630  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   631  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   632  .  .  .  .  .  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   633  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 625)
   634  .  .  .  .  .  .  .  .  .  .  .  }
   635  .  .  .  .  .  .  .  .  .  .  }
   636  .  .  .  .  .  .  .  .  .  }
   637  .  .  .  .  .  .  .  .  .  Type: *ast.MapType {
   638  .  .  .  .  .  .  .  .  .  .  Map: -
   639  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   640  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   641  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   642  .  .  .  .  .  .  .  .  .  .  }
   643  .  .  .  .  .  .  .  .  .  .  Value: *ast.StarExpr {
   644  .  .  .  .  .  .  .  .  .  .  .  Star: -
   645  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   646  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   647  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   648  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   649  .  .  .  .  .  .  .  .  .  .  .  .  }
   650  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   651  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   652  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   653  .  .  .  .  .  .  .  .  .  .  .  .  }
   654  .  .  .  .  .  .  .  .  .  .  .  }
   655  .  .  .  .  .  .  .  .  .  .  }
   656  .  .  .  .  .  .  .  .  .  }
   657  .  .  .  .  .  .  .  .  }
   658  .  .  .  .  .  .  .  .  26: *ast.Field {
   659  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   660  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   661  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   662  .  .  .  .  .  .  .  .  .  .  .  Name: "innerSource"
   663  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   664  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   665  .  .  .  .  .  .  .  .  .  .  .  .  Name: "innerSource"
   666  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 658)
   667  .  .  .  .  .  .  .  .  .  .  .  }
   668  .  .  .  .  .  .  .  .  .  .  }
   669  .  .  .  .  .  .  .  .  .  }
   670  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   671  .  .  .  .  .  .  .  .  .  .  NamePos: -
   672  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   673  .  .  .  .  .  .  .  .  .  }
   674  .  .  .  .  .  .  .  .  }
   675  .  .  .  .  .  .  .  }
   676  .  .  .  .  .  .  .  Closing: -
   677  .  .  .  .  .  .  }
   678  .  .  .  .  .  .  Incomplete: false
   679  .  .  .  .  .  }
   680  .  .  .  .  }
   681  .  .  .  }
   682  .  .  .  Rparen: -
   683  .  .  }
   684  .  .  2: *ast.FuncDecl {
   685  .  .  .  Name: *ast.Ident {
   686  .  .  .  .  NamePos: -
   687  .  .  .  .  Name: "main"
   688  .  .  .  .  Obj: *ast.Object {
   689  .  .  .  .  .  Kind: func
   690  .  .  .  .  .  Name: "main"
   691  .  .  .  .  .  Decl: *(obj @ 684)
   692  .  .  .  .  }
   693  .  .  .  }
   694  .  .  .  Type: *ast.FuncType {
   695  .  .  .  .  Func: -
   696  .  .  .  .  Params: *ast.FieldList {
   697  .  .  .  .  .  Opening: -
   698  .  .  .  .  .  Closing: -
   699  .  .  .  .  }
   700  .  .  .  }
   701  .  .  .  Body: *ast.BlockStmt {
   702  .  .  .  .  Lbrace: -
   703  .  .  .  .  List: []ast.Stmt (len = 2) {
   704  .  .  .  .  .  0: *ast.DeclStmt {
   705  .  .  .  .  .  .  Decl: *ast.GenDecl {
   706  .  .  .  .  .  .  .  TokPos: -
   707  .  .  .  .  .  .  .  Tok: var
   708  .  .  .  .  .  .  .  Lparen: -
   709  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   710  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
   711  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   712  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   713  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   714  .  .  .  .  .  .  .  .  .  .  .  Name: "_"
   715  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   716  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   717  .  .  .  .  .  .  .  .  .  .  .  .  Name: "_"
   718  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 710)
   719  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   720  .  .  .  .  .  .  .  .  .  .  .  }
   721  .  .  .  .  .  .  .  .  .  .  }
   722  .  .  .  .  .  .  .  .  .  }
   723  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   724  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   725  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   726  .  .  .  .  .  .  .  .  .  .  .  Name: "http"
   727  .  .  .  .  .  .  .  .  .  .  }
   728  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   729  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   730  .  .  .  .  .  .  .  .  .  .  .  Name: "Request"
   731  .  .  .  .  .  .  .  .  .  .  }
   732  .  .  .  .  .  .  .  .  .  }
   733  .  .  .  .  .  .  .  .  }
   734  .  .  .  .  .  .  .  }
   735  .  .  .  .  .  .  .  Rparen: -
   736  .  .  .  .  .  .  }
   737  .  .  .  .  .  }
   738  .  .  .  .  .  1: *ast.ExprStmt {
   739  .  .  .  .  .  .  X: *ast.CallExpr {
   740  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   741  .  .  .  .  .  .  .  .  X: *ast.Ident {
   742  .  .  .  .  .  .  .  .  .  NamePos: -
   743  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   744  .  .  .  .  .  .  .  .  }
   745  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   746  .  .  .  .  .  .  .  .  .  NamePos: -
   747  .  .  .  .  .  .  .  .  .  Name: "Execute"
   748  .  .  .  .  .  .  .  .  }
   749  .  .  .  .  .  .  .  }
   750  .  .  .  .  .  .  .  Lparen: -
   751  .  .  .  .  .  .  .  Ellipsis: -
   752  .  .  .  .  .  .  .  Rparen: -
   753  .  .  .  .  .  .  }
   754  .  .  .  .  .  }
   755  .  .  .  .  }
   756  .  .  .  .  Rbrace: -
   757  .  .  .  }
   758  .  .  }
   759  .  }
   760  .  Scope: *ast.Scope {
   761  .  .  Objects: map[string]*ast.Object (len = 2) {
   762  .  .  .  "Config": *(obj @ 52)
   763  .  .  .  "main": *(obj @ 688)
   764  .  .  }
   765  .  }
   766  .  Imports: []*ast.ImportSpec (len = 2) {
   767  .  .  0: *(obj @ 12)
   768  .  .  1: *(obj @ 24)
   769  .  }
   770  .  Unresolved: []*ast.Ident (len = 33) {
   771  .  .  0: *(obj @ 76)
   772  .  .  1: *(obj @ 82)
   773  .  .  2: *(obj @ 89)
   774  .  .  3: *(obj @ 112)
   775  .  .  4: *(obj @ 135)
   776  .  .  5: *(obj @ 160)
   777  .  .  6: *(obj @ 185)
   778  .  .  7: *(obj @ 205)
   779  .  .  8: *(obj @ 232)
   780  .  .  9: *(obj @ 255)
   781  .  .  10: *(obj @ 259)
   782  .  .  11: *(obj @ 278)
   783  .  .  12: *(obj @ 300)
   784  .  .  13: *(obj @ 322)
   785  .  .  14: *(obj @ 346)
   786  .  .  15: *(obj @ 367)
   787  .  .  16: *(obj @ 395)
   788  .  .  17: *(obj @ 423)
   789  .  .  18: *(obj @ 449)
   790  .  .  19: *(obj @ 476)
   791  .  .  20: *(obj @ 503)
   792  .  .  21: *(obj @ 536)
   793  .  .  22: *(obj @ 549)
   794  .  .  23: *(obj @ 566)
   795  .  .  24: *(obj @ 585)
   796  .  .  25: *(obj @ 589)
   797  .  .  26: *(obj @ 609)
   798  .  .  27: *(obj @ 614)
   799  .  .  28: *(obj @ 639)
   800  .  .  29: *(obj @ 646)
   801  .  .  30: *(obj @ 670)
   802  .  .  31: *(obj @ 724)
   803  .  .  32: *(obj @ 741)
   804  .  }
   805  .  Comments: []*ast.CommentGroup (len = 1) {
   806  .  .  0: *(obj @ 36)
   807  .  }
   808  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "main"
     3  }
     0  nil
     0  *ast.GenDecl {
     1  .  TokPos: -
     2  .  Tok: import
     3  .  Lparen: -
     4  .  Specs: []ast.Spec (len = 2) {
     5  .  .  0: *ast.ImportSpec {
     6  .  .  .  Name: *ast.Ident {
     7  .  .  .  .  NamePos: -
     8  .  .  .  .  Name: "pkgcmd"
     9  .  .  .  }
    10  .  .  .  Path: *ast.BasicLit {
    11  .  .  .  .  ValuePos: -
    12  .  .  .  .  Kind: STRING
    13  .  .  .  .  Value: "\"github.com/dongzerun/cmpgen/cmd\""
    14  .  .  .  }
    15  .  .  .  EndPos: -
    16  .  .  }
    17  .  .  1: *ast.ImportSpec {
    18  .  .  .  Path: *ast.BasicLit {
    19  .  .  .  .  ValuePos: -
    20  .  .  .  .  Kind: STRING
    21  .  .  .  .  Value: "\"net/http\""
    22  .  .  .  }
    23  .  .  .  EndPos: -
    24  .  .  }
    25  .  }
    26  .  Rparen: -
    27  }
     0  *ast.ImportSpec {
     1  .  Name: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Path: *ast.BasicLit {
     6  .  .  ValuePos: -
     7  .  .  Kind: STRING
     8  .  .  Value: "\"github.com/dongzerun/cmpgen/cmd\""
     9  .  }
    10  .  EndPos: -
    11  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"github.com/dongzerun/cmpgen/cmd\""
     4  }
     0  nil
     0  nil
     0  *ast.ImportSpec {
     1  .  Path: *ast.BasicLit {
     2  .  .  ValuePos: -
     3  .  .  Kind: STRING
     4  .  .  Value: "\"net/http\""
     5  .  }
     6  .  EndPos: -
     7  }
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"net/http\""
     4  }
     0  nil
     0  nil
     0  nil
     0  *ast.GenDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// Config ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  TokPos: -
    10  .  Tok: type
    11  .  Lparen: -
    12  .  Specs: []ast.Spec (len = 1) {
    13  .  .  0: *ast.TypeSpec {
    14  .  .  .  Name: *ast.Ident {
    15  .  .  .  .  NamePos: -
    16  .  .  .  .  Name: "Config"
    17  .  .  .  .  Obj: *ast.Object {
    18  .  .  .  .  .  Kind: type
    19  .  .  .  .  .  Name: "Config"
    20  .  .  .  .  .  Decl: *(obj @ 13)
    21  .  .  .  .  }
    22  .  .  .  }
    23  .  .  .  Assign: -
    24  .  .  .  Type: *ast.StructType {
    25  .  .  .  .  Struct: -
    26  .  .  .  .  Fields: *ast.FieldList {
    27  .  .  .  .  .  Opening: -
    28  .  .  .  .  .  List: []*ast.Field (len = 27) {
    29  .  .  .  .  .  .  0: *ast.Field {
    30  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    31  .  .  .  .  .  .  .  .  0: *ast.Ident {
    32  .  .  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  .  .  Name: "TXXXXXX"
    34  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    35  .  .  .  .  .  .  .  .  .  .  Kind: var
    36  .  .  .  .  .  .  .  .  .  .  Name: "TXXXXXX"
    37  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 29)
    38  .  .  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  .  .  }
    40  .  .  .  .  .  .  .  }
    41  .  .  .  .  .  .  .  Type: *ast.Ident {
    42  .  .  .  .  .  .  .  .  NamePos: -
    43  .  .  .  .  .  .  .  .  Name: "Test"
    44  .  .  .  .  .  .  .  }
    45  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  1: *ast.Field {
    47  .  .  .  .  .  .  .  Type: *ast.Ident {
    48  .  .  .  .  .  .  .  .  NamePos: -
    49  .  .  .  .  .  .  .  .  Name: "Test"
    50  .  .  .  .  .  .  .  }
    51  .  .  .  .  .  .  }
    52  .  .  .  .  .  .  2: *ast.Field {
    53  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    54  .  .  .  .  .  .  .  .  X: *ast.Ident {
    55  .  .  .  .  .  .  .  .  .  NamePos: -
    56  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
    57  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    59  .  .  .  .  .  .  .  .  .  NamePos: -
    60  .  .  .  .  .  .  .  .  .  Name: "RootApp"
    61  .  .  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  3: *ast.Field {
    65  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    66  .  .  .  .  .  .  .  .  0: *ast.Ident {
    67  .  .  .  .  .  .  .  .  .  NamePos: -
    68  .  .  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    69  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    70  .  .  .  .  .  .  .  .  .  .  Kind: var
    71  .  .  .  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    72  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 64)
    73  .  .  .  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  .  .  }
    75  .  .  .  .  .  .  .  }
    76  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    77  .  .  .  .  .  .  .  .  X: *ast.Ident {
    78  .  .  .  .  .  .  .  .  .  NamePos: -
    79  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
    80  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    82  .  .  .  .  .  .  .  .  .  NamePos: -
    83  .  .  .  .  .  .  .  .  .  Name: "RootApp"
    84  .  .  .  .  .  .  .  .  }
    85  .  .  .  .  .  .  .  }
    86  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  4: *ast.Field {
    88  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    89  .  .  .  .  .  .  .  .  0: *ast.Ident {
    90  .  .  .  .  .  .  .  .  .  NamePos: -
    91  .  .  .  .  .  .  .  .  .  Name: "Source"
    92  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    93  .  .  .  .  .  .  .  .  .  .  Kind: var
    94  .  .  .  .  .  .  .  .  .  .  Name: "Source"
    95  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 87)
    96  .  .  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  }
    99  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   100  .  .  .  .  .  .  .  .  X: *ast.Ident {
   101  .  .  .  .  .  .  .  .  .  NamePos: -
   102  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   103  .  .  .  .  .  .  .  .  }
   104  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   105  .  .  .  .  .  .  .  .  .  NamePos: -
   106  .  .  .  .  .  .  .  .  .  Name: "Source"
   107  .  .  .  .  .  .  .  .  }
   108  .  .  .  .  .  .  .  }
   109  .  .  .  .  .  .  }
   110  .  .  .  .  .  .  5: *ast.Field {
   111  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   112  .  .  .  .  .  .  .  .  0: *ast.Ident {
   113  .  .  .  .  .  .  .  .  .  NamePos: -
   114  .  .  .  .  .  .  .  .  .  Name: "PointerStruct"
   115  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   116  .  .  .  .  .  .  .  .  .  .  Kind: var
   117  .  .  .  .  .  .  .  .  .  .  Name: "PointerStruct"
   118  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 110)
   119  .  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  .  }
   122  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   123  .  .  .  .  .  .  .  .  Star: -
   124  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   125  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   126  .  .  .  .  .  .  .  .  .  .  NamePos: -
   127  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   128  .  .  .  .  .  .  .  .  .  }
   129  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   130  .  .  .  .  .  .  .  .  .  .  NamePos: -
   131  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   132  .  .  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  .  .  }
   134  .  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  6: *ast.Field {
   137  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   138  .  .  .  .  .  .  .  .  0: *ast.Ident {
   139  .  .  .  .  .  .  .  .  .  NamePos: -
   140  .  .  .  .  .  .  .  .  .  Name: "PointInt"
   141  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   142  .  .  .  .  .  .  .  .  .  .  Kind: var
   143  .  .  .  .  .  .  .  .  .  .  Name: "PointInt"
   144  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 136)
   145  .  .  .  .  .  .  .  .  .  }
   146  .  .  .  .  .  .  .  .  }
   147  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   149  .  .  .  .  .  .  .  .  Star: -
   150  .  .  .  .  .  .  .  .  X: *ast.Ident {
   151  .  .  .  .  .  .  .  .  .  NamePos: -
   152  .  .  .  .  .  .  .  .  .  Name: "int"
   153  .  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  }
   155  .  .  .  .  .  .  }
   156  .  .  .  .  .  .  7: *ast.Field {
   157  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   158  .  .  .  .  .  .  .  .  0: *ast.Ident {
   159  .  .  .  .  .  .  .  .  .  NamePos: -
   160  .  .  .  .  .  .  .  .  .  Name: "PointString"
   161  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   162  .  .  .  .  .  .  .  .  .  .  Kind: var
   163  .  .  .  .  .  .  .  .  .  .  Name: "PointString"
   164  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 156)
   165  .  .  .  .  .  .  .  .  .  }
   166  .  .  .  .  .  .  .  .  }
   167  .  .  .  .  .  .  .  }
   168  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   169  .  .  .  .  .  .  .  .  Star: -
   170  .  .  .  .  .  .  .  .  X: *ast.Ident {
   171  .  .  .  .  .  .  .  .  .  NamePos: -
   172  .  .  .  .  .  .  .  .  .  Name: "string"
   173  .  .  .  .  .  .  .  .  }
   174  .  .  .  .  .  .  .  }
   175  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   176  .  .  .  .  .  .  .  .  ValuePos: -
   177  .  .  .  .  .  .  .  .  Kind: STRING
   178  .  .  .  .  .  .  .  .  Value: "`json:\"pointstring\"`"
   179  .  .  .  .  .  .  .  }
   180  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  8: *ast.Field {
   182  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   183  .  .  .  .  .  .  .  .  0: *ast.Ident {
   184  .  .  .  .  .  .  .  .  .  NamePos: -
   185  .  .  .  .  .  .  .  .  .  Name: "PointSlice"
   186  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   187  .  .  .  .  .  .  .  .  .  .  Kind: var
   188  .  .  .  .  .  .  .  .  .  .  Name: "PointSlice"
   189  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 181)
   190  .  .  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  .  }
   192  .  .  .  .  .  .  .  }
   193  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   194  .  .  .  .  .  .  .  .  Star: -
   195  .  .  .  .  .  .  .  .  X: *ast.ArrayType {
   196  .  .  .  .  .  .  .  .  .  Lbrack: -
   197  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   198  .  .  .  .  .  .  .  .  .  .  NamePos: -
   199  .  .  .  .  .  .  .  .  .  .  Name: "int"
   200  .  .  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  .  .  }
   202  .  .  .  .  .  .  .  }
   203  .  .  .  .  .  .  }
   204  .  .  .  .  .  .  9: *ast.Field {
   205  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   206  .  .  .  .  .  .  .  .  0: *ast.Ident {
   207  .  .  .  .  .  .  .  .  .  NamePos: -
   208  .  .  .  .  .  .  .  .  .  Name: "PointMap"
   209  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   210  .  .  .  .  .  .  .  .  .  .  Kind: var
   211  .  .  .  .  .  .  .  .  .  .  Name: "PointMap"
   212  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 204)
   213  .  .  .  .  .  .  .  .  .  }
   214  .  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   217  .  .  .  .  .  .  .  .  Star: -
   218  .  .  .  .  .  .  .  .  X: *ast.MapType {
   219  .  .  .  .  .  .  .  .  .  Map: -
   220  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   221  .  .  .  .  .  .  .  .  .  .  NamePos: -
   222  .  .  .  .  .  .  .  .  .  .  Name: "string"
   223  .  .  .  .  .  .  .  .  .  }
   224  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   225  .  .  .  .  .  .  .  .  .  .  NamePos: -
   226  .  .  .  .  .  .  .  .  .  .  Name: "int"
   227  .  .  .  .  .  .  .  .  .  }
   228  .  .  .  .  .  .  .  .  }
   229  .  .  .  .  .  .  .  }
   230  .  .  .  .  .  .  }
   231  .  .  .  .  .  .  10: *ast.Field {
   232  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   233  .  .  .  .  .  .  .  .  0: *ast.Ident {
   234  .  .  .  .  .  .  .  .  .  NamePos: -
   235  .  .  .  .  .  .  .  .  .  Name: "All"
   236  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   237  .  .  .  .  .  .  .  .  .  .  Kind: var
   238  .  .  .  .  .  .  .  .  .  .  Name: "All"
   239  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 231)
   240  .  .  .  .  .  .  .  .  .  }
   241  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  }
   243  .  .  .  .  .  .  .  Type: *ast.Ident {
   244  .  .  .  .  .  .  .  .  NamePos: -
   245  .  .  .  .  .  .  .  .  Name: "bool"
   246  .  .  .  .  .  .  .  }
   247  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   248  .  .  .  .  .  .  .  .  ValuePos: -
   249  .  .  .  .  .  .  .  .  Kind: STRING
   250  .  .  .  .  .  .  .  .  Value: "`json:\"all\"`"
   251  .  .  .  .  .  .  .  }
   252  .  .  .  .  .  .  }
   253  .  .  .  .  .  .  11: *ast.Field {
   254  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   255  .  .  .  .  .  .  .  .  0: *ast.Ident {
   256  .  .  .  .  .  .  .  .  .  NamePos: -
   257  .  .  .  .  .  .  .  .  .  Name: "BuildTags"
   258  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   259  .  .  .  .  .  .  .  .  .  .  Kind: var
   260  .  .  .  .  .  .  .  .  .  .  Name: "BuildTags"
   261  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 253)
   262  .  .  .  .  .  .  .  .  .  }
   263  .  .  .  .  .  .  .  .  }
   264  .  .  .  .  .  .  .  }
   265  .  .  .  .  .  .  .  Type: *ast.Ident {
   266  .  .  .  .  .  .  .  .  NamePos: -
   267  .  .  .  .  .  .  .  .  Name: "string"
   268  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   270  .  .  .  .  .  .  .  .  ValuePos: -
   271  .  .  .  .  .  .  .  .  Kind: STRING
   272  .  .  .  .  .  .  .  .  Value: "`mapstructure:\"tags\"`"
   273  .  .  .  .  .  .  .  }
   274  .  .  .  .  .  .  }
   275  .  .  .  .  .  .  12: *ast.Field {
   276  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   277  .  .  .  .  .  .  .  .  0: *ast.Ident {
   278  .  .  .  .  .  .  .  .  .  NamePos: -
   279  .  .  .  .  .  .  .  .  .  Name: "Version"
   280  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   281  .  .  .  .  .  .  .  .  .  .  Kind: var
   282  .  .  .  .  .  .  .  .  .  .  Name: "Version"
   283  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 275)
   284  .  .  .  .  .  .  .  .  .  }
   285  .  .  .  .  .  .  .  .  }
   286  .  .  .  .  .  .  .  }
   287  .  .  .  .  .  .  .  Type: *ast.Ident {
   288  .  .  .  .  .  .  .  .  NamePos: -
   289  .  .  .  .  .  .  .  .  Name: "int"
   290  .  .  .  .  .  .  .  }
   291  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   292  .  .  .  .  .  .  .  .  ValuePos: -
   293  .  .  .  .  .  .  .  .  Kind: STRING
   294  .  .  .  .  .  .  .  .  Value: "`json:\"-\"`"
   295  .  .  .  .  .  .  .  }
   296  .  .  .  .  .  .  }
   297  .  .  .  .  .  .  13: *ast.Field {
   298  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   299  .  .  .  .  .  .  .  .  0: *ast.Ident {
   300  .  .  .  .  .  .  .  .  .  NamePos: -
   301  .  .  .  .  .  .  .  .  .  Name: "Slices"
   302  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   303  .  .  .  .  .  .  .  .  .  .  Kind: var
   304  .  .  .  .  .  .  .  .  .  .  Name: "Slices"
   305  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 297)
   306  .  .  .  .  .  .  .  .  .  }
   307  .  .  .  .  .  .  .  .  }
   308  .  .  .  .  .  .  .  }
   309  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   310  .  .  .  .  .  .  .  .  Lbrack: -
   311  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   312  .  .  .  .  .  .  .  .  .  NamePos: -
   313  .  .  .  .  .  .  .  .  .  Name: "int"
   314  .  .  .  .  .  .  .  .  }
   315  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  }
   317  .  .  .  .  .  .  14: *ast.Field {
   318  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   319  .  .  .  .  .  .  .  .  0: *ast.Ident {
   320  .  .  .  .  .  .  .  .  .  NamePos: -
   321  .  .  .  .  .  .  .  .  .  Name: "SlicesStruct"
   322  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   323  .  .  .  .  .  .  .  .  .  .  Kind: var
   324  .  .  .  .  .  .  .  .  .  .  Name: "SlicesStruct"
   325  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 317)
   326  .  .  .  .  .  .  .  .  .  }
   327  .  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  .  }
   329  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   330  .  .  .  .  .  .  .  .  Lbrack: -
   331  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
   332  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   333  .  .  .  .  .  .  .  .  .  .  NamePos: -
   334  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   335  .  .  .  .  .  .  .  .  .  }
   336  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   337  .  .  .  .  .  .  .  .  .  .  NamePos: -
   338  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   339  .  .  .  .  .  .  .  .  .  }
   340  .  .  .  .  .  .  .  .  }
   341  .  .  .  .  .  .  .  }
   342  .  .  .  .  .  .  }
   343  .  .  .  .  .  .  15: *ast.Field {
   344  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   345  .  .  .  .  .  .  .  .  0: *ast.Ident {
   346  .  .  .  .  .  .  .  .  .  NamePos: -
   347  .  .  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   348  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   349  .  .  .  .  .  .  .  .  .  .  Kind: var
   350  .  .  .  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   351  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 343)
   352  .  .  .  .  .  .  .  .  .  }
   353  .  .  .  .  .  .  .  .  }
   354  .  .  .  .  .  .  .  }
   355  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   356  .  .  .  .  .  .  .  .  Lbrack: -
   357  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   358  .  .  .  .  .  .  .  .  .  Star: -
   359  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   360  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   361  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   362  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   363  .  .  .  .  .  .  .  .  .  .  }
   364  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   365  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   366  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   367  .  .  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  .  }
   370  .  .  .  .  .  .  .  }
   371  .  .  .  .  .  .  }
   372  .  .  .  .  .  .  16: *ast.Field {
   373  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   374  .  .  .  .  .  .  .  .  0: *ast.Ident {
   375  .  .  .  .  .  .  .  .  .  NamePos: -
   376  .  .  .  .  .  .  .  .  .  Name: "SlicePoint"
   377  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   378  .  .  .  .  .  .  .  .  .  .  Kind: var
   379  .  .  .  .  .  .  .  .  .  .  Name: "SlicePoint"
   380  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 372)
   381  .  .  .  .  .  .  .  .  .  }
   382  .  .  .  .  .  .  .  .  }
   383  .  .  .  .  .  .  .  }
   384  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   385  .  .  .  .  .  .  .  .  Lbrack: -
   386  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   387  .  .  .  .  .  .  .  .  .  Star: -
   388  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   389  .  .  .  .  .  .  .  .  .  .  NamePos: -
   390  .  .  .  .  .  .  .  .  .  .  Name: "int"
   391  .  .  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  .  .  }
   393  .  .  .  .  .  .  .  }
   394  .  .  .  .  .  .  }
   395  .  .  .  .  .  .  17: *ast.Field {
   396  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   397  .  .  .  .  .  .  .  .  0: *ast.Ident {
   398  .  .  .  .  .  .  .  .  .  NamePos: -
   399  .  .  .  .  .  .  .  .  .  Name: "Arrayint"
   400  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   401  .  .  .  .  .  .  .  .  .  .  Kind: var
   402  .  .  .  .  .  .  .  .  .  .  Name: "Arrayint"
   403  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 395)
   404  .  .  .  .  .  .  .  .  .  }
   405  .  .  .  .  .  .  .  .  }
   406  .  .  .  .  .  .  .  }
   407  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   408  .  .  .  .  .  .  .  .  Lbrack: -
   409  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   410  .  .  .  .  .  .  .  .  .  ValuePos: -
   411  .  .  .  .  .  .  .  .  .  Kind: INT
   412  .  .  .  .  .  .  .  .  .  Value: "8"
   413  .  .  .  .  .  .  .  .  }
   414  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   415  .  .  .  .  .  .  .  .  .  NamePos: -
   416  .  .  .  .  .  .  .  .  .  Name: "int"
   417  .  .  .  .  .  .  .  .  }
   418  .  .  .  .  .  .  .  }
   419  .  .  .  .  .  .  }
   420  .  .  .  .  .  .  18: *ast.Field {
   421  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   422  .  .  .  .  .  .  .  .  0: *ast.Ident {
   423  .  .  .  .  .  .  .  .  .  NamePos: -
   424  .  .  .  .  .  .  .  .  .  Name: "ArrayPointer"
   425  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   426  .  .  .  .  .  .  .  .  .  .  Kind: var
   427  .  .  .  .  .  .  .  .  .  .  Name: "ArrayPointer"
   428  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 420)
   429  .  .  .  .  .  .  .  .  .  }
   430  .  .  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  .  }
   432  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   433  .  .  .  .  .  .  .  .  Lbrack: -
   434  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   435  .  .  .  .  .  .  .  .  .  ValuePos: -
   436  .  .  .  .  .  .  .  .  .  Kind: INT
   437  .  .  .  .  .  .  .  .  .  Value: "8"
   438  .  .  .  .  .  .  .  .  }
   439  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   440  .  .  .  .  .  .  .  .  .  Star: -
   441  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   442  .  .  .  .  .  .  .  .  .  .  NamePos: -
   443  .  .  .  .  .  .  .  .  .  .  Name: "int"
   444  .  .  .  .  .  .  .  .  .  }
   445  .  .  .  .  .  .  .  .  }
   446  .  .  .  .  .  .  .  }
   447  .  .  .  .  .  .  }
   448  .  .  .  .  .  .  19: *ast.Field {
   449  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   450  .  .  .  .  .  .  .  .  0: *ast.Ident {
   451  .  .  .  .  .  .  .  .  .  NamePos: -
   452  .  .  .  .  .  .  .  .  .  Name: "ArrayStruct"
   453  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   454  .  .  .  .  .  .  .  .  .  .  Kind: var
   455  .  .  .  .  .  .  .  .  .  .  Name: "ArrayStruct"
   456  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 448)
   457  .  .  .  .  .  .  .  .  .  }
   458  .  .  .  .  .  .  .  .  }
   459  .  .  .  .  .  .  .  }
   460  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   461  .  .  .  .  .  .  .  .  Lbrack: -
   462  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   463  .  .  .  .  .  .  .  .  .  ValuePos: -
   464  .  .  .  .  .  .  .  .  .  Kind: INT
   465  .  .  .  .  .  .  .  .  .  Value: "8"
   466  .  .  .  .  .  .  .  .  }
   467  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
   468  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   469  .  .  .  .  .  .  .  .  .  .  NamePos: -
   470  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   471  .  .  .  .  .  .  .  .  .  }
   472  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   473  .  .  .  .  .  .  .  .  .  .  NamePos: -
   474  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   475  .  .  .  .  .  .  .  .  .  }
   476  .  .  .  .  .  .  .  .  }
   477  .  .  .  .  .  .  .  }
   478  .  .  .  .  .  .  }
   479  .  .  .  .  .  .  20: *ast.Field {
   480  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   481  .  .  .  .  .  .  .  .  0: *ast.Ident {
   482  .  .  .  .  .  .  .  .  .  NamePos: -
   483  .  .  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   484  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   485  .  .  .  .  .  .  .  .  .  .  Kind: var
   486  .  .  .  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   487  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 479)
   488  .  .  .  .  .  .  .  .  .  }
   489  .  .  .  .  .  .  .  .  }
   490  .  .  .  .  .  .  .  }
   491  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   492  .  .  .  .  .  .  .  .  Lbrack: -
   493  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   494  .  .  .  .  .  .  .  .  .  ValuePos: -
   495  .  .  .  .  .  .  .  .  .  Kind: INT
   496  .  .  .  .  .  .  .  .  .  Value: "8"
   497  .  .  .  .  .  .  .  .  }
   498  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   499  .  .  .  .  .  .  .  .  .  Star: -
   500  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   501  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   502  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   503  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   504  .  .  .  .  .  .  .  .  .  .  }
   505  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   506  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   507  .  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   508  .  .  .  .  .  .  .  .  .  .  }
   509  .  .  .  .  .  .  .  .  .  }
   510  .  .  .  .  .  .  .  .  }
   511  .  .  .  .  .  .  .  }
   512  .  .  .  .  .  .  }
   513  .  .  .  .  .  .  21: *ast.Field {
   514  .  .  .  .  .  .  .  Type: *ast.Ident {
   515  .  .  .  .  .  .  .  .  NamePos: -
   516  .  .  .  .  .  .  .  .  Name: "Mocker"
   517  .  .  .  .  .  .  .  }
   518  .  .  .  .  .  .  }
   519  .  .  .  .  .  .  22: *ast.Field {
   520  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   521  .  .  .  .  .  .  .  .  0: *ast.Ident {
   522  .  .  .  .  .  .  .  .  .  NamePos: -
   523  .  .  .  .  .  .  .  .  .  Name: "mocker"
   524  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   525  .  .  .  .  .  .  .  .  .  .  Kind: var
   526  .  .  .  .  .  .  .  .  .  .  Name: "mocker"
   527  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 519)
   528  .  .  .  .  .  .  .  .  .  }
   529  .  .  .  .  .  .  .  .  }
   530  .  .  .  .  .  .  .  }
   531  .  .  .  .  .  .  .  Type: *ast.Ident {
   532  .  .  .  .  .  .  .  .  NamePos: -
   533  .  .  .  .  .  .  .  .  Name: "Mocker"
   534  .  .  .  .  .  .  .  }
   535  .  .  .  .  .  .  }
   536  .  .  .  .  .  .  23: *ast.Field {
   537  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   538  .  .  .  .  .  .  .  .  0: *ast.Ident {
   539  .  .  .  .  .  .  .  .  .  NamePos: -
   540  .  .  .  .  .  .  .  .  .  Name: "Maps"
   541  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   542  .  .  .  .  .  .  .  .  .  .  Kind: var
   543  .  .  .  .  .  .  .  .  .  .  Name: "Maps"
   544  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 536)
   545  .  .  .  .  .  .  .  .  .  }
   546  .  .  .  .  .  .  .  .  }
   547  .  .  .  .  .  .  .  }
   548  .  .  .  .  .  .  .  Type: *ast.MapType {
   549  .  .  .  .  .  .  .  .  Map: -
   550  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   551  .  .  .  .  .  .  .  .  .  NamePos: -
   552  .  .  .  .  .  .  .  .  .  Name: "string"
   553  .  .  .  .  .  .  .  .  }
   554  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   555  .  .  .  .  .  .  .  .  .  NamePos: -
   556  .  .  .  .  .  .  .  .  .  Name: "int"
   557  .  .  .  .  .  .  .  .  }
   558  .  .  .  .  .  .  .  }
   559  .  .  .  .  .  .  }
   560  .  .  .  .  .  .  24: *ast.Field {
   561  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   562  .  .  .  .  .  .  .  .  0: *ast.Ident {
   563  .  .  .  .  .  .  .  .  .  NamePos: -
   564  .  .  .  .  .  .  .  .  .  Name: "MapsStruct"
   565  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   566  .  .  .  .  .  .  .  .  .  .  Kind: var
   567  .  .  .  .  .  .  .  .  .  .  Name: "MapsStruct"
   568  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 560)
   569  .  .  .  .  .  .  .  .  .  }
   570  .  .  .  .  .  .  .  .  }
   571  .  .  .  .  .  .  .  }
   572  .  .  .  .  .  .  .  Type: *ast.MapType {
   573  .  .  .  .  .  .  .  .  Map: -
   574  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   575  .  .  .  .  .  .  .  .  .  NamePos: -
   576  .  .  .  .  .  .  .  .  .  Name: "string"
   577  .  .  .  .  .  .  .  .  }
   578  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   579  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   580  .  .  .  .  .  .  .  .  .  .  NamePos: -
   581  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   582  .  .  .  .  .  .  .  .  .  }
   583  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   584  .  .  .  .  .  .  .  .  .  .  NamePos: -
   585  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   586  .  .  .  .  .  .  .  .  .  }
   587  .  .  .  .  .  .  .  .  }
   588  .  .  .  .  .  .  .  }
   589  .  .  .  .  .  .  }
   590  .  .  .  .  .  .  25: *ast.Field {
   591  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   592  .  .  .  .  .  .  .  .  0: *ast.Ident {
   593  .  .  .  .  .  .  .  .  .  NamePos: -
   594  .  .  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   595  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   596  .  .  .  .  .  .  .  .  .  .  Kind: var
   597  .  .  .  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   598  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 590)
   599  .  .  .  .  .  .  .  .  .  }
   600  .  .  .  .  .  .  .  .  }
   601  .  .  .  .  .  .  .  }
   602  .  .  .  .  .  .  .  Type: *ast.MapType {
   603  .  .  .  .  .  .  .  .  Map: -
   604  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   605  .  .  .  .  .  .  .  .  .  NamePos: -
   606  .  .  .  .  .  .  .  .  .  Name: "string"
   607  .  .  .  .  .  .  .  .  }
   608  .  .  .  .  .  .  .  .  Value: *ast.StarExpr {
   609  .  .  .  .  .  .  .  .  .  Star: -
   610  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   611  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   612  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   613  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   614  .  .  .  .  .  .  .  .  .  .  }
   615  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   616  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   617  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   618  .  .  .  .  .  .  .  .  .  .  }
   619  .  .  .  .  .  .  .  .  .  }
   620  .  .  .  .  .  .  .  .  }
   621  .  .  .  .  .  .  .  }
   622  .  .  .  .  .  .  }
   623  .  .  .  .  .  .  26: *ast.Field {
   624  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   625  .  .  .  .  .  .  .  .  0: *ast.Ident {
   626  .  .  .  .  .  .  .  .  .  NamePos: -
   627  .  .  .  .  .  .  .  .  .  Name: "innerSource"
   628  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   629  .  .  .  .  .  .  .  .  .  .  Kind: var
   630  .  .  .  .  .  .  .  .  .  .  Name: "innerSource"
   631  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 623)
   632  .  .  .  .  .  .  .  .  .  }
   633  .  .  .  .  .  .  .  .  }
   634  .  .  .  .  .  .  .  }
   635  .  .  .  .  .  .  .  Type: *ast.Ident {
   636  .  .  .  .  .  .  .  .  NamePos: -
   637  .  .  .  .  .  .  .  .  Name: "Source"
   638  .  .  .  .  .  .  .  }
   639  .  .  .  .  .  .  }
   640  .  .  .  .  .  }
   641  .  .  .  .  .  Closing: -
   642  .  .  .  .  }
   643  .  .  .  .  Incomplete: false
   644  .  .  .  }
   645  .  .  }
   646  .  }
   647  .  Rparen: -
   648  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// Config ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// Config ..."
     3  }
     0  nil
     0  nil
     0  *ast.TypeSpec {
     1  .  Name: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "Config"
     4  .  .  Obj: *ast.Object {
     5  .  .  .  Kind: type
     6  .  .  .  Name: "Config"
     7  .  .  .  Decl: *(obj @ 0)
     8  .  .  }
     9  .  }
    10  .  Assign: -
    11  .  Type: *ast.StructType {
    12  .  .  Struct: -
    13  .  .  Fields: *ast.FieldList {
    14  .  .  .  Opening: -
    15  .  .  .  List: []*ast.Field (len = 27) {
    16  .  .  .  .  0: *ast.Field {
    17  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    18  .  .  .  .  .  .  0: *ast.Ident {
    19  .  .  .  .  .  .  .  NamePos: -
    20  .  .  .  .  .  .  .  Name: "TXXXXXX"
    21  .  .  .  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  .  .  .  Kind: var
    23  .  .  .  .  .  .  .  .  Name: "TXXXXXX"
    24  .  .  .  .  .  .  .  .  Decl: *(obj @ 16)
    25  .  .  .  .  .  .  .  }
    26  .  .  .  .  .  .  }
    27  .  .  .  .  .  }
    28  .  .  .  .  .  Type: *ast.Ident {
    29  .  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  .  Name: "Test"
    31  .  .  .  .  .  }
    32  .  .  .  .  }
    33  .  .  .  .  1: *ast.Field {
    34  .  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  .  Name: "Test"
    37  .  .  .  .  .  }
    38  .  .  .  .  }
    39  .  .  .  .  2: *ast.Field {
    40  .  .  .  .  .  Type: *ast.SelectorExpr {
    41  .  .  .  .  .  .  X: *ast.Ident {
    42  .  .  .  .  .  .  .  NamePos: -
    43  .  .  .  .  .  .  .  Name: "pkgcmd"
    44  .  .  .  .  .  .  }
    45  .  .  .  .  .  .  Sel: *ast.Ident {
    46  .  .  .  .  .  .  .  NamePos: -
    47  .  .  .  .  .  .  .  Name: "RootApp"
    48  .  .  .  .  .  .  }
    49  .  .  .  .  .  }
    50  .  .  .  .  }
    51  .  .  .  .  3: *ast.Field {
    52  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    53  .  .  .  .  .  .  0: *ast.Ident {
    54  .  .  .  .  .  .  .  NamePos: -
    55  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    56  .  .  .  .  .  .  .  Obj: *ast.Object {
    57  .  .  .  .  .  .  .  .  Kind: var
    58  .  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    59  .  .  .  .  .  .  .  .  Decl: *(obj @ 51)
    60  .  .  .  .  .  .  .  }
    61  .  .  .  .  .  .  }
    62  .  .  .  .  .  }
    63  .  .  .  .  .  Type: *ast.SelectorExpr {
    64  .  .  .  .  .  .  X: *ast.Ident {
    65  .  .  .  .  .  .  .  NamePos: -
    66  .  .  .  .  .  .  .  Name: "pkgcmd"
    67  .  .  .  .  .  .  }
    68  .  .  .  .  .  .  Sel: *ast.Ident {
    69  .  .  .  .  .  .  .  NamePos: -
    70  .  .  .  .  .  .  .  Name: "RootApp"
    71  .  .  .  .  .  .  }
    72  .  .  .  .  .  }
    73  .  .  .  .  }
    74  .  .  .  .  4: *ast.Field {
    75  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    76  .  .  .  .  .  .  0: *ast.Ident {
    77  .  .  .  .  .  .  .  NamePos: -
    78  .  .  .  .  .  .  .  Name: "Source"
    79  .  .  .  .  .  .  .  Obj: *ast.Object {
    80  .  .  .  .  .  .  .  .  Kind: var
    81  .  .  .  .  .  .  .  .  Name: "Source"
    82  .  .  .  .  .  .  .  .  Decl: *(obj @ 74)
    83  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  }
    85  .  .  .  .  .  }
    86  .  .  .  .  .  Type: *ast.SelectorExpr {
    87  .  .  .  .  .  .  X: *ast.Ident {
    88  .  .  .  .  .  .  .  NamePos: -
    89  .  .  .  .  .  .  .  Name: "pkgcmd"
    90  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  Sel: *ast.Ident {
    92  .  .  .  .  .  .  .  NamePos: -
    93  .  .  .  .  .  .  .  Name: "Source"
    94  .  .  .  .  .  .  }
    95  .  .  .  .  .  }
    96  .  .  .  .  }
    97  .  .  .  .  5: *ast.Field {
    98  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    99  .  .  .  .  .  .  0: *ast.Ident {
   100  .  .  .  .  .  .  .  NamePos: -
   101  .  .  .  .  .  .  .  Name: "PointerStruct"
   102  .  .  .  .  .  .  .  Obj: *ast.Object {
   103  .  .  .  .  .  .  .  .  Kind: var
   104  .  .  .  .  .  .  .  .  Name: "PointerStruct"
   105  .  .  .  .  .  .  .  .  Decl: *(obj @ 97)
   106  .  .  .  .  .  .  .  }
   107  .  .  .  .  .  .  }
   108  .  .  .  .  .  }
   109  .  .  .  .  .  Type: *ast.StarExpr {
   110  .  .  .  .  .  .  Star: -
   111  .  .  .  .  .  .  X: *ast.SelectorExpr {
   112  .  .  .  .  .  .  .  X: *ast.Ident {
   113  .  .  .  .  .  .  .  .  NamePos: -
   114  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   115  .  .  .  .  .  .  .  }
   116  .  .  .  .  .  .  .  Sel: *ast.Ident {
   117  .  .  .  .  .  .  .  .  NamePos: -
   118  .  .  .  .  .  .  .  .  Name: "RootApp"
   119  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  }
   121  .  .  .  .  .  }
   122  .  .  .  .  }
   123  .  .  .  .  6: *ast.Field {
   124  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   125  .  .  .  .  .  .  0: *ast.Ident {
   126  .  .  .  .  .  .  .  NamePos: -
   127  .  .  .  .  .  .  .  Name: "PointInt"
   128  .  .  .  .  .  .  .  Obj: *ast.Object {
   129  .  .  .  .  .  .  .  .  Kind: var
   130  .  .  .  .  .  .  .  .  Name: "PointInt"
   131  .  .  .  .  .  .  .  .  Decl: *(obj @ 123)
   132  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  }
   134  .  .  .  .  .  }
   135  .  .  .  .  .  Type: *ast.StarExpr {
   136  .  .  .  .  .  .  Star: -
   137  .  .  .  .  .  .  X: *ast.Ident {
   138  .  .  .  .  .  .  .  NamePos: -
   139  .  .  .  .  .  .  .  Name: "int"
   140  .  .  .  .  .  .  }
   141  .  .  .  .  .  }
   142  .  .  .  .  }
   143  .  .  .  .  7: *ast.Field {
   144  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   145  .  .  .  .  .  .  0: *ast.Ident {
   146  .  .  .  .  .  .  .  NamePos: -
   147  .  .  .  .  .  .  .  Name: "PointString"
   148  .  .  .  .  .  .  .  Obj: *ast.Object {
   149  .  .  .  .  .  .  .  .  Kind: var
   150  .  .  .  .  .  .  .  .  Name: "PointString"
   151  .  .  .  .  .  .  .  .  Decl: *(obj @ 143)
   152  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  }
   154  .  .  .  .  .  }
   155  .  .  .  .  .  Type: *ast.StarExpr {
   156  .  .  .  .  .  .  Star: -
   157  .  .  .  .  .  .  X: *ast.Ident {
   158  .  .  .  .  .  .  .  NamePos: -
   159  .  .  .  .  .  .  .  Name: "string"
   160  .  .  .  .  .  .  }
   161  .  .  .  .  .  }
   162  .  .  .  .  .  Tag: *ast.BasicLit {
   163  .  .  .  .  .  .  ValuePos: -
   164  .  .  .  .  .  .  Kind: STRING
   165  .  .  .  .  .  .  Value: "`json:\"pointstring\"`"
   166  .  .  .  .  .  }
   167  .  .  .  .  }
   168  .  .  .  .  8: *ast.Field {
   169  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   170  .  .  .  .  .  .  0: *ast.Ident {
   171  .  .  .  .  .  .  .  NamePos: -
   172  .  .  .  .  .  .  .  Name: "PointSlice"
   173  .  .  .  .  .  .  .  Obj: *ast.Object {
   174  .  .  .  .  .  .  .  .  Kind: var
   175  .  .  .  .  .  .  .  .  Name: "PointSlice"
   176  .  .  .  .  .  .  .  .  Decl: *(obj @ 168)
   177  .  .  .  .  .  .  .  }
   178  .  .  .  .  .  .  }
   179  .  .  .  .  .  }
   180  .  .  .  .  .  Type: *ast.StarExpr {
   181  .  .  .  .  .  .  Star: -
   182  .  .  .  .  .  .  X: *ast.ArrayType {
   183  .  .  .  .  .  .  .  Lbrack: -
   184  .  .  .  .  .  .  .  Elt: *ast.Ident {
   185  .  .  .  .  .  .  .  .  NamePos: -
   186  .  .  .  .  .  .  .  .  Name: "int"
   187  .  .  .  .  .  .  .  }
   188  .  .  .  .  .  .  }
   189  .  .  .  .  .  }
   190  .  .  .  .  }
   191  .  .  .  .  9: *ast.Field {
   192  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   193  .  .  .  .  .  .  0: *ast.Ident {
   194  .  .  .  .  .  .  .  NamePos: -
   195  .  .  .  .  .  .  .  Name: "PointMap"
   196  .  .  .  .  .  .  .  Obj: *ast.Object {
   197  .  .  .  .  .  .  .  .  Kind: var
   198  .  .  .  .  .  .  .  .  Name: "PointMap"
   199  .  .  .  .  .  .  .  .  Decl: *(obj @ 191)
   200  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  }
   202  .  .  .  .  .  }
   203  .  .  .  .  .  Type: *ast.StarExpr {
   204  .  .  .  .  .  .  Star: -
   205  .  .  .  .  .  .  X: *ast.MapType {
   206  .  .  .  .  .  .  .  Map: -
   207  .  .  .  .  .  .  .  Key: *ast.Ident {
   208  .  .  .  .  .  .  .  .  NamePos: -
   209  .  .  .  .  .  .  .  .  Name: "string"
   210  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  .  Value: *ast.Ident {
   212  .  .  .  .  .  .  .  .  NamePos: -
   213  .  .  .  .  .  .  .  .  Name: "int"
   214  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  }
   216  .  .  .  .  .  }
   217  .  .  .  .  }
   218  .  .  .  .  10: *ast.Field {
   219  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   220  .  .  .  .  .  .  0: *ast.Ident {
   221  .  .  .  .  .  .  .  NamePos: -
   222  .  .  .  .  .  .  .  Name: "All"
   223  .  .  .  .  .  .  .  Obj: *ast.Object {
   224  .  .  .  .  .  .  .  .  Kind: var
   225  .  .  .  .  .  .  .  .  Name: "All"
   226  .  .  .  .  .  .  .  .  Decl: *(obj @ 218)
   227  .  .  .  .  .  .  .  }
   228  .  .  .  .  .  .  }
   229  .  .  .  .  .  }
   230  .  .  .  .  .  Type: *ast.Ident {
   231  .  .  .  .  .  .  NamePos: -
   232  .  .  .  .  .  .  Name: "bool"
   233  .  .  .  .  .  }
   234  .  .  .  .  .  Tag: *ast.BasicLit {
   235  .  .  .  .  .  .  ValuePos: -
   236  .  .  .  .  .  .  Kind: STRING
   237  .  .  .  .  .  .  Value: "`json:\"all\"`"
   238  .  .  .  .  .  }
   239  .  .  .  .  }
   240  .  .  .  .  11: *ast.Field {
   241  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   242  .  .  .  .  .  .  0: *ast.Ident {
   243  .  .  .  .  .  .  .  NamePos: -
   244  .  .  .  .  .  .  .  Name: "BuildTags"
   245  .  .  .  .  .  .  .  Obj: *ast.Object {
   246  .  .  .  .  .  .  .  .  Kind: var
   247  .  .  .  .  .  .  .  .  Name: "BuildTags"
   248  .  .  .  .  .  .  .  .  Decl: *(obj @ 240)
   249  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  }
   251  .  .  .  .  .  }
   252  .  .  .  .  .  Type: *ast.Ident {
   253  .  .  .  .  .  .  NamePos: -
   254  .  .  .  .  .  .  Name: "string"
   255  .  .  .  .  .  }
   256  .  .  .  .  .  Tag: *ast.BasicLit {
   257  .  .  .  .  .  .  ValuePos: -
   258  .  .  .  .  .  .  Kind: STRING
   259  .  .  .  .  .  .  Value: "`mapstructure:\"tags\"`"
   260  .  .  .  .  .  }
   261  .  .  .  .  }
   262  .  .  .  .  12: *ast.Field {
   263  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   264  .  .  .  .  .  .  0: *ast.Ident {
   265  .  .  .  .  .  .  .  NamePos: -
   266  .  .  .  .  .  .  .  Name: "Version"
   267  .  .  .  .  .  .  .  Obj: *ast.Object {
   268  .  .  .  .  .  .  .  .  Kind: var
   269  .  .  .  .  .  .  .  .  Name: "Version"
   270  .  .  .  .  .  .  .  .  Decl: *(obj @ 262)
   271  .  .  .  .  .  .  .  }
   272  .  .  .  .  .  .  }
   273  .  .  .  .  .  }
   274  .  .  .  .  .  Type: *ast.Ident {
   275  .  .  .  .  .  .  NamePos: -
   276  .  .  .  .  .  .  Name: "int"
   277  .  .  .  .  .  }
   278  .  .  .  .  .  Tag: *ast.BasicLit {
   279  .  .  .  .  .  .  ValuePos: -
   280  .  .  .  .  .  .  Kind: STRING
   281  .  .  .  .  .  .  Value: "`json:\"-\"`"
   282  .  .  .  .  .  }
   283  .  .  .  .  }
   284  .  .  .  .  13: *ast.Field {
   285  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   286  .  .  .  .  .  .  0: *ast.Ident {
   287  .  .  .  .  .  .  .  NamePos: -
   288  .  .  .  .  .  .  .  Name: "Slices"
   289  .  .  .  .  .  .  .  Obj: *ast.Object {
   290  .  .  .  .  .  .  .  .  Kind: var
   291  .  .  .  .  .  .  .  .  Name: "Slices"
   292  .  .  .  .  .  .  .  .  Decl: *(obj @ 284)
   293  .  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  }
   295  .  .  .  .  .  }
   296  .  .  .  .  .  Type: *ast.ArrayType {
   297  .  .  .  .  .  .  Lbrack: -
   298  .  .  .  .  .  .  Elt: *ast.Ident {
   299  .  .  .  .  .  .  .  NamePos: -
   300  .  .  .  .  .  .  .  Name: "int"
   301  .  .  .  .  .  .  }
   302  .  .  .  .  .  }
   303  .  .  .  .  }
   304  .  .  .  .  14: *ast.Field {
   305  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   306  .  .  .  .  .  .  0: *ast.Ident {
   307  .  .  .  .  .  .  .  NamePos: -
   308  .  .  .  .  .  .  .  Name: "SlicesStruct"
   309  .  .  .  .  .  .  .  Obj: *ast.Object {
   310  .  .  .  .  .  .  .  .  Kind: var
   311  .  .  .  .  .  .  .  .  Name: "SlicesStruct"
   312  .  .  .  .  .  .  .  .  Decl: *(obj @ 304)
   313  .  .  .  .  .  .  .  }
   314  .  .  .  .  .  .  }
   315  .  .  .  .  .  }
   316  .  .  .  .  .  Type: *ast.ArrayType {
   317  .  .  .  .  .  .  Lbrack: -
   318  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
   319  .  .  .  .  .  .  .  X: *ast.Ident {
   320  .  .  .  .  .  .  .  .  NamePos: -
   321  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   322  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  Sel: *ast.Ident {
   324  .  .  .  .  .  .  .  .  NamePos: -
   325  .  .  .  .  .  .  .  .  Name: "Source"
   326  .  .  .  .  .  .  .  }
   327  .  .  .  .  .  .  }
   328  .  .  .  .  .  }
   329  .  .  .  .  }
   330  .  .  .  .  15: *ast.Field {
   331  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   332  .  .  .  .  .  .  0: *ast.Ident {
   333  .  .  .  .  .  .  .  NamePos: -
   334  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   335  .  .  .  .  .  .  .  Obj: *ast.Object {
   336  .  .  .  .  .  .  .  .  Kind: var
   337  .  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   338  .  .  .  .  .  .  .  .  Decl: *(obj @ 330)
   339  .  .  .  .  .  .  .  }
   340  .  .  .  .  .  .  }
   341  .  .  .  .  .  }
   342  .  .  .  .  .  Type: *ast.ArrayType {
   343  .  .  .  .  .  .  Lbrack: -
   344  .  .  .  .  .  .  Elt: *ast.StarExpr {
   345  .  .  .  .  .  .  .  Star: -
   346  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   347  .  .  .  .  .  .  .  .  X: *ast.Ident {
   348  .  .  .  .  .  .  .  .  .  NamePos: -
   349  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   350  .  .  .  .  .  .  .  .  }
   351  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   352  .  .  .  .  .  .  .  .  .  NamePos: -
   353  .  .  .  .  .  .  .  .  .  Name: "Source"
   354  .  .  .  .  .  .  .  .  }
   355  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  }
   357  .  .  .  .  .  }
   358  .  .  .  .  }
   359  .  .  .  .  16: *ast.Field {
   360  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   361  .  .  .  .  .  .  0: *ast.Ident {
   362  .  .  .  .  .  .  .  NamePos: -
   363  .  .  .  .  .  .  .  Name: "SlicePoint"
   364  .  .  .  .  .  .  .  Obj: *ast.Object {
   365  .  .  .  .  .  .  .  .  Kind: var
   366  .  .  .  .  .  .  .  .  Name: "SlicePoint"
   367  .  .  .  .  .  .  .  .  Decl: *(obj @ 359)
   368  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  }
   370  .  .  .  .  .  }
   371  .  .  .  .  .  Type: *ast.ArrayType {
   372  .  .  .  .  .  .  Lbrack: -
   373  .  .  .  .  .  .  Elt: *ast.StarExpr {
   374  .  .  .  .  .  .  .  Star: -
   375  .  .  .  .  .  .  .  X: *ast.Ident {
   376  .  .  .  .  .  .  .  .  NamePos: -
   377  .  .  .  .  .  .  .  .  Name: "int"
   378  .  .  .  .  .  .  .  }
   379  .  .  .  .  .  .  }
   380  .  .  .  .  .  }
   381  .  .  .  .  }
   382  .  .  .  .  17: *ast.Field {
   383  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   384  .  .  .  .  .  .  0: *ast.Ident {
   385  .  .  .  .  .  .  .  NamePos: -
   386  .  .  .  .  .  .  .  Name: "Arrayint"
   387  .  .  .  .  .  .  .  Obj: *ast.Object {
   388  .  .  .  .  .  .  .  .  Kind: var
   389  .  .  .  .  .  .  .  .  Name: "Arrayint"
   390  .  .  .  .  .  .  .  .  Decl: *(obj @ 382)
   391  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  }
   393  .  .  .  .  .  }
   394  .  .  .  .  .  Type: *ast.ArrayType {
   395  .  .  .  .  .  .  Lbrack: -
   396  .  .  .  .  .  .  Len: *ast.BasicLit {
   397  .  .  .  .  .  .  .  ValuePos: -
   398  .  .  .  .  .  .  .  Kind: INT
   399  .  .  .  .  .  .  .  Value: "8"
   400  .  .  .  .  .  .  }
   401  .  .  .  .  .  .  Elt: *ast.Ident {
   402  .  .  .  .  .  .  .  NamePos: -
   403  .  .  .  .  .  .  .  Name: "int"
   404  .  .  .  .  .  .  }
   405  .  .  .  .  .  }
   406  .  .  .  .  }
   407  .  .  .  .  18: *ast.Field {
   408  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   409  .  .  .  .  .  .  0: *ast.Ident {
   410  .  .  .  .  .  .  .  NamePos: -
   411  .  .  .  .  .  .  .  Name: "ArrayPointer"
   412  .  .  .  .  .  .  .  Obj: *ast.Object {
   413  .  .  .  .  .  .  .  .  Kind: var
   414  .  .  .  .  .  .  .  .  Name: "ArrayPointer"
   415  .  .  .  .  .  .  .  .  Decl: *(obj @ 407)
   416  .  .  .  .  .  .  .  }
   417  .  .  .  .  .  .  }
   418  .  .  .  .  .  }
   419  .  .  .  .  .  Type: *ast.ArrayType {
   420  .  .  .  .  .  .  Lbrack: -
   421  .  .  .  .  .  .  Len: *ast.BasicLit {
   422  .  .  .  .  .  .  .  ValuePos: -
   423  .  .  .  .  .  .  .  Kind: INT
   424  .  .  .  .  .  .  .  Value: "8"
   425  .  .  .  .  .  .  }
   426  .  .  .  .  .  .  Elt: *ast.StarExpr {
   427  .  .  .  .  .  .  .  Star: -
   428  .  .  .  .  .  .  .  X: *ast.Ident {
   429  .  .  .  .  .  .  .  .  NamePos: -
   430  .  .  .  .  .  .  .  .  Name: "int"
   431  .  .  .  .  .  .  .  }
   432  .  .  .  .  .  .  }
   433  .  .  .  .  .  }
   434  .  .  .  .  }
   435  .  .  .  .  19: *ast.Field {
   436  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   437  .  .  .  .  .  .  0: *ast.Ident {
   438  .  .  .  .  .  .  .  NamePos: -
   439  .  .  .  .  .  .  .  Name: "ArrayStruct"
   440  .  .  .  .  .  .  .  Obj: *ast.Object {
   441  .  .  .  .  .  .  .  .  Kind: var
   442  .  .  .  .  .  .  .  .  Name: "ArrayStruct"
   443  .  .  .  .  .  .  .  .  Decl: *(obj @ 435)
   444  .  .  .  .  .  .  .  }
   445  .  .  .  .  .  .  }
   446  .  .  .  .  .  }
   447  .  .  .  .  .  Type: *ast.ArrayType {
   448  .  .  .  .  .  .  Lbrack: -
   449  .  .  .  .  .  .  Len: *ast.BasicLit {
   450  .  .  .  .  .  .  .  ValuePos: -
   451  .  .  .  .  .  .  .  Kind: INT
   452  .  .  .  .  .  .  .  Value: "8"
   453  .  .  .  .  .  .  }
   454  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
   455  .  .  .  .  .  .  .  X: *ast.Ident {
   456  .  .  .  .  .  .  .  .  NamePos: -
   457  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   458  .  .  .  .  .  .  .  }
   459  .  .  .  .  .  .  .  Sel: *ast.Ident {
   460  .  .  .  .  .  .  .  .  NamePos: -
   461  .  .  .  .  .  .  .  .  Name: "RootApp"
   462  .  .  .  .  .  .  .  }
   463  .  .  .  .  .  .  }
   464  .  .  .  .  .  }
   465  .  .  .  .  }
   466  .  .  .  .  20: *ast.Field {
   467  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   468  .  .  .  .  .  .  0: *ast.Ident {
   469  .  .  .  .  .  .  .  NamePos: -
   470  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   471  .  .  .  .  .  .  .  Obj: *ast.Object {
   472  .  .  .  .  .  .  .  .  Kind: var
   473  .  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   474  .  .  .  .  .  .  .  .  Decl: *(obj @ 466)
   475  .  .  .  .  .  .  .  }
   476  .  .  .  .  .  .  }
   477  .  .  .  .  .  }
   478  .  .  .  .  .  Type: *ast.ArrayType {
   479  .  .  .  .  .  .  Lbrack: -
   480  .  .  .  .  .  .  Len: *ast.BasicLit {
   481  .  .  .  .  .  .  .  ValuePos: -
   482  .  .  .  .  .  .  .  Kind: INT
   483  .  .  .  .  .  .  .  Value: "8"
   484  .  .  .  .  .  .  }
   485  .  .  .  .  .  .  Elt: *ast.StarExpr {
   486  .  .  .  .  .  .  .  Star: -
   487  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   488  .  .  .  .  .  .  .  .  X: *ast.Ident {
   489  .  .  .  .  .  .  .  .  .  NamePos: -
   490  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   491  .  .  .  .  .  .  .  .  }
   492  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   493  .  .  .  .  .  .  .  .  .  NamePos: -
   494  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   495  .  .  .  .  .  .  .  .  }
   496  .  .  .  .  .  .  .  }
   497  .  .  .  .  .  .  }
   498  .  .  .  .  .  }
   499  .  .  .  .  }
   500  .  .  .  .  21: *ast.Field {
   501  .  .  .  .  .  Type: *ast.Ident {
   502  .  .  .  .  .  .  NamePos: -
   503  .  .  .  .  .  .  Name: "Mocker"
   504  .  .  .  .  .  }
   505  .  .  .  .  }
   506  .  .  .  .  22: *ast.Field {
   507  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   508  .  .  .  .  .  .  0: *ast.Ident {
   509  .  .  .  .  .  .  .  NamePos: -
   510  .  .  .  .  .  .  .  Name: "mocker"
   511  .  .  .  .  .  .  .  Obj: *ast.Object {
   512  .  .  .  .  .  .  .  .  Kind: var
   513  .  .  .  .  .  .  .  .  Name: "mocker"
   514  .  .  .  .  .  .  .  .  Decl: *(obj @ 506)
   515  .  .  .  .  .  .  .  }
   516  .  .  .  .  .  .  }
   517  .  .  .  .  .  }
   518  .  .  .  .  .  Type: *ast.Ident {
   519  .  .  .  .  .  .  NamePos: -
   520  .  .  .  .  .  .  Name: "Mocker"
   521  .  .  .  .  .  }
   522  .  .  .  .  }
   523  .  .  .  .  23: *ast.Field {
   524  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   525  .  .  .  .  .  .  0: *ast.Ident {
   526  .  .  .  .  .  .  .  NamePos: -
   527  .  .  .  .  .  .  .  Name: "Maps"
   528  .  .  .  .  .  .  .  Obj: *ast.Object {
   529  .  .  .  .  .  .  .  .  Kind: var
   530  .  .  .  .  .  .  .  .  Name: "Maps"
   531  .  .  .  .  .  .  .  .  Decl: *(obj @ 523)
   532  .  .  .  .  .  .  .  }
   533  .  .  .  .  .  .  }
   534  .  .  .  .  .  }
   535  .  .  .  .  .  Type: *ast.MapType {
   536  .  .  .  .  .  .  Map: -
   537  .  .  .  .  .  .  Key: *ast.Ident {
   538  .  .  .  .  .  .  .  NamePos: -
   539  .  .  .  .  .  .  .  Name: "string"
   540  .  .  .  .  .  .  }
   541  .  .  .  .  .  .  Value: *ast.Ident {
   542  .  .  .  .  .  .  .  NamePos: -
   543  .  .  .  .  .  .  .  Name: "int"
   544  .  .  .  .  .  .  }
   545  .  .  .  .  .  }
   546  .  .  .  .  }
   547  .  .  .  .  24: *ast.Field {
   548  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   549  .  .  .  .  .  .  0: *ast.Ident {
   550  .  .  .  .  .  .  .  NamePos: -
   551  .  .  .  .  .  .  .  Name: "MapsStruct"
   552  .  .  .  .  .  .  .  Obj: *ast.Object {
   553  .  .  .  .  .  .  .  .  Kind: var
   554  .  .  .  .  .  .  .  .  Name: "MapsStruct"
   555  .  .  .  .  .  .  .  .  Decl: *(obj @ 547)
   556  .  .  .  .  .  .  .  }
   557  .  .  .  .  .  .  }
   558  .  .  .  .  .  }
   559  .  .  .  .  .  Type: *ast.MapType {
   560  .  .  .  .  .  .  Map: -
   561  .  .  .  .  .  .  Key: *ast.Ident {
   562  .  .  .  .  .  .  .  NamePos: -
   563  .  .  .  .  .  .  .  Name: "string"
   564  .  .  .  .  .  .  }
   565  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   566  .  .  .  .  .  .  .  X: *ast.Ident {
   567  .  .  .  .  .  .  .  .  NamePos: -
   568  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   569  .  .  .  .  .  .  .  }
   570  .  .  .  .  .  .  .  Sel: *ast.Ident {
   571  .  .  .  .  .  .  .  .  NamePos: -
   572  .  .  .  .  .  .  .  .  Name: "Source"
   573  .  .  .  .  .  .  .  }
   574  .  .  .  .  .  .  }
   575  .  .  .  .  .  }
   576  .  .  .  .  }
   577  .  .  .  .  25: *ast.Field {
   578  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   579  .  .  .  .  .  .  0: *ast.Ident {
   580  .  .  .  .  .  .  .  NamePos: -
   581  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   582  .  .  .  .  .  .  .  Obj: *ast.Object {
   583  .  .  .  .  .  .  .  .  Kind: var
   584  .  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   585  .  .  .  .  .  .  .  .  Decl: *(obj @ 577)
   586  .  .  .  .  .  .  .  }
   587  .  .  .  .  .  .  }
   588  .  .  .  .  .  }
   589  .  .  .  .  .  Type: *ast.MapType {
   590  .  .  .  .  .  .  Map: -
   591  .  .  .  .  .  .  Key: *ast.Ident {
   592  .  .  .  .  .  .  .  NamePos: -
   593  .  .  .  .  .  .  .  Name: "string"
   594  .  .  .  .  .  .  }
   595  .  .  .  .  .  .  Value: *ast.StarExpr {
   596  .  .  .  .  .  .  .  Star: -
   597  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   598  .  .  .  .  .  .  .  .  X: *ast.Ident {
   599  .  .  .  .  .  .  .  .  .  NamePos: -
   600  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   601  .  .  .  .  .  .  .  .  }
   602  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   603  .  .  .  .  .  .  .  .  .  NamePos: -
   604  .  .  .  .  .  .  .  .  .  Name: "Source"
   605  .  .  .  .  .  .  .  .  }
   606  .  .  .  .  .  .  .  }
   607  .  .  .  .  .  .  }
   608  .  .  .  .  .  }
   609  .  .  .  .  }
   610  .  .  .  .  26: *ast.Field {
   611  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   612  .  .  .  .  .  .  0: *ast.Ident {
   613  .  .  .  .  .  .  .  NamePos: -
   614  .  .  .  .  .  .  .  Name: "innerSource"
   615  .  .  .  .  .  .  .  Obj: *ast.Object {
   616  .  .  .  .  .  .  .  .  Kind: var
   617  .  .  .  .  .  .  .  .  Name: "innerSource"
   618  .  .  .  .  .  .  .  .  Decl: *(obj @ 610)
   619  .  .  .  .  .  .  .  }
   620  .  .  .  .  .  .  }
   621  .  .  .  .  .  }
   622  .  .  .  .  .  Type: *ast.Ident {
   623  .  .  .  .  .  .  NamePos: -
   624  .  .  .  .  .  .  Name: "Source"
   625  .  .  .  .  .  }
   626  .  .  .  .  }
   627  .  .  .  }
   628  .  .  .  Closing: -
   629  .  .  }
   630  .  .  Incomplete: false
   631  .  }
   632  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Config"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Config"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *(obj @ 0)
     8  .  .  .  Assign: -
     9  .  .  .  Type: *ast.StructType {
    10  .  .  .  .  Struct: -
    11  .  .  .  .  Fields: *ast.FieldList {
    12  .  .  .  .  .  Opening: -
    13  .  .  .  .  .  List: []*ast.Field (len = 27) {
    14  .  .  .  .  .  .  0: *ast.Field {
    15  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  .  .  .  .  0: *ast.Ident {
    17  .  .  .  .  .  .  .  .  .  NamePos: -
    18  .  .  .  .  .  .  .  .  .  Name: "TXXXXXX"
    19  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    20  .  .  .  .  .  .  .  .  .  .  Kind: var
    21  .  .  .  .  .  .  .  .  .  .  Name: "TXXXXXX"
    22  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 14)
    23  .  .  .  .  .  .  .  .  .  }
    24  .  .  .  .  .  .  .  .  }
    25  .  .  .  .  .  .  .  }
    26  .  .  .  .  .  .  .  Type: *ast.Ident {
    27  .  .  .  .  .  .  .  .  NamePos: -
    28  .  .  .  .  .  .  .  .  Name: "Test"
    29  .  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  }
    31  .  .  .  .  .  .  1: *ast.Field {
    32  .  .  .  .  .  .  .  Type: *ast.Ident {
    33  .  .  .  .  .  .  .  .  NamePos: -
    34  .  .  .  .  .  .  .  .  Name: "Test"
    35  .  .  .  .  .  .  .  }
    36  .  .  .  .  .  .  }
    37  .  .  .  .  .  .  2: *ast.Field {
    38  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    39  .  .  .  .  .  .  .  .  X: *ast.Ident {
    40  .  .  .  .  .  .  .  .  .  NamePos: -
    41  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
    42  .  .  .  .  .  .  .  .  }
    43  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    44  .  .  .  .  .  .  .  .  .  NamePos: -
    45  .  .  .  .  .  .  .  .  .  Name: "RootApp"
    46  .  .  .  .  .  .  .  .  }
    47  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  3: *ast.Field {
    50  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    51  .  .  .  .  .  .  .  .  0: *ast.Ident {
    52  .  .  .  .  .  .  .  .  .  NamePos: -
    53  .  .  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    54  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    55  .  .  .  .  .  .  .  .  .  .  Kind: var
    56  .  .  .  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    57  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 49)
    58  .  .  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  .  .  }
    60  .  .  .  .  .  .  .  }
    61  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    62  .  .  .  .  .  .  .  .  X: *ast.Ident {
    63  .  .  .  .  .  .  .  .  .  NamePos: -
    64  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
    65  .  .  .  .  .  .  .  .  }
    66  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    67  .  .  .  .  .  .  .  .  .  NamePos: -
    68  .  .  .  .  .  .  .  .  .  Name: "RootApp"
    69  .  .  .  .  .  .  .  .  }
    70  .  .  .  .  .  .  .  }
    71  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  4: *ast.Field {
    73  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    74  .  .  .  .  .  .  .  .  0: *ast.Ident {
    75  .  .  .  .  .  .  .  .  .  NamePos: -
    76  .  .  .  .  .  .  .  .  .  Name: "Source"
    77  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    78  .  .  .  .  .  .  .  .  .  .  Kind: var
    79  .  .  .  .  .  .  .  .  .  .  Name: "Source"
    80  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 72)
    81  .  .  .  .  .  .  .  .  .  }
    82  .  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    85  .  .  .  .  .  .  .  .  X: *ast.Ident {
    86  .  .  .  .  .  .  .  .  .  NamePos: -
    87  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
    88  .  .  .  .  .  .  .  .  }
    89  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    90  .  .  .  .  .  .  .  .  .  NamePos: -
    91  .  .  .  .  .  .  .  .  .  Name: "Source"
    92  .  .  .  .  .  .  .  .  }
    93  .  .  .  .  .  .  .  }
    94  .  .  .  .  .  .  }
    95  .  .  .  .  .  .  5: *ast.Field {
    96  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    97  .  .  .  .  .  .  .  .  0: *ast.Ident {
    98  .  .  .  .  .  .  .  .  .  NamePos: -
    99  .  .  .  .  .  .  .  .  .  Name: "PointerStruct"
   100  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   101  .  .  .  .  .  .  .  .  .  .  Kind: var
   102  .  .  .  .  .  .  .  .  .  .  Name: "PointerStruct"
   103  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 95)
   104  .  .  .  .  .  .  .  .  .  }
   105  .  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  .  }
   107  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   108  .  .  .  .  .  .  .  .  Star: -
   109  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   110  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   111  .  .  .  .  .  .  .  .  .  .  NamePos: -
   112  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   113  .  .  .  .  .  .  .  .  .  }
   114  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   115  .  .  .  .  .  .  .  .  .  .  NamePos: -
   116  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   117  .  .  .  .  .  .  .  .  .  }
   118  .  .  .  .  .  .  .  .  }
   119  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  6: *ast.Field {
   122  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   123  .  .  .  .  .  .  .  .  0: *ast.Ident {
   124  .  .  .  .  .  .  .  .  .  NamePos: -
   125  .  .  .  .  .  .  .  .  .  Name: "PointInt"
   126  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   127  .  .  .  .  .  .  .  .  .  .  Kind: var
   128  .  .  .  .  .  .  .  .  .  .  Name: "PointInt"
   129  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 121)
   130  .  .  .  .  .  .  .  .  .  }
   131  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   134  .  .  .  .  .  .  .  .  Star: -
   135  .  .  .  .  .  .  .  .  X: *ast.Ident {
   136  .  .  .  .  .  .  .  .  .  NamePos: -
   137  .  .  .  .  .  .  .  .  .  Name: "int"
   138  .  .  .  .  .  .  .  .  }
   139  .  .  .  .  .  .  .  }
   140  .  .  .  .  .  .  }
   141  .  .  .  .  .  .  7: *ast.Field {
   142  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   143  .  .  .  .  .  .  .  .  0: *ast.Ident {
   144  .  .  .  .  .  .  .  .  .  NamePos: -
   145  .  .  .  .  .  .  .  .  .  Name: "PointString"
   146  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   147  .  .  .  .  .  .  .  .  .  .  Kind: var
   148  .  .  .  .  .  .  .  .  .  .  Name: "PointString"
   149  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 141)
   150  .  .  .  .  .  .  .  .  .  }
   151  .  .  .  .  .  .  .  .  }
   152  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   154  .  .  .  .  .  .  .  .  Star: -
   155  .  .  .  .  .  .  .  .  X: *ast.Ident {
   156  .  .  .  .  .  .  .  .  .  NamePos: -
   157  .  .  .  .  .  .  .  .  .  Name: "string"
   158  .  .  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   161  .  .  .  .  .  .  .  .  ValuePos: -
   162  .  .  .  .  .  .  .  .  Kind: STRING
   163  .  .  .  .  .  .  .  .  Value: "`json:\"pointstring\"`"
   164  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  }
   166  .  .  .  .  .  .  8: *ast.Field {
   167  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   168  .  .  .  .  .  .  .  .  0: *ast.Ident {
   169  .  .  .  .  .  .  .  .  .  NamePos: -
   170  .  .  .  .  .  .  .  .  .  Name: "PointSlice"
   171  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   172  .  .  .  .  .  .  .  .  .  .  Kind: var
   173  .  .  .  .  .  .  .  .  .  .  Name: "PointSlice"
   174  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 166)
   175  .  .  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  .  }
   177  .  .  .  .  .  .  .  }
   178  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   179  .  .  .  .  .  .  .  .  Star: -
   180  .  .  .  .  .  .  .  .  X: *ast.ArrayType {
   181  .  .  .  .  .  .  .  .  .  Lbrack: -
   182  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   183  .  .  .  .  .  .  .  .  .  .  NamePos: -
   184  .  .  .  .  .  .  .  .  .  .  Name: "int"
   185  .  .  .  .  .  .  .  .  .  }
   186  .  .  .  .  .  .  .  .  }
   187  .  .  .  .  .  .  .  }
   188  .  .  .  .  .  .  }
   189  .  .  .  .  .  .  9: *ast.Field {
   190  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   191  .  .  .  .  .  .  .  .  0: *ast.Ident {
   192  .  .  .  .  .  .  .  .  .  NamePos: -
   193  .  .  .  .  .  .  .  .  .  Name: "PointMap"
   194  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   195  .  .  .  .  .  .  .  .  .  .  Kind: var
   196  .  .  .  .  .  .  .  .  .  .  Name: "PointMap"
   197  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 189)
   198  .  .  .  .  .  .  .  .  .  }
   199  .  .  .  .  .  .  .  .  }
   200  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   202  .  .  .  .  .  .  .  .  Star: -
   203  .  .  .  .  .  .  .  .  X: *ast.MapType {
   204  .  .  .  .  .  .  .  .  .  Map: -
   205  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   206  .  .  .  .  .  .  .  .  .  .  NamePos: -
   207  .  .  .  .  .  .  .  .  .  .  Name: "string"
   208  .  .  .  .  .  .  .  .  .  }
   209  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   210  .  .  .  .  .  .  .  .  .  .  NamePos: -
   211  .  .  .  .  .  .  .  .  .  .  Name: "int"
   212  .  .  .  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  .  .  }
   214  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  10: *ast.Field {
   217  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   218  .  .  .  .  .  .  .  .  0: *ast.Ident {
   219  .  .  .  .  .  .  .  .  .  NamePos: -
   220  .  .  .  .  .  .  .  .  .  Name: "All"
   221  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   222  .  .  .  .  .  .  .  .  .  .  Kind: var
   223  .  .  .  .  .  .  .  .  .  .  Name: "All"
   224  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 216)
   225  .  .  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  .  }
   228  .  .  .  .  .  .  .  Type: *ast.Ident {
   229  .  .  .  .  .  .  .  .  NamePos: -
   230  .  .  .  .  .  .  .  .  Name: "bool"
   231  .  .  .  .  .  .  .  }
   232  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   233  .  .  .  .  .  .  .  .  ValuePos: -
   234  .  .  .  .  .  .  .  .  Kind: STRING
   235  .  .  .  .  .  .  .  .  Value: "`json:\"all\"`"
   236  .  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  }
   238  .  .  .  .  .  .  11: *ast.Field {
   239  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   240  .  .  .  .  .  .  .  .  0: *ast.Ident {
   241  .  .  .  .  .  .  .  .  .  NamePos: -
   242  .  .  .  .  .  .  .  .  .  Name: "BuildTags"
   243  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   244  .  .  .  .  .  .  .  .  .  .  Kind: var
   245  .  .  .  .  .  .  .  .  .  .  Name: "BuildTags"
   246  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 238)
   247  .  .  .  .  .  .  .  .  .  }
   248  .  .  .  .  .  .  .  .  }
   249  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  .  Type: *ast.Ident {
   251  .  .  .  .  .  .  .  .  NamePos: -
   252  .  .  .  .  .  .  .  .  Name: "string"
   253  .  .  .  .  .  .  .  }
   254  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   255  .  .  .  .  .  .  .  .  ValuePos: -
   256  .  .  .  .  .  .  .  .  Kind: STRING
   257  .  .  .  .  .  .  .  .  Value: "`mapstructure:\"tags\"`"
   258  .  .  .  .  .  .  .  }
   259  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  12: *ast.Field {
   261  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   262  .  .  .  .  .  .  .  .  0: *ast.Ident {
   263  .  .  .  .  .  .  .  .  .  NamePos: -
   264  .  .  .  .  .  .  .  .  .  Name: "Version"
   265  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   266  .  .  .  .  .  .  .  .  .  .  Kind: var
   267  .  .  .  .  .  .  .  .  .  .  Name: "Version"
   268  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 260)
   269  .  .  .  .  .  .  .  .  .  }
   270  .  .  .  .  .  .  .  .  }
   271  .  .  .  .  .  .  .  }
   272  .  .  .  .  .  .  .  Type: *ast.Ident {
   273  .  .  .  .  .  .  .  .  NamePos: -
   274  .  .  .  .  .  .  .  .  Name: "int"
   275  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   277  .  .  .  .  .  .  .  .  ValuePos: -
   278  .  .  .  .  .  .  .  .  Kind: STRING
   279  .  .  .  .  .  .  .  .  Value: "`json:\"-\"`"
   280  .  .  .  .  .  .  .  }
   281  .  .  .  .  .  .  }
   282  .  .  .  .  .  .  13: *ast.Field {
   283  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   284  .  .  .  .  .  .  .  .  0: *ast.Ident {
   285  .  .  .  .  .  .  .  .  .  NamePos: -
   286  .  .  .  .  .  .  .  .  .  Name: "Slices"
   287  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   288  .  .  .  .  .  .  .  .  .  .  Kind: var
   289  .  .  .  .  .  .  .  .  .  .  Name: "Slices"
   290  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 282)
   291  .  .  .  .  .  .  .  .  .  }
   292  .  .  .  .  .  .  .  .  }
   293  .  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   295  .  .  .  .  .  .  .  .  Lbrack: -
   296  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   297  .  .  .  .  .  .  .  .  .  NamePos: -
   298  .  .  .  .  .  .  .  .  .  Name: "int"
   299  .  .  .  .  .  .  .  .  }
   300  .  .  .  .  .  .  .  }
   301  .  .  .  .  .  .  }
   302  .  .  .  .  .  .  14: *ast.Field {
   303  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   304  .  .  .  .  .  .  .  .  0: *ast.Ident {
   305  .  .  .  .  .  .  .  .  .  NamePos: -
   306  .  .  .  .  .  .  .  .  .  Name: "SlicesStruct"
   307  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   308  .  .  .  .  .  .  .  .  .  .  Kind: var
   309  .  .  .  .  .  .  .  .  .  .  Name: "SlicesStruct"
   310  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 302)
   311  .  .  .  .  .  .  .  .  .  }
   312  .  .  .  .  .  .  .  .  }
   313  .  .  .  .  .  .  .  }
   314  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   315  .  .  .  .  .  .  .  .  Lbrack: -
   316  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
   317  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   318  .  .  .  .  .  .  .  .  .  .  NamePos: -
   319  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   320  .  .  .  .  .  .  .  .  .  }
   321  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   322  .  .  .  .  .  .  .  .  .  .  NamePos: -
   323  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   324  .  .  .  .  .  .  .  .  .  }
   325  .  .  .  .  .  .  .  .  }
   326  .  .  .  .  .  .  .  }
   327  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  15: *ast.Field {
   329  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   330  .  .  .  .  .  .  .  .  0: *ast.Ident {
   331  .  .  .  .  .  .  .  .  .  NamePos: -
   332  .  .  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   333  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   334  .  .  .  .  .  .  .  .  .  .  Kind: var
   335  .  .  .  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   336  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 328)
   337  .  .  .  .  .  .  .  .  .  }
   338  .  .  .  .  .  .  .  .  }
   339  .  .  .  .  .  .  .  }
   340  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   341  .  .  .  .  .  .  .  .  Lbrack: -
   342  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   343  .  .  .  .  .  .  .  .  .  Star: -
   344  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   345  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   346  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   347  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   348  .  .  .  .  .  .  .  .  .  .  }
   349  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   350  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   351  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   352  .  .  .  .  .  .  .  .  .  .  }
   353  .  .  .  .  .  .  .  .  .  }
   354  .  .  .  .  .  .  .  .  }
   355  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  16: *ast.Field {
   358  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   359  .  .  .  .  .  .  .  .  0: *ast.Ident {
   360  .  .  .  .  .  .  .  .  .  NamePos: -
   361  .  .  .  .  .  .  .  .  .  Name: "SlicePoint"
   362  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   363  .  .  .  .  .  .  .  .  .  .  Kind: var
   364  .  .  .  .  .  .  .  .  .  .  Name: "SlicePoint"
   365  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 357)
   366  .  .  .  .  .  .  .  .  .  }
   367  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   370  .  .  .  .  .  .  .  .  Lbrack: -
   371  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   372  .  .  .  .  .  .  .  .  .  Star: -
   373  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   374  .  .  .  .  .  .  .  .  .  .  NamePos: -
   375  .  .  .  .  .  .  .  .  .  .  Name: "int"
   376  .  .  .  .  .  .  .  .  .  }
   377  .  .  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  .  }
   379  .  .  .  .  .  .  }
   380  .  .  .  .  .  .  17: *ast.Field {
   381  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   382  .  .  .  .  .  .  .  .  0: *ast.Ident {
   383  .  .  .  .  .  .  .  .  .  NamePos: -
   384  .  .  .  .  .  .  .  .  .  Name: "Arrayint"
   385  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   386  .  .  .  .  .  .  .  .  .  .  Kind: var
   387  .  .  .  .  .  .  .  .  .  .  Name: "Arrayint"
   388  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 380)
   389  .  .  .  .  .  .  .  .  .  }
   390  .  .  .  .  .  .  .  .  }
   391  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   393  .  .  .  .  .  .  .  .  Lbrack: -
   394  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   395  .  .  .  .  .  .  .  .  .  ValuePos: -
   396  .  .  .  .  .  .  .  .  .  Kind: INT
   397  .  .  .  .  .  .  .  .  .  Value: "8"
   398  .  .  .  .  .  .  .  .  }
   399  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   400  .  .  .  .  .  .  .  .  .  NamePos: -
   401  .  .  .  .  .  .  .  .  .  Name: "int"
   402  .  .  .  .  .  .  .  .  }
   403  .  .  .  .  .  .  .  }
   404  .  .  .  .  .  .  }
   405  .  .  .  .  .  .  18: *ast.Field {
   406  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   407  .  .  .  .  .  .  .  .  0: *ast.Ident {
   408  .  .  .  .  .  .  .  .  .  NamePos: -
   409  .  .  .  .  .  .  .  .  .  Name: "ArrayPointer"
   410  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   411  .  .  .  .  .  .  .  .  .  .  Kind: var
   412  .  .  .  .  .  .  .  .  .  .  Name: "ArrayPointer"
   413  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 405)
   414  .  .  .  .  .  .  .  .  .  }
   415  .  .  .  .  .  .  .  .  }
   416  .  .  .  .  .  .  .  }
   417  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   418  .  .  .  .  .  .  .  .  Lbrack: -
   419  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   420  .  .  .  .  .  .  .  .  .  ValuePos: -
   421  .  .  .  .  .  .  .  .  .  Kind: INT
   422  .  .  .  .  .  .  .  .  .  Value: "8"
   423  .  .  .  .  .  .  .  .  }
   424  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   425  .  .  .  .  .  .  .  .  .  Star: -
   426  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   427  .  .  .  .  .  .  .  .  .  .  NamePos: -
   428  .  .  .  .  .  .  .  .  .  .  Name: "int"
   429  .  .  .  .  .  .  .  .  .  }
   430  .  .  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  .  }
   432  .  .  .  .  .  .  }
   433  .  .  .  .  .  .  19: *ast.Field {
   434  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   435  .  .  .  .  .  .  .  .  0: *ast.Ident {
   436  .  .  .  .  .  .  .  .  .  NamePos: -
   437  .  .  .  .  .  .  .  .  .  Name: "ArrayStruct"
   438  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   439  .  .  .  .  .  .  .  .  .  .  Kind: var
   440  .  .  .  .  .  .  .  .  .  .  Name: "ArrayStruct"
   441  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 433)
   442  .  .  .  .  .  .  .  .  .  }
   443  .  .  .  .  .  .  .  .  }
   444  .  .  .  .  .  .  .  }
   445  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   446  .  .  .  .  .  .  .  .  Lbrack: -
   447  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   448  .  .  .  .  .  .  .  .  .  ValuePos: -
   449  .  .  .  .  .  .  .  .  .  Kind: INT
   450  .  .  .  .  .  .  .  .  .  Value: "8"
   451  .  .  .  .  .  .  .  .  }
   452  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
   453  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   454  .  .  .  .  .  .  .  .  .  .  NamePos: -
   455  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   456  .  .  .  .  .  .  .  .  .  }
   457  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   458  .  .  .  .  .  .  .  .  .  .  NamePos: -
   459  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   460  .  .  .  .  .  .  .  .  .  }
   461  .  .  .  .  .  .  .  .  }
   462  .  .  .  .  .  .  .  }
   463  .  .  .  .  .  .  }
   464  .  .  .  .  .  .  20: *ast.Field {
   465  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   466  .  .  .  .  .  .  .  .  0: *ast.Ident {
   467  .  .  .  .  .  .  .  .  .  NamePos: -
   468  .  .  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   469  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   470  .  .  .  .  .  .  .  .  .  .  Kind: var
   471  .  .  .  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   472  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 464)
   473  .  .  .  .  .  .  .  .  .  }
   474  .  .  .  .  .  .  .  .  }
   475  .  .  .  .  .  .  .  }
   476  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   477  .  .  .  .  .  .  .  .  Lbrack: -
   478  .  .  .  .  .  .  .  .  Len: *ast.BasicLit {
   479  .  .  .  .  .  .  .  .  .  ValuePos: -
   480  .  .  .  .  .  .  .  .  .  Kind: INT
   481  .  .  .  .  .  .  .  .  .  Value: "8"
   482  .  .  .  .  .  .  .  .  }
   483  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   484  .  .  .  .  .  .  .  .  .  Star: -
   485  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   486  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   487  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   488  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   489  .  .  .  .  .  .  .  .  .  .  }
   490  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   491  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   492  .  .  .  .  .  .  .  .  .  .  .  Name: "RootApp"
   493  .  .  .  .  .  .  .  .  .  .  }
   494  .  .  .  .  .  .  .  .  .  }
   495  .  .  .  .  .  .  .  .  }
   496  .  .  .  .  .  .  .  }
   497  .  .  .  .  .  .  }
   498  .  .  .  .  .  .  21: *ast.Field {
   499  .  .  .  .  .  .  .  Type: *ast.Ident {
   500  .  .  .  .  .  .  .  .  NamePos: -
   501  .  .  .  .  .  .  .  .  Name: "Mocker"
   502  .  .  .  .  .  .  .  }
   503  .  .  .  .  .  .  }
   504  .  .  .  .  .  .  22: *ast.Field {
   505  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   506  .  .  .  .  .  .  .  .  0: *ast.Ident {
   507  .  .  .  .  .  .  .  .  .  NamePos: -
   508  .  .  .  .  .  .  .  .  .  Name: "mocker"
   509  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   510  .  .  .  .  .  .  .  .  .  .  Kind: var
   511  .  .  .  .  .  .  .  .  .  .  Name: "mocker"
   512  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 504)
   513  .  .  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  .  }
   515  .  .  .  .  .  .  .  }
   516  .  .  .  .  .  .  .  Type: *ast.Ident {
   517  .  .  .  .  .  .  .  .  NamePos: -
   518  .  .  .  .  .  .  .  .  Name: "Mocker"
   519  .  .  .  .  .  .  .  }
   520  .  .  .  .  .  .  }
   521  .  .  .  .  .  .  23: *ast.Field {
   522  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   523  .  .  .  .  .  .  .  .  0: *ast.Ident {
   524  .  .  .  .  .  .  .  .  .  NamePos: -
   525  .  .  .  .  .  .  .  .  .  Name: "Maps"
   526  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   527  .  .  .  .  .  .  .  .  .  .  Kind: var
   528  .  .  .  .  .  .  .  .  .  .  Name: "Maps"
   529  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 521)
   530  .  .  .  .  .  .  .  .  .  }
   531  .  .  .  .  .  .  .  .  }
   532  .  .  .  .  .  .  .  }
   533  .  .  .  .  .  .  .  Type: *ast.MapType {
   534  .  .  .  .  .  .  .  .  Map: -
   535  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   536  .  .  .  .  .  .  .  .  .  NamePos: -
   537  .  .  .  .  .  .  .  .  .  Name: "string"
   538  .  .  .  .  .  .  .  .  }
   539  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   540  .  .  .  .  .  .  .  .  .  NamePos: -
   541  .  .  .  .  .  .  .  .  .  Name: "int"
   542  .  .  .  .  .  .  .  .  }
   543  .  .  .  .  .  .  .  }
   544  .  .  .  .  .  .  }
   545  .  .  .  .  .  .  24: *ast.Field {
   546  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   547  .  .  .  .  .  .  .  .  0: *ast.Ident {
   548  .  .  .  .  .  .  .  .  .  NamePos: -
   549  .  .  .  .  .  .  .  .  .  Name: "MapsStruct"
   550  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   551  .  .  .  .  .  .  .  .  .  .  Kind: var
   552  .  .  .  .  .  .  .  .  .  .  Name: "MapsStruct"
   553  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 545)
   554  .  .  .  .  .  .  .  .  .  }
   555  .  .  .  .  .  .  .  .  }
   556  .  .  .  .  .  .  .  }
   557  .  .  .  .  .  .  .  Type: *ast.MapType {
   558  .  .  .  .  .  .  .  .  Map: -
   559  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   560  .  .  .  .  .  .  .  .  .  NamePos: -
   561  .  .  .  .  .  .  .  .  .  Name: "string"
   562  .  .  .  .  .  .  .  .  }
   563  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   564  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   565  .  .  .  .  .  .  .  .  .  .  NamePos: -
   566  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   567  .  .  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   569  .  .  .  .  .  .  .  .  .  .  NamePos: -
   570  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   571  .  .  .  .  .  .  .  .  .  }
   572  .  .  .  .  .  .  .  .  }
   573  .  .  .  .  .  .  .  }
   574  .  .  .  .  .  .  }
   575  .  .  .  .  .  .  25: *ast.Field {
   576  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   577  .  .  .  .  .  .  .  .  0: *ast.Ident {
   578  .  .  .  .  .  .  .  .  .  NamePos: -
   579  .  .  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   580  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   581  .  .  .  .  .  .  .  .  .  .  Kind: var
   582  .  .  .  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   583  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 575)
   584  .  .  .  .  .  .  .  .  .  }
   585  .  .  .  .  .  .  .  .  }
   586  .  .  .  .  .  .  .  }
   587  .  .  .  .  .  .  .  Type: *ast.MapType {
   588  .  .  .  .  .  .  .  .  Map: -
   589  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   590  .  .  .  .  .  .  .  .  .  NamePos: -
   591  .  .  .  .  .  .  .  .  .  Name: "string"
   592  .  .  .  .  .  .  .  .  }
   593  .  .  .  .  .  .  .  .  Value: *ast.StarExpr {
   594  .  .  .  .  .  .  .  .  .  Star: -
   595  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   596  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   597  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   598  .  .  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   599  .  .  .  .  .  .  .  .  .  .  }
   600  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   601  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   602  .  .  .  .  .  .  .  .  .  .  .  Name: "Source"
   603  .  .  .  .  .  .  .  .  .  .  }
   604  .  .  .  .  .  .  .  .  .  }
   605  .  .  .  .  .  .  .  .  }
   606  .  .  .  .  .  .  .  }
   607  .  .  .  .  .  .  }
   608  .  .  .  .  .  .  26: *ast.Field {
   609  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   610  .  .  .  .  .  .  .  .  0: *ast.Ident {
   611  .  .  .  .  .  .  .  .  .  NamePos: -
   612  .  .  .  .  .  .  .  .  .  Name: "innerSource"
   613  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   614  .  .  .  .  .  .  .  .  .  .  Kind: var
   615  .  .  .  .  .  .  .  .  .  .  Name: "innerSource"
   616  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 608)
   617  .  .  .  .  .  .  .  .  .  }
   618  .  .  .  .  .  .  .  .  }
   619  .  .  .  .  .  .  .  }
   620  .  .  .  .  .  .  .  Type: *ast.Ident {
   621  .  .  .  .  .  .  .  .  NamePos: -
   622  .  .  .  .  .  .  .  .  Name: "Source"
   623  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  }
   625  .  .  .  .  .  }
   626  .  .  .  .  .  Closing: -
   627  .  .  .  .  }
   628  .  .  .  .  Incomplete: false
   629  .  .  .  }
   630  .  .  }
   631  .  }
   632  }
     0  nil
     0  *ast.StructType {
     1  .  Struct: -
     2  .  Fields: *ast.FieldList {
     3  .  .  Opening: -
     4  .  .  List: []*ast.Field (len = 27) {
     5  .  .  .  0: *ast.Field {
     6  .  .  .  .  Names: []*ast.Ident (len = 1) {
     7  .  .  .  .  .  0: *ast.Ident {
     8  .  .  .  .  .  .  NamePos: -
     9  .  .  .  .  .  .  Name: "TXXXXXX"
    10  .  .  .  .  .  .  Obj: *ast.Object {
    11  .  .  .  .  .  .  .  Kind: var
    12  .  .  .  .  .  .  .  Name: "TXXXXXX"
    13  .  .  .  .  .  .  .  Decl: *(obj @ 5)
    14  .  .  .  .  .  .  }
    15  .  .  .  .  .  }
    16  .  .  .  .  }
    17  .  .  .  .  Type: *ast.Ident {
    18  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  Name: "Test"
    20  .  .  .  .  }
    21  .  .  .  }
    22  .  .  .  1: *ast.Field {
    23  .  .  .  .  Type: *ast.Ident {
    24  .  .  .  .  .  NamePos: -
    25  .  .  .  .  .  Name: "Test"
    26  .  .  .  .  }
    27  .  .  .  }
    28  .  .  .  2: *ast.Field {
    29  .  .  .  .  Type: *ast.SelectorExpr {
    30  .  .  .  .  .  X: *ast.Ident {
    31  .  .  .  .  .  .  NamePos: -
    32  .  .  .  .  .  .  Name: "pkgcmd"
    33  .  .  .  .  .  }
    34  .  .  .  .  .  Sel: *ast.Ident {
    35  .  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  .  Name: "RootApp"
    37  .  .  .  .  .  }
    38  .  .  .  .  }
    39  .  .  .  }
    40  .  .  .  3: *ast.Field {
    41  .  .  .  .  Names: []*ast.Ident (len = 1) {
    42  .  .  .  .  .  0: *ast.Ident {
    43  .  .  .  .  .  .  NamePos: -
    44  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    45  .  .  .  .  .  .  Obj: *ast.Object {
    46  .  .  .  .  .  .  .  Kind: var
    47  .  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    48  .  .  .  .  .  .  .  Decl: *(obj @ 40)
    49  .  .  .  .  .  .  }
    50  .  .  .  .  .  }
    51  .  .  .  .  }
    52  .  .  .  .  Type: *ast.SelectorExpr {
    53  .  .  .  .  .  X: *ast.Ident {
    54  .  .  .  .  .  .  NamePos: -
    55  .  .  .  .  .  .  Name: "pkgcmd"
    56  .  .  .  .  .  }
    57  .  .  .  .  .  Sel: *ast.Ident {
    58  .  .  .  .  .  .  NamePos: -
    59  .  .  .  .  .  .  Name: "RootApp"
    60  .  .  .  .  .  }
    61  .  .  .  .  }
    62  .  .  .  }
    63  .  .  .  4: *ast.Field {
    64  .  .  .  .  Names: []*ast.Ident (len = 1) {
    65  .  .  .  .  .  0: *ast.Ident {
    66  .  .  .  .  .  .  NamePos: -
    67  .  .  .  .  .  .  Name: "Source"
    68  .  .  .  .  .  .  Obj: *ast.Object {
    69  .  .  .  .  .  .  .  Kind: var
    70  .  .  .  .  .  .  .  Name: "Source"
    71  .  .  .  .  .  .  .  Decl: *(obj @ 63)
    72  .  .  .  .  .  .  }
    73  .  .  .  .  .  }
    74  .  .  .  .  }
    75  .  .  .  .  Type: *ast.SelectorExpr {
    76  .  .  .  .  .  X: *ast.Ident {
    77  .  .  .  .  .  .  NamePos: -
    78  .  .  .  .  .  .  Name: "pkgcmd"
    79  .  .  .  .  .  }
    80  .  .  .  .  .  Sel: *ast.Ident {
    81  .  .  .  .  .  .  NamePos: -
    82  .  .  .  .  .  .  Name: "Source"
    83  .  .  .  .  .  }
    84  .  .  .  .  }
    85  .  .  .  }
    86  .  .  .  5: *ast.Field {
    87  .  .  .  .  Names: []*ast.Ident (len = 1) {
    88  .  .  .  .  .  0: *ast.Ident {
    89  .  .  .  .  .  .  NamePos: -
    90  .  .  .  .  .  .  Name: "PointerStruct"
    91  .  .  .  .  .  .  Obj: *ast.Object {
    92  .  .  .  .  .  .  .  Kind: var
    93  .  .  .  .  .  .  .  Name: "PointerStruct"
    94  .  .  .  .  .  .  .  Decl: *(obj @ 86)
    95  .  .  .  .  .  .  }
    96  .  .  .  .  .  }
    97  .  .  .  .  }
    98  .  .  .  .  Type: *ast.StarExpr {
    99  .  .  .  .  .  Star: -
   100  .  .  .  .  .  X: *ast.SelectorExpr {
   101  .  .  .  .  .  .  X: *ast.Ident {
   102  .  .  .  .  .  .  .  NamePos: -
   103  .  .  .  .  .  .  .  Name: "pkgcmd"
   104  .  .  .  .  .  .  }
   105  .  .  .  .  .  .  Sel: *ast.Ident {
   106  .  .  .  .  .  .  .  NamePos: -
   107  .  .  .  .  .  .  .  Name: "RootApp"
   108  .  .  .  .  .  .  }
   109  .  .  .  .  .  }
   110  .  .  .  .  }
   111  .  .  .  }
   112  .  .  .  6: *ast.Field {
   113  .  .  .  .  Names: []*ast.Ident (len = 1) {
   114  .  .  .  .  .  0: *ast.Ident {
   115  .  .  .  .  .  .  NamePos: -
   116  .  .  .  .  .  .  Name: "PointInt"
   117  .  .  .  .  .  .  Obj: *ast.Object {
   118  .  .  .  .  .  .  .  Kind: var
   119  .  .  .  .  .  .  .  Name: "PointInt"
   120  .  .  .  .  .  .  .  Decl: *(obj @ 112)
   121  .  .  .  .  .  .  }
   122  .  .  .  .  .  }
   123  .  .  .  .  }
   124  .  .  .  .  Type: *ast.StarExpr {
   125  .  .  .  .  .  Star: -
   126  .  .  .  .  .  X: *ast.Ident {
   127  .  .  .  .  .  .  NamePos: -
   128  .  .  .  .  .  .  Name: "int"
   129  .  .  .  .  .  }
   130  .  .  .  .  }
   131  .  .  .  }
   132  .  .  .  7: *ast.Field {
   133  .  .  .  .  Names: []*ast.Ident (len = 1) {
   134  .  .  .  .  .  0: *ast.Ident {
   135  .  .  .  .  .  .  NamePos: -
   136  .  .  .  .  .  .  Name: "PointString"
   137  .  .  .  .  .  .  Obj: *ast.Object {
   138  .  .  .  .  .  .  .  Kind: var
   139  .  .  .  .  .  .  .  Name: "PointString"
   140  .  .  .  .  .  .  .  Decl: *(obj @ 132)
   141  .  .  .  .  .  .  }
   142  .  .  .  .  .  }
   143  .  .  .  .  }
   144  .  .  .  .  Type: *ast.StarExpr {
   145  .  .  .  .  .  Star: -
   146  .  .  .  .  .  X: *ast.Ident {
   147  .  .  .  .  .  .  NamePos: -
   148  .  .  .  .  .  .  Name: "string"
   149  .  .  .  .  .  }
   150  .  .  .  .  }
   151  .  .  .  .  Tag: *ast.BasicLit {
   152  .  .  .  .  .  ValuePos: -
   153  .  .  .  .  .  Kind: STRING
   154  .  .  .  .  .  Value: "`json:\"pointstring\"`"
   155  .  .  .  .  }
   156  .  .  .  }
   157  .  .  .  8: *ast.Field {
   158  .  .  .  .  Names: []*ast.Ident (len = 1) {
   159  .  .  .  .  .  0: *ast.Ident {
   160  .  .  .  .  .  .  NamePos: -
   161  .  .  .  .  .  .  Name: "PointSlice"
   162  .  .  .  .  .  .  Obj: *ast.Object {
   163  .  .  .  .  .  .  .  Kind: var
   164  .  .  .  .  .  .  .  Name: "PointSlice"
   165  .  .  .  .  .  .  .  Decl: *(obj @ 157)
   166  .  .  .  .  .  .  }
   167  .  .  .  .  .  }
   168  .  .  .  .  }
   169  .  .  .  .  Type: *ast.StarExpr {
   170  .  .  .  .  .  Star: -
   171  .  .  .  .  .  X: *ast.ArrayType {
   172  .  .  .  .  .  .  Lbrack: -
   173  .  .  .  .  .  .  Elt: *ast.Ident {
   174  .  .  .  .  .  .  .  NamePos: -
   175  .  .  .  .  .  .  .  Name: "int"
   176  .  .  .  .  .  .  }
   177  .  .  .  .  .  }
   178  .  .  .  .  }
   179  .  .  .  }
   180  .  .  .  9: *ast.Field {
   181  .  .  .  .  Names: []*ast.Ident (len = 1) {
   182  .  .  .  .  .  0: *ast.Ident {
   183  .  .  .  .  .  .  NamePos: -
   184  .  .  .  .  .  .  Name: "PointMap"
   185  .  .  .  .  .  .  Obj: *ast.Object {
   186  .  .  .  .  .  .  .  Kind: var
   187  .  .  .  .  .  .  .  Name: "PointMap"
   188  .  .  .  .  .  .  .  Decl: *(obj @ 180)
   189  .  .  .  .  .  .  }
   190  .  .  .  .  .  }
   191  .  .  .  .  }
   192  .  .  .  .  Type: *ast.StarExpr {
   193  .  .  .  .  .  Star: -
   194  .  .  .  .  .  X: *ast.MapType {
   195  .  .  .  .  .  .  Map: -
   196  .  .  .  .  .  .  Key: *ast.Ident {
   197  .  .  .  .  .  .  .  NamePos: -
   198  .  .  .  .  .  .  .  Name: "string"
   199  .  .  .  .  .  .  }
   200  .  .  .  .  .  .  Value: *ast.Ident {
   201  .  .  .  .  .  .  .  NamePos: -
   202  .  .  .  .  .  .  .  Name: "int"
   203  .  .  .  .  .  .  }
   204  .  .  .  .  .  }
   205  .  .  .  .  }
   206  .  .  .  }
   207  .  .  .  10: *ast.Field {
   208  .  .  .  .  Names: []*ast.Ident (len = 1) {
   209  .  .  .  .  .  0: *ast.Ident {
   210  .  .  .  .  .  .  NamePos: -
   211  .  .  .  .  .  .  Name: "All"
   212  .  .  .  .  .  .  Obj: *ast.Object {
   213  .  .  .  .  .  .  .  Kind: var
   214  .  .  .  .  .  .  .  Name: "All"
   215  .  .  .  .  .  .  .  Decl: *(obj @ 207)
   216  .  .  .  .  .  .  }
   217  .  .  .  .  .  }
   218  .  .  .  .  }
   219  .  .  .  .  Type: *ast.Ident {
   220  .  .  .  .  .  NamePos: -
   221  .  .  .  .  .  Name: "bool"
   222  .  .  .  .  }
   223  .  .  .  .  Tag: *ast.BasicLit {
   224  .  .  .  .  .  ValuePos: -
   225  .  .  .  .  .  Kind: STRING
   226  .  .  .  .  .  Value: "`json:\"all\"`"
   227  .  .  .  .  }
   228  .  .  .  }
   229  .  .  .  11: *ast.Field {
   230  .  .  .  .  Names: []*ast.Ident (len = 1) {
   231  .  .  .  .  .  0: *ast.Ident {
   232  .  .  .  .  .  .  NamePos: -
   233  .  .  .  .  .  .  Name: "BuildTags"
   234  .  .  .  .  .  .  Obj: *ast.Object {
   235  .  .  .  .  .  .  .  Kind: var
   236  .  .  .  .  .  .  .  Name: "BuildTags"
   237  .  .  .  .  .  .  .  Decl: *(obj @ 229)
   238  .  .  .  .  .  .  }
   239  .  .  .  .  .  }
   240  .  .  .  .  }
   241  .  .  .  .  Type: *ast.Ident {
   242  .  .  .  .  .  NamePos: -
   243  .  .  .  .  .  Name: "string"
   244  .  .  .  .  }
   245  .  .  .  .  Tag: *ast.BasicLit {
   246  .  .  .  .  .  ValuePos: -
   247  .  .  .  .  .  Kind: STRING
   248  .  .  .  .  .  Value: "`mapstructure:\"tags\"`"
   249  .  .  .  .  }
   250  .  .  .  }
   251  .  .  .  12: *ast.Field {
   252  .  .  .  .  Names: []*ast.Ident (len = 1) {
   253  .  .  .  .  .  0: *ast.Ident {
   254  .  .  .  .  .  .  NamePos: -
   255  .  .  .  .  .  .  Name: "Version"
   256  .  .  .  .  .  .  Obj: *ast.Object {
   257  .  .  .  .  .  .  .  Kind: var
   258  .  .  .  .  .  .  .  Name: "Version"
   259  .  .  .  .  .  .  .  Decl: *(obj @ 251)
   260  .  .  .  .  .  .  }
   261  .  .  .  .  .  }
   262  .  .  .  .  }
   263  .  .  .  .  Type: *ast.Ident {
   264  .  .  .  .  .  NamePos: -
   265  .  .  .  .  .  Name: "int"
   266  .  .  .  .  }
   267  .  .  .  .  Tag: *ast.BasicLit {
   268  .  .  .  .  .  ValuePos: -
   269  .  .  .  .  .  Kind: STRING
   270  .  .  .  .  .  Value: "`json:\"-\"`"
   271  .  .  .  .  }
   272  .  .  .  }
   273  .  .  .  13: *ast.Field {
   274  .  .  .  .  Names: []*ast.Ident (len = 1) {
   275  .  .  .  .  .  0: *ast.Ident {
   276  .  .  .  .  .  .  NamePos: -
   277  .  .  .  .  .  .  Name: "Slices"
   278  .  .  .  .  .  .  Obj: *ast.Object {
   279  .  .  .  .  .  .  .  Kind: var
   280  .  .  .  .  .  .  .  Name: "Slices"
   281  .  .  .  .  .  .  .  Decl: *(obj @ 273)
   282  .  .  .  .  .  .  }
   283  .  .  .  .  .  }
   284  .  .  .  .  }
   285  .  .  .  .  Type: *ast.ArrayType {
   286  .  .  .  .  .  Lbrack: -
   287  .  .  .  .  .  Elt: *ast.Ident {
   288  .  .  .  .  .  .  NamePos: -
   289  .  .  .  .  .  .  Name: "int"
   290  .  .  .  .  .  }
   291  .  .  .  .  }
   292  .  .  .  }
   293  .  .  .  14: *ast.Field {
   294  .  .  .  .  Names: []*ast.Ident (len = 1) {
   295  .  .  .  .  .  0: *ast.Ident {
   296  .  .  .  .  .  .  NamePos: -
   297  .  .  .  .  .  .  Name: "SlicesStruct"
   298  .  .  .  .  .  .  Obj: *ast.Object {
   299  .  .  .  .  .  .  .  Kind: var
   300  .  .  .  .  .  .  .  Name: "SlicesStruct"
   301  .  .  .  .  .  .  .  Decl: *(obj @ 293)
   302  .  .  .  .  .  .  }
   303  .  .  .  .  .  }
   304  .  .  .  .  }
   305  .  .  .  .  Type: *ast.ArrayType {
   306  .  .  .  .  .  Lbrack: -
   307  .  .  .  .  .  Elt: *ast.SelectorExpr {
   308  .  .  .  .  .  .  X: *ast.Ident {
   309  .  .  .  .  .  .  .  NamePos: -
   310  .  .  .  .  .  .  .  Name: "pkgcmd"
   311  .  .  .  .  .  .  }
   312  .  .  .  .  .  .  Sel: *ast.Ident {
   313  .  .  .  .  .  .  .  NamePos: -
   314  .  .  .  .  .  .  .  Name: "Source"
   315  .  .  .  .  .  .  }
   316  .  .  .  .  .  }
   317  .  .  .  .  }
   318  .  .  .  }
   319  .  .  .  15: *ast.Field {
   320  .  .  .  .  Names: []*ast.Ident (len = 1) {
   321  .  .  .  .  .  0: *ast.Ident {
   322  .  .  .  .  .  .  NamePos: -
   323  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   324  .  .  .  .  .  .  Obj: *ast.Object {
   325  .  .  .  .  .  .  .  Kind: var
   326  .  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   327  .  .  .  .  .  .  .  Decl: *(obj @ 319)
   328  .  .  .  .  .  .  }
   329  .  .  .  .  .  }
   330  .  .  .  .  }
   331  .  .  .  .  Type: *ast.ArrayType {
   332  .  .  .  .  .  Lbrack: -
   333  .  .  .  .  .  Elt: *ast.StarExpr {
   334  .  .  .  .  .  .  Star: -
   335  .  .  .  .  .  .  X: *ast.SelectorExpr {
   336  .  .  .  .  .  .  .  X: *ast.Ident {
   337  .  .  .  .  .  .  .  .  NamePos: -
   338  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   339  .  .  .  .  .  .  .  }
   340  .  .  .  .  .  .  .  Sel: *ast.Ident {
   341  .  .  .  .  .  .  .  .  NamePos: -
   342  .  .  .  .  .  .  .  .  Name: "Source"
   343  .  .  .  .  .  .  .  }
   344  .  .  .  .  .  .  }
   345  .  .  .  .  .  }
   346  .  .  .  .  }
   347  .  .  .  }
   348  .  .  .  16: *ast.Field {
   349  .  .  .  .  Names: []*ast.Ident (len = 1) {
   350  .  .  .  .  .  0: *ast.Ident {
   351  .  .  .  .  .  .  NamePos: -
   352  .  .  .  .  .  .  Name: "SlicePoint"
   353  .  .  .  .  .  .  Obj: *ast.Object {
   354  .  .  .  .  .  .  .  Kind: var
   355  .  .  .  .  .  .  .  Name: "SlicePoint"
   356  .  .  .  .  .  .  .  Decl: *(obj @ 348)
   357  .  .  .  .  .  .  }
   358  .  .  .  .  .  }
   359  .  .  .  .  }
   360  .  .  .  .  Type: *ast.ArrayType {
   361  .  .  .  .  .  Lbrack: -
   362  .  .  .  .  .  Elt: *ast.StarExpr {
   363  .  .  .  .  .  .  Star: -
   364  .  .  .  .  .  .  X: *ast.Ident {
   365  .  .  .  .  .  .  .  NamePos: -
   366  .  .  .  .  .  .  .  Name: "int"
   367  .  .  .  .  .  .  }
   368  .  .  .  .  .  }
   369  .  .  .  .  }
   370  .  .  .  }
   371  .  .  .  17: *ast.Field {
   372  .  .  .  .  Names: []*ast.Ident (len = 1) {
   373  .  .  .  .  .  0: *ast.Ident {
   374  .  .  .  .  .  .  NamePos: -
   375  .  .  .  .  .  .  Name: "Arrayint"
   376  .  .  .  .  .  .  Obj: *ast.Object {
   377  .  .  .  .  .  .  .  Kind: var
   378  .  .  .  .  .  .  .  Name: "Arrayint"
   379  .  .  .  .  .  .  .  Decl: *(obj @ 371)
   380  .  .  .  .  .  .  }
   381  .  .  .  .  .  }
   382  .  .  .  .  }
   383  .  .  .  .  Type: *ast.ArrayType {
   384  .  .  .  .  .  Lbrack: -
   385  .  .  .  .  .  Len: *ast.BasicLit {
   386  .  .  .  .  .  .  ValuePos: -
   387  .  .  .  .  .  .  Kind: INT
   388  .  .  .  .  .  .  Value: "8"
   389  .  .  .  .  .  }
   390  .  .  .  .  .  Elt: *ast.Ident {
   391  .  .  .  .  .  .  NamePos: -
   392  .  .  .  .  .  .  Name: "int"
   393  .  .  .  .  .  }
   394  .  .  .  .  }
   395  .  .  .  }
   396  .  .  .  18: *ast.Field {
   397  .  .  .  .  Names: []*ast.Ident (len = 1) {
   398  .  .  .  .  .  0: *ast.Ident {
   399  .  .  .  .  .  .  NamePos: -
   400  .  .  .  .  .  .  Name: "ArrayPointer"
   401  .  .  .  .  .  .  Obj: *ast.Object {
   402  .  .  .  .  .  .  .  Kind: var
   403  .  .  .  .  .  .  .  Name: "ArrayPointer"
   404  .  .  .  .  .  .  .  Decl: *(obj @ 396)
   405  .  .  .  .  .  .  }
   406  .  .  .  .  .  }
   407  .  .  .  .  }
   408  .  .  .  .  Type: *ast.ArrayType {
   409  .  .  .  .  .  Lbrack: -
   410  .  .  .  .  .  Len: *ast.BasicLit {
   411  .  .  .  .  .  .  ValuePos: -
   412  .  .  .  .  .  .  Kind: INT
   413  .  .  .  .  .  .  Value: "8"
   414  .  .  .  .  .  }
   415  .  .  .  .  .  Elt: *ast.StarExpr {
   416  .  .  .  .  .  .  Star: -
   417  .  .  .  .  .  .  X: *ast.Ident {
   418  .  .  .  .  .  .  .  NamePos: -
   419  .  .  .  .  .  .  .  Name: "int"
   420  .  .  .  .  .  .  }
   421  .  .  .  .  .  }
   422  .  .  .  .  }
   423  .  .  .  }
   424  .  .  .  19: *ast.Field {
   425  .  .  .  .  Names: []*ast.Ident (len = 1) {
   426  .  .  .  .  .  0: *ast.Ident {
   427  .  .  .  .  .  .  NamePos: -
   428  .  .  .  .  .  .  Name: "ArrayStruct"
   429  .  .  .  .  .  .  Obj: *ast.Object {
   430  .  .  .  .  .  .  .  Kind: var
   431  .  .  .  .  .  .  .  Name: "ArrayStruct"
   432  .  .  .  .  .  .  .  Decl: *(obj @ 424)
   433  .  .  .  .  .  .  }
   434  .  .  .  .  .  }
   435  .  .  .  .  }
   436  .  .  .  .  Type: *ast.ArrayType {
   437  .  .  .  .  .  Lbrack: -
   438  .  .  .  .  .  Len: *ast.BasicLit {
   439  .  .  .  .  .  .  ValuePos: -
   440  .  .  .  .  .  .  Kind: INT
   441  .  .  .  .  .  .  Value: "8"
   442  .  .  .  .  .  }
   443  .  .  .  .  .  Elt: *ast.SelectorExpr {
   444  .  .  .  .  .  .  X: *ast.Ident {
   445  .  .  .  .  .  .  .  NamePos: -
   446  .  .  .  .  .  .  .  Name: "pkgcmd"
   447  .  .  .  .  .  .  }
   448  .  .  .  .  .  .  Sel: *ast.Ident {
   449  .  .  .  .  .  .  .  NamePos: -
   450  .  .  .  .  .  .  .  Name: "RootApp"
   451  .  .  .  .  .  .  }
   452  .  .  .  .  .  }
   453  .  .  .  .  }
   454  .  .  .  }
   455  .  .  .  20: *ast.Field {
   456  .  .  .  .  Names: []*ast.Ident (len = 1) {
   457  .  .  .  .  .  0: *ast.Ident {
   458  .  .  .  .  .  .  NamePos: -
   459  .  .  .  .  .  .  Name: "ArrayStructPointer"
   460  .  .  .  .  .  .  Obj: *ast.Object {
   461  .  .  .  .  .  .  .  Kind: var
   462  .  .  .  .  .  .  .  Name: "ArrayStructPointer"
   463  .  .  .  .  .  .  .  Decl: *(obj @ 455)
   464  .  .  .  .  .  .  }
   465  .  .  .  .  .  }
   466  .  .  .  .  }
   467  .  .  .  .  Type: *ast.ArrayType {
   468  .  .  .  .  .  Lbrack: -
   469  .  .  .  .  .  Len: *ast.BasicLit {
   470  .  .  .  .  .  .  ValuePos: -
   471  .  .  .  .  .  .  Kind: INT
   472  .  .  .  .  .  .  Value: "8"
   473  .  .  .  .  .  }
   474  .  .  .  .  .  Elt: *ast.StarExpr {
   475  .  .  .  .  .  .  Star: -
   476  .  .  .  .  .  .  X: *ast.SelectorExpr {
   477  .  .  .  .  .  .  .  X: *ast.Ident {
   478  .  .  .  .  .  .  .  .  NamePos: -
   479  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   480  .  .  .  .  .  .  .  }
   481  .  .  .  .  .  .  .  Sel: *ast.Ident {
   482  .  .  .  .  .  .  .  .  NamePos: -
   483  .  .  .  .  .  .  .  .  Name: "RootApp"
   484  .  .  .  .  .  .  .  }
   485  .  .  .  .  .  .  }
   486  .  .  .  .  .  }
   487  .  .  .  .  }
   488  .  .  .  }
   489  .  .  .  21: *ast.Field {
   490  .  .  .  .  Type: *ast.Ident {
   491  .  .  .  .  .  NamePos: -
   492  .  .  .  .  .  Name: "Mocker"
   493  .  .  .  .  }
   494  .  .  .  }
   495  .  .  .  22: *ast.Field {
   496  .  .  .  .  Names: []*ast.Ident (len = 1) {
   497  .  .  .  .  .  0: *ast.Ident {
   498  .  .  .  .  .  .  NamePos: -
   499  .  .  .  .  .  .  Name: "mocker"
   500  .  .  .  .  .  .  Obj: *ast.Object {
   501  .  .  .  .  .  .  .  Kind: var
   502  .  .  .  .  .  .  .  Name: "mocker"
   503  .  .  .  .  .  .  .  Decl: *(obj @ 495)
   504  .  .  .  .  .  .  }
   505  .  .  .  .  .  }
   506  .  .  .  .  }
   507  .  .  .  .  Type: *ast.Ident {
   508  .  .  .  .  .  NamePos: -
   509  .  .  .  .  .  Name: "Mocker"
   510  .  .  .  .  }
   511  .  .  .  }
   512  .  .  .  23: *ast.Field {
   513  .  .  .  .  Names: []*ast.Ident (len = 1) {
   514  .  .  .  .  .  0: *ast.Ident {
   515  .  .  .  .  .  .  NamePos: -
   516  .  .  .  .  .  .  Name: "Maps"
   517  .  .  .  .  .  .  Obj: *ast.Object {
   518  .  .  .  .  .  .  .  Kind: var
   519  .  .  .  .  .  .  .  Name: "Maps"
   520  .  .  .  .  .  .  .  Decl: *(obj @ 512)
   521  .  .  .  .  .  .  }
   522  .  .  .  .  .  }
   523  .  .  .  .  }
   524  .  .  .  .  Type: *ast.MapType {
   525  .  .  .  .  .  Map: -
   526  .  .  .  .  .  Key: *ast.Ident {
   527  .  .  .  .  .  .  NamePos: -
   528  .  .  .  .  .  .  Name: "string"
   529  .  .  .  .  .  }
   530  .  .  .  .  .  Value: *ast.Ident {
   531  .  .  .  .  .  .  NamePos: -
   532  .  .  .  .  .  .  Name: "int"
   533  .  .  .  .  .  }
   534  .  .  .  .  }
   535  .  .  .  }
   536  .  .  .  24: *ast.Field {
   537  .  .  .  .  Names: []*ast.Ident (len = 1) {
   538  .  .  .  .  .  0: *ast.Ident {
   539  .  .  .  .  .  .  NamePos: -
   540  .  .  .  .  .  .  Name: "MapsStruct"
   541  .  .  .  .  .  .  Obj: *ast.Object {
   542  .  .  .  .  .  .  .  Kind: var
   543  .  .  .  .  .  .  .  Name: "MapsStruct"
   544  .  .  .  .  .  .  .  Decl: *(obj @ 536)
   545  .  .  .  .  .  .  }
   546  .  .  .  .  .  }
   547  .  .  .  .  }
   548  .  .  .  .  Type: *ast.MapType {
   549  .  .  .  .  .  Map: -
   550  .  .  .  .  .  Key: *ast.Ident {
   551  .  .  .  .  .  .  NamePos: -
   552  .  .  .  .  .  .  Name: "string"
   553  .  .  .  .  .  }
   554  .  .  .  .  .  Value: *ast.SelectorExpr {
   555  .  .  .  .  .  .  X: *ast.Ident {
   556  .  .  .  .  .  .  .  NamePos: -
   557  .  .  .  .  .  .  .  Name: "pkgcmd"
   558  .  .  .  .  .  .  }
   559  .  .  .  .  .  .  Sel: *ast.Ident {
   560  .  .  .  .  .  .  .  NamePos: -
   561  .  .  .  .  .  .  .  Name: "Source"
   562  .  .  .  .  .  .  }
   563  .  .  .  .  .  }
   564  .  .  .  .  }
   565  .  .  .  }
   566  .  .  .  25: *ast.Field {
   567  .  .  .  .  Names: []*ast.Ident (len = 1) {
   568  .  .  .  .  .  0: *ast.Ident {
   569  .  .  .  .  .  .  NamePos: -
   570  .  .  .  .  .  .  Name: "MapsPointerStruct"
   571  .  .  .  .  .  .  Obj: *ast.Object {
   572  .  .  .  .  .  .  .  Kind: var
   573  .  .  .  .  .  .  .  Name: "MapsPointerStruct"
   574  .  .  .  .  .  .  .  Decl: *(obj @ 566)
   575  .  .  .  .  .  .  }
   576  .  .  .  .  .  }
   577  .  .  .  .  }
   578  .  .  .  .  Type: *ast.MapType {
   579  .  .  .  .  .  Map: -
   580  .  .  .  .  .  Key: *ast.Ident {
   581  .  .  .  .  .  .  NamePos: -
   582  .  .  .  .  .  .  Name: "string"
   583  .  .  .  .  .  }
   584  .  .  .  .  .  Value: *ast.StarExpr {
   585  .  .  .  .  .  .  Star: -
   586  .  .  .  .  .  .  X: *ast.SelectorExpr {
   587  .  .  .  .  .  .  .  X: *ast.Ident {
   588  .  .  .  .  .  .  .  .  NamePos: -
   589  .  .  .  .  .  .  .  .  Name: "pkgcmd"
   590  .  .  .  .  .  .  .  }
   591  .  .  .  .  .  .  .  Sel: *ast.Ident {
   592  .  .  .  .  .  .  .  .  NamePos: -
   593  .  .  .  .  .  .  .  .  Name: "Source"
   594  .  .  .  .  .  .  .  }
   595  .  .  .  .  .  .  }
   596  .  .  .  .  .  }
   597  .  .  .  .  }
   598  .  .  .  }
   599  .  .  .  26: *ast.Field {
   600  .  .  .  .  Names: []*ast.Ident (len = 1) {
   601  .  .  .  .  .  0: *ast.Ident {
   602  .  .  .  .  .  .  NamePos: -
   603  .  .  .  .  .  .  Name: "innerSource"
   604  .  .  .  .  .  .  Obj: *ast.Object {
   605  .  .  .  .  .  .  .  Kind: var
   606  .  .  .  .  .  .  .  Name: "innerSource"
   607  .  .  .  .  .  .  .  Decl: *(obj @ 599)
   608  .  .  .  .  .  .  }
   609  .  .  .  .  .  }
   610  .  .  .  .  }
   611  .  .  .  .  Type: *ast.Ident {
   612  .  .  .  .  .  NamePos: -
   613  .  .  .  .  .  Name: "Source"
   614  .  .  .  .  }
   615  .  .  .  }
   616  .  .  }
   617  .  .  Closing: -
   618  .  }
   619  .  Incomplete: false
   620  }
     0  *ast.FieldList {
     1  .  Opening: -
     2  .  List: []*ast.Field (len = 27) {
     3  .  .  0: *ast.Field {
     4  .  .  .  Names: []*ast.Ident (len = 1) {
     5  .  .  .  .  0: *ast.Ident {
     6  .  .  .  .  .  NamePos: -
     7  .  .  .  .  .  Name: "TXXXXXX"
     8  .  .  .  .  .  Obj: *ast.Object {
     9  .  .  .  .  .  .  Kind: var
    10  .  .  .  .  .  .  Name: "TXXXXXX"
    11  .  .  .  .  .  .  Decl: *(obj @ 3)
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Type: *ast.Ident {
    16  .  .  .  .  NamePos: -
    17  .  .  .  .  Name: "Test"
    18  .  .  .  }
    19  .  .  }
    20  .  .  1: *ast.Field {
    21  .  .  .  Type: *ast.Ident {
    22  .  .  .  .  NamePos: -
    23  .  .  .  .  Name: "Test"
    24  .  .  .  }
    25  .  .  }
    26  .  .  2: *ast.Field {
    27  .  .  .  Type: *ast.SelectorExpr {
    28  .  .  .  .  X: *ast.Ident {
    29  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  Name: "pkgcmd"
    31  .  .  .  .  }
    32  .  .  .  .  Sel: *ast.Ident {
    33  .  .  .  .  .  NamePos: -
    34  .  .  .  .  .  Name: "RootApp"
    35  .  .  .  .  }
    36  .  .  .  }
    37  .  .  }
    38  .  .  3: *ast.Field {
    39  .  .  .  Names: []*ast.Ident (len = 1) {
    40  .  .  .  .  0: *ast.Ident {
    41  .  .  .  .  .  NamePos: -
    42  .  .  .  .  .  Name: "RootAPPXXXXXX"
    43  .  .  .  .  .  Obj: *ast.Object {
    44  .  .  .  .  .  .  Kind: var
    45  .  .  .  .  .  .  Name: "RootAPPXXXXXX"
    46  .  .  .  .  .  .  Decl: *(obj @ 38)
    47  .  .  .  .  .  }
    48  .  .  .  .  }
    49  .  .  .  }
    50  .  .  .  Type: *ast.SelectorExpr {
    51  .  .  .  .  X: *ast.Ident {
    52  .  .  .  .  .  NamePos: -
    53  .  .  .  .  .  Name: "pkgcmd"
    54  .  .  .  .  }
    55  .  .  .  .  Sel: *ast.Ident {
    56  .  .  .  .  .  NamePos: -
    57  .  .  .  .  .  Name: "RootApp"
    58  .  .  .  .  }
    59  .  .  .  }
    60  .  .  }
    61  .  .  4: *ast.Field {
    62  .  .  .  Names: []*ast.Ident (len = 1) {
    63  .  .  .  .  0: *ast.Ident {
    64  .  .  .  .  .  NamePos: -
    65  .  .  .  .  .  Name: "Source"
    66  .  .  .  .  .  Obj: *ast.Object {
    67  .  .  .  .  .  .  Kind: var
    68  .  .  .  .  .  .  Name: "Source"
    69  .  .  .  .  .  .  Decl: *(obj @ 61)
    70  .  .  .  .  .  }
    71  .  .  .  .  }
    72  .  .  .  }
    73  .  .  .  Type: *ast.SelectorExpr {
    74  .  .  .  .  X: *ast.Ident {
    75  .  .  .  .  .  NamePos: -
    76  .  .  .  .  .  Name: "pkgcmd"
    77  .  .  .  .  }
    78  .  .  .  .  Sel: *ast.Ident {
    79  .  .  .  .  .  NamePos: -
    80  .  .  .  .  .  Name: "Source"
    81  .  .  .  .  }
    82  .  .  .  }
    83  .  .  }
    84  .  .  5: *ast.Field {
    85  .  .  .  Names: []*ast.Ident (len = 1) {
    86  .  .  .  .  0: *ast.Ident {
    87  .  .  .  .  .  NamePos: -
    88  .  .  .  .  .  Name: "PointerStruct"
    89  .  .  .  .  .  Obj: *ast.Object {
    90  .  .  .  .  .  .  Kind: var
    91  .  .  .  .  .  .  Name: "PointerStruct"
    92  .  .  .  .  .  .  Decl: *(obj @ 84)
    93  .  .  .  .  .  }
    94  .  .  .  .  }
    95  .  .  .  }
    96  .  .  .  Type: *ast.StarExpr {
    97  .  .  .  .  Star: -
    98  .  .  .  .  X: *ast.SelectorExpr {
    99  .  .  .  .  .  X: *ast.Ident {
   100  .  .  .  .  .  .  NamePos: -
   101  .  .  .  .  .  .  Name: "pkgcmd"
   102  .  .  .  .  .  }
   103  .  .  .  .  .  Sel: *ast.Ident {
   104  .  .  .  .  .  .  NamePos: -
   105  .  .  .  .  .  .  Name: "RootApp"
   106  .  .  .  .  .  }
   107  .  .  .  .  }
   108  .  .  .  }
   109  .  .  }
   110  .  .  6: *ast.Field {
   111  .  .  .  Names: []*ast.Ident (len = 1) {
   112  .  .  .  .  0: *ast.Ident {
   113  .  .  .  .  .  NamePos: -
   114  .  .  .  .  .  Name: "PointInt"
   115  .  .  .  .  .  Obj: *ast.Object {
   116  .  .  .  .  .  .  Kind: var
   117  .  .  .  .  .  .  Name: "PointInt"
   118  .  .  .  .  .  .  Decl: *(obj @ 110)
   119  .  .  .  .  .  }
   120  .  .  .  .  }
   121  .  .  .  }
   122  .  .  .  Type: *ast.StarExpr {
   123  .  .  .  .  Star: -
   124  .  .  .  .  X: *ast.Ident {
   125  .  .  .  .  .  NamePos: -
   126  .  .  .  .  .  Name: "int"
   127  .  .  .  .  }
   128  .  .  .  }
   129  .  .  }
   130  .  .  7: *ast.Field {
   131  .  .  .  Names: []*ast.Ident (len = 1) {
   132  .  .  .  .  0: *ast.Ident {
   133  .  .  .  .  .  NamePos: -
   134  .  .  .  .  .  Name: "PointString"
   135  .  .  .  .  .  Obj: *ast.Object {
   136  .  .  .  .  .  .  Kind: var
   137  .  .  .  .  .  .  Name: "PointString"
   138  .  .  .  .  .  .  Decl: *(obj @ 130)
   139  .  .  .  .  .  }
   140  .  .  .  .  }
   141  .  .  .  }
   142  .  .  .  Type: *ast.StarExpr {
   143  .  .  .  .  Star: -
   144  .  .  .  .  X: *ast.Ident {
   145  .  .  .  .  .  NamePos: -
   146  .  .  .  .  .  Name: "string"
   147  .  .  .  .  }
   148  .  .  .  }
   149  .  .  .  Tag: *ast.BasicLit {
   150  .  .  .  .  ValuePos: -
   151  .  .  .  .  Kind: STRING
   152  .  .  .  .  Value: "`json:\"pointstring\"`"
   153  .  .  .  }
   154  .  .  }
   155  .  .  8: *ast.Field {
   156  .  .  .  Names: []*ast.Ident (len = 1) {
   157  .  .  .  .  0: *ast.Ident {
   158  .  .  .  .  .  NamePos: -
   159  .  .  .  .  .  Name: "PointSlice"
   160  .  .  .  .  .  Obj: *ast.Object {
   161  .  .  .  .  .  .  Kind: var
   162  .  .  .  .  .  .  Name: "PointSlice"
   163  .  .  .  .  .  .  Decl: *(obj @ 155)
   164  .  .  .  .  .  }
   165  .  .  .  .  }
   166  .  .  .  }
   167  .  .  .  Type: *ast.StarExpr {
   168  .  .  .  .  Star: -
   169  .  .  .  .  X: *ast.ArrayType {
   170  .  .  .  .  .  Lbrack: -
   171  .  .  .  .  .  Elt: *ast.Ident {
   172  .  .  .  .  .  .  NamePos: -
   173  .  .  .  .  .  .  Name: "int"
   174  .  .  .  .  .  }
   175  .  .  .  .  }
   176  .  .  .  }
   177  .  .  }
   178  .  .  9: *ast.Field {
   179  .  .  .  Names: []*ast.Ident (len = 1) {
   180  .  .  .  .  0: *ast.Ident {
   181  .  .  .  .  .  NamePos: -
   182  .  .  .  .  .  Name: "PointMap"
   183  .  .  .  .  .  Obj: *ast.Object {
   184  .  .  .  .  .  .  Kind: var
   185  .  .  .  .  .  .  Name: "PointMap"
   186  .  .  .  .  .  .  Decl: *(obj @ 178)
   187  .  .  .  .  .  }
   188  .  .  .  .  }
   189  .  .  .  }
   190  .  .  .  Type: *ast.StarExpr {
   191  .  .  .  .  Star: -
   192  .  .  .  .  X: *ast.MapType {
   193  .  .  .  .  .  Map: -
   194  .  .  .  .  .  Key: *ast.Ident {
   195  .  .  .  .  .  .  NamePos: -
   196  .  .  .  .  .  .  Name: "string"
   197  .  .  .  .  .  }
   198  .  .  .  .  .  Value: *ast.Ident {
   199  .  .  .  .  .  .  NamePos: -
   200  .  .  .  .  .  .  Name: "int"
   201  .  .  .  .  .  }
   202  .  .  .  .  }
   203  .  .  .  }
   204  .  .  }
   205  .  .  10: *ast.Field {
   206  .  .  .  Names: []*ast.Ident (len = 1) {
   207  .  .  .  .  0: *ast.Ident {
   208  .  .  .  .  .  NamePos: -
   209  .  .  .  .  .  Name: "All"
   210  .  .  .  .  .  Obj: *ast.Object {
   211  .  .  .  .  .  .  Kind: var
   212  .  .  .  .  .  .  Name: "All"
   213  .  .  .  .  .  .  Decl: *(obj @ 205)
   214  .  .  .  .  .  }
   215  .  .  .  .  }
   216  .  .  .  }
   217  .  .  .  Type: *ast.Ident {
   218  .  .  .  .  NamePos: -
   219  .  .  .  .  Name: "bool"
   220  .  .  .  }
   221  .  .  .  Tag: *ast.BasicLit {
   222  .  .  .  .  ValuePos: -
   223  .  .  .  .  Kind: STRING
   224  .  .  .  .  Value: "`json:\"all\"`"
   225  .  .  .  }
   226  .  .  }
   227  .  .  11: *ast.Field {
   228  .  .  .  Names: []*ast.Ident (len = 1) {
   229  .  .  .  .  0: *ast.Ident {
   230  .  .  .  .  .  NamePos: -
   231  .  .  .  .  .  Name: "BuildTags"
   232  .  .  .  .  .  Obj: *ast.Object {
   233  .  .  .  .  .  .  Kind: var
   234  .  .  .  .  .  .  Name: "BuildTags"
   235  .  .  .  .  .  .  Decl: *(obj @ 227)
   236  .  .  .  .  .  }
   237  .  .  .  .  }
   238  .  .  .  }
   239  .  .  .  Type: *ast.Ident {
   240  .  .  .  .  NamePos: -
   241  .  .  .  .  Name: "string"
   242  .  .  .  }
   243  .  .  .  Tag: *ast.BasicLit {
   244  .  .  .  .  ValuePos: -
   245  .  .  .  .  Kind: STRING
   246  .  .  .  .  Value: "`mapstructure:\"tags\"`"
   247  .  .  .  }
   248  .  .  }
   249  .  .  12: *ast.Field {
   250  .  .  .  Names: []*ast.Ident (len = 1) {
   251  .  .  .  .  0: *ast.Ident {
   252  .  .  .  .  .  NamePos: -
   253  .  .  .  .  .  Name: "Version"
   254  .  .  .  .  .  Obj: *ast.Object {
   255  .  .  .  .  .  .  Kind: var
   256  .  .  .  .  .  .  Name: "Version"
   257  .  .  .  .  .  .  Decl: *(obj @ 249)
   258  .  .  .  .  .  }
   259  .  .  .  .  }
   260  .  .  .  }
   261  .  .  .  Type: *ast.Ident {
   262  .  .  .  .  NamePos: -
   263  .  .  .  .  Name: "int"
   264  .  .  .  }
   265  .  .  .  Tag: *ast.BasicLit {
   266  .  .  .  .  ValuePos: -
   267  .  .  .  .  Kind: STRING
   268  .  .  .  .  Value: "`json:\"-\"`"
   269  .  .  .  }
   270  .  .  }
   271  .  .  13: *ast.Field {
   272  .  .  .  Names: []*ast.Ident (len = 1) {
   273  .  .  .  .  0: *ast.Ident {
   274  .  .  .  .  .  NamePos: -
   275  .  .  .  .  .  Name: "Slices"
   276  .  .  .  .  .  Obj: *ast.Object {
   277  .  .  .  .  .  .  Kind: var
   278  .  .  .  .  .  .  Name: "Slices"
   279  .  .  .  .  .  .  Decl: *(obj @ 271)
   280  .  .  .  .  .  }
   281  .  .  .  .  }
   282  .  .  .  }
   283  .  .  .  Type: *ast.ArrayType {
   284  .  .  .  .  Lbrack: -
   285  .  .  .  .  Elt: *ast.Ident {
   286  .  .  .  .  .  NamePos: -
   287  .  .  .  .  .  Name: "int"
   288  .  .  .  .  }
   289  .  .  .  }
   290  .  .  }
   291  .  .  14: *ast.Field {
   292  .  .  .  Names: []*ast.Ident (len = 1) {
   293  .  .  .  .  0: *ast.Ident {
   294  .  .  .  .  .  NamePos: -
   295  .  .  .  .  .  Name: "SlicesStruct"
   296  .  .  .  .  .  Obj: *ast.Object {
   297  .  .  .  .  .  .  Kind: var
   298  .  .  .  .  .  .  Name: "SlicesStruct"
   299  .  .  .  .  .  .  Decl: *(obj @ 291)
   300  .  .  .  .  .  }
   301  .  .  .  .  }
   302  .  .  .  }
   303  .  .  .  Type: *ast.ArrayType {
   304  .  .  .  .  Lbrack: -
   305  .  .  .  .  Elt: *ast.SelectorExpr {
   306  .  .  .  .  .  X: *ast.Ident {
   307  .  .  .  .  .  .  NamePos: -
   308  .  .  .  .  .  .  Name: "pkgcmd"
   309  .  .  .  .  .  }
   310  .  .  .  .  .  Sel: *ast.Ident {
   311  .  .  .  .  .  .  NamePos: -
   312  .  .  .  .  .  .  Name: "Source"
   313  .  .  .  .  .  }
   314  .  .  .  .  }
   315  .  .  .  }
   316  .  .  }
   317  .  .  15: *ast.Field {
   318  .  .  .  Names: []*ast.Ident (len = 1) {
   319  .  .  .  .  0: *ast.Ident {
   320  .  .  .  .  .  NamePos: -
   321  .  .  .  .  .  Name: "SlicesPointerStruct"
   322  .  .  .  .  .  Obj: *ast.Object {
   323  .  .  .  .  .  .  Kind: var
   324  .  .  .  .  .  .  Name: "SlicesPointerStruct"
   325  .  .  .  .  .  .  Decl: *(obj @ 317)
   326  .  .  .  .  .  }
   327  .  .  .  .  }
   328  .  .  .  }
   329  .  .  .  Type: *ast.ArrayType {
   330  .  .  .  .  Lbrack: -
   331  .  .  .  .  Elt: *ast.StarExpr {
   332  .  .  .  .  .  Star: -
   333  .  .  .  .  .  X: *ast.SelectorExpr {
   334  .  .  .  .  .  .  X: *ast.Ident {
   335  .  .  .  .  .  .  .  NamePos: -
   336  .  .  .  .  .  .  .  Name: "pkgcmd"
   337  .  .  .  .  .  .  }
   338  .  .  .  .  .  .  Sel: *ast.Ident {
   339  .  .  .  .  .  .  .  NamePos: -
   340  .  .  .  .  .  .  .  Name: "Source"
   341  .  .  .  .  .  .  }
   342  .  .  .  .  .  }
   343  .  .  .  .  }
   344  .  .  .  }
   345  .  .  }
   346  .  .  16: *ast.Field {
   347  .  .  .  Names: []*ast.Ident (len = 1) {
   348  .  .  .  .  0: *ast.Ident {
   349  .  .  .  .  .  NamePos: -
   350  .  .  .  .  .  Name: "SlicePoint"
   351  .  .  .  .  .  Obj: *ast.Object {
   352  .  .  .  .  .  .  Kind: var
   353  .  .  .  .  .  .  Name: "SlicePoint"
   354  .  .  .  .  .  .  Decl: *(obj @ 346)
   355  .  .  .  .  .  }
   356  .  .  .  .  }
   357  .  .  .  }
   358  .  .  .  Type: *ast.ArrayType {
   359  .  .  .  .  Lbrack: -
   360  .  .  .  .  Elt: *ast.StarExpr {
   361  .  .  .  .  .  Star: -
   362  .  .  .  .  .  X: *ast.Ident {
   363  .  .  .  .  .  .  NamePos: -
   364  .  .  .  .  .  .  Name: "int"
   365  .  .  .  .  .  }
   366  .  .  .  .  }
   367  .  .  .  }
   368  .  .  }
   369  .  .  17: *ast.Field {
   370  .  .  .  Names: []*ast.Ident (len = 1) {
   371  .  .  .  .  0: *ast.Ident {
   372  .  .  .  .  .  NamePos: -
   373  .  .  .  .  .  Name: "Arrayint"
   374  .  .  .  .  .  Obj: *ast.Object {
   375  .  .  .  .  .  .  Kind: var
   376  .  .  .  .  .  .  Name: "Arrayint"
   377  .  .  .  .  .  .  Decl: *(obj @ 369)
   378  .  .  .  .  .  }
   379  .  .  .  .  }
   380  .  .  .  }
   381  .  .  .  Type: *ast.ArrayType {
   382  .  .  .  .  Lbrack: -
   383  .  .  .  .  Len: *ast.BasicLit {
   384  .  .  .  .  .  ValuePos: -
   385  .  .  .  .  .  Kind: INT
   386  .  .  .  .  .  Value: "8"
   387  .  .  .  .  }
   388  .  .  .  .  Elt: *ast.Ident {
   389  .  .  .  .  .  NamePos: -
   390  .  .  .  .  .  Name: "int"
   391  .  .  .  .  }
   392  .  .  .  }
   393  .  .  }
   394  .  .  18: *ast.Field {
   395  .  .  .  Names: []*ast.Ident (len = 1) {
   396  .  .  .  .  0: *ast.Ident {
   397  .  .  .  .  .  NamePos: -
   398  .  .  .  .  .  Name: "ArrayPointer"
   399  .  .  .  .  .  Obj: *ast.Object {
   400  .  .  .  .  .  .  Kind: var
   401  .  .  .  .  .  .  Name: "ArrayPointer"
   402  .  .  .  .  .  .  Decl: *(obj @ 394)
   403  .  .  .  .  .  }
   404  .  .  .  .  }
   405  .  .  .  }
   406  .  .  .  Type: *ast.ArrayType {
   407  .  .  .  .  Lbrack: -
   408  .  .  .  .  Len: *ast.BasicLit {
   409  .  .  .  .  .  ValuePos: -
   410  .  .  .  .  .  Kind: INT
   411  .  .  .  .  .  Value: "8"
   412  .  .  .  .  }
   413  .  .  .  .  Elt: *ast.StarExpr {
   414  .  .  .  .  .  Star: -
   415  .  .  .  .  .  X: *ast.Ident {
   416  .  .  .  .  .  .  NamePos: -
   417  .  .  .  .  .  .  Name: "int"
   418  .  .  .  .  .  }
   419  .  .  .  .  }
   420  .  .  .  }
   421  .  .  }
   422  .  .  19: *ast.Field {
   423  .  .  .  Names: []*ast.Ident (len = 1) {
   424  .  .  .  .  0: *ast.Ident {
   425  .  .  .  .  .  NamePos: -
   426  .  .  .  .  .  Name: "ArrayStruct"
   427  .  .  .  .  .  Obj: *ast.Object {
   428  .  .  .  .  .  .  Kind: var
   429  .  .  .  .  .  .  Name: "ArrayStruct"
   430  .  .  .  .  .  .  Decl: *(obj @ 422)
   431  .  .  .  .  .  }
   432  .  .  .  .  }
   433  .  .  .  }
   434  .  .  .  Type: *ast.ArrayType {
   435  .  .  .  .  Lbrack: -
   436  .  .  .  .  Len: *ast.BasicLit {
   437  .  .  .  .  .  ValuePos: -
   438  .  .  .  .  .  Kind: INT
   439  .  .  .  .  .  Value: "8"
   440  .  .  .  .  }
   441  .  .  .  .  Elt: *ast.SelectorExpr {
   442  .  .  .  .  .  X: *ast.Ident {
   443  .  .  .  .  .  .  NamePos: -
   444  .  .  .  .  .  .  Name: "pkgcmd"
   445  .  .  .  .  .  }
   446  .  .  .  .  .  Sel: *ast.Ident {
   447  .  .  .  .  .  .  NamePos: -
   448  .  .  .  .  .  .  Name: "RootApp"
   449  .  .  .  .  .  }
   450  .  .  .  .  }
   451  .  .  .  }
   452  .  .  }
   453  .  .  20: *ast.Field {
   454  .  .  .  Names: []*ast.Ident (len = 1) {
   455  .  .  .  .  0: *ast.Ident {
   456  .  .  .  .  .  NamePos: -
   457  .  .  .  .  .  Name: "ArrayStructPointer"
   458  .  .  .  .  .  Obj: *ast.Object {
   459  .  .  .  .  .  .  Kind: var
   460  .  .  .  .  .  .  Name: "ArrayStructPointer"
   461  .  .  .  .  .  .  Decl: *(obj @ 453)
   462  .  .  .  .  .  }
   463  .  .  .  .  }
   464  .  .  .  }
   465  .  .  .  Type: *ast.ArrayType {
   466  .  .  .  .  Lbrack: -
   467  .  .  .  .  Len: *ast.BasicLit {
   468  .  .  .  .  .  ValuePos: -
   469  .  .  .  .  .  Kind: INT
   470  .  .  .  .  .  Value: "8"
   471  .  .  .  .  }
   472  .  .  .  .  Elt: *ast.StarExpr {
   473  .  .  .  .  .  Star: -
   474  .  .  .  .  .  X: *ast.SelectorExpr {
   475  .  .  .  .  .  .  X: *ast.Ident {
   476  .  .  .  .  .  .  .  NamePos: -
   477  .  .  .  .  .  .  .  Name: "pkgcmd"
   478  .  .  .  .  .  .  }
   479  .  .  .  .  .  .  Sel: *ast.Ident {
   480  .  .  .  .  .  .  .  NamePos: -
   481  .  .  .  .  .  .  .  Name: "RootApp"
   482  .  .  .  .  .  .  }
   483  .  .  .  .  .  }
   484  .  .  .  .  }
   485  .  .  .  }
   486  .  .  }
   487  .  .  21: *ast.Field {
   488  .  .  .  Type: *ast.Ident {
   489  .  .  .  .  NamePos: -
   490  .  .  .  .  Name: "Mocker"
   491  .  .  .  }
   492  .  .  }
   493  .  .  22: *ast.Field {
   494  .  .  .  Names: []*ast.Ident (len = 1) {
   495  .  .  .  .  0: *ast.Ident {
   496  .  .  .  .  .  NamePos: -
   497  .  .  .  .  .  Name: "mocker"
   498  .  .  .  .  .  Obj: *ast.Object {
   499  .  .  .  .  .  .  Kind: var
   500  .  .  .  .  .  .  Name: "mocker"
   501  .  .  .  .  .  .  Decl: *(obj @ 493)
   502  .  .  .  .  .  }
   503  .  .  .  .  }
   504  .  .  .  }
   505  .  .  .  Type: *ast.Ident {
   506  .  .  .  .  NamePos: -
   507  .  .  .  .  Name: "Mocker"
   508  .  .  .  }
   509  .  .  }
   510  .  .  23: *ast.Field {
   511  .  .  .  Names: []*ast.Ident (len = 1) {
   512  .  .  .  .  0: *ast.Ident {
   513  .  .  .  .  .  NamePos: -
   514  .  .  .  .  .  Name: "Maps"
   515  .  .  .  .  .  Obj: *ast.Object {
   516  .  .  .  .  .  .  Kind: var
   517  .  .  .  .  .  .  Name: "Maps"
   518  .  .  .  .  .  .  Decl: *(obj @ 510)
   519  .  .  .  .  .  }
   520  .  .  .  .  }
   521  .  .  .  }
   522  .  .  .  Type: *ast.MapType {
   523  .  .  .  .  Map: -
   524  .  .  .  .  Key: *ast.Ident {
   525  .  .  .  .  .  NamePos: -
   526  .  .  .  .  .  Name: "string"
   527  .  .  .  .  }
   528  .  .  .  .  Value: *ast.Ident {
   529  .  .  .  .  .  NamePos: -
   530  .  .  .  .  .  Name: "int"
   531  .  .  .  .  }
   532  .  .  .  }
   533  .  .  }
   534  .  .  24: *ast.Field {
   535  .  .  .  Names: []*ast.Ident (len = 1) {
   536  .  .  .  .  0: *ast.Ident {
   537  .  .  .  .  .  NamePos: -
   538  .  .  .  .  .  Name: "MapsStruct"
   539  .  .  .  .  .  Obj: *ast.Object {
   540  .  .  .  .  .  .  Kind: var
   541  .  .  .  .  .  .  Name: "MapsStruct"
   542  .  .  .  .  .  .  Decl: *(obj @ 534)
   543  .  .  .  .  .  }
   544  .  .  .  .  }
   545  .  .  .  }
   546  .  .  .  Type: *ast.MapType {
   547  .  .  .  .  Map: -
   548  .  .  .  .  Key: *ast.Ident {
   549  .  .  .  .  .  NamePos: -
   550  .  .  .  .  .  Name: "string"
   551  .  .  .  .  }
   552  .  .  .  .  Value: *ast.SelectorExpr {
   553  .  .  .  .  .  X: *ast.Ident {
   554  .  .  .  .  .  .  NamePos: -
   555  .  .  .  .  .  .  Name: "pkgcmd"
   556  .  .  .  .  .  }
   557  .  .  .  .  .  Sel: *ast.Ident {
   558  .  .  .  .  .  .  NamePos: -
   559  .  .  .  .  .  .  Name: "Source"
   560  .  .  .  .  .  }
   561  .  .  .  .  }
   562  .  .  .  }
   563  .  .  }
   564  .  .  25: *ast.Field {
   565  .  .  .  Names: []*ast.Ident (len = 1) {
   566  .  .  .  .  0: *ast.Ident {
   567  .  .  .  .  .  NamePos: -
   568  .  .  .  .  .  Name: "MapsPointerStruct"
   569  .  .  .  .  .  Obj: *ast.Object {
   570  .  .  .  .  .  .  Kind: var
   571  .  .  .  .  .  .  Name: "MapsPointerStruct"
   572  .  .  .  .  .  .  Decl: *(obj @ 564)
   573  .  .  .  .  .  }
   574  .  .  .  .  }
   575  .  .  .  }
   576  .  .  .  Type: *ast.MapType {
   577  .  .  .  .  Map: -
   578  .  .  .  .  Key: *ast.Ident {
   579  .  .  .  .  .  NamePos: -
   580  .  .  .  .  .  Name: "string"
   581  .  .  .  .  }
   582  .  .  .  .  Value: *ast.StarExpr {
   583  .  .  .  .  .  Star: -
   584  .  .  .  .  .  X: *ast.SelectorExpr {
   585  .  .  .  .  .  .  X: *ast.Ident {
   586  .  .  .  .  .  .  .  NamePos: -
   587  .  .  .  .  .  .  .  Name: "pkgcmd"
   588  .  .  .  .  .  .  }
   589  .  .  .  .  .  .  Sel: *ast.Ident {
   590  .  .  .  .  .  .  .  NamePos: -
   591  .  .  .  .  .  .  .  Name: "Source"
   592  .  .  .  .  .  .  }
   593  .  .  .  .  .  }
   594  .  .  .  .  }
   595  .  .  .  }
   596  .  .  }
   597  .  .  26: *ast.Field {
   598  .  .  .  Names: []*ast.Ident (len = 1) {
   599  .  .  .  .  0: *ast.Ident {
   600  .  .  .  .  .  NamePos: -
   601  .  .  .  .  .  Name: "innerSource"
   602  .  .  .  .  .  Obj: *ast.Object {
   603  .  .  .  .  .  .  Kind: var
   604  .  .  .  .  .  .  Name: "innerSource"
   605  .  .  .  .  .  .  Decl: *(obj @ 597)
   606  .  .  .  .  .  }
   607  .  .  .  .  }
   608  .  .  .  }
   609  .  .  .  Type: *ast.Ident {
   610  .  .  .  .  NamePos: -
   611  .  .  .  .  Name: "Source"
   612  .  .  .  }
   613  .  .  }
   614  .  }
   615  .  Closing: -
   616  }
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "TXXXXXX"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "TXXXXXX"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "Test"
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "TXXXXXX"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "TXXXXXX"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "Test"
    13  .  .  .  }
    14  .  .  }
    15  .  }
    16  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Test"
     3  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Type: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "Test"
     4  .  }
     5  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Test"
     3  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Type: *ast.SelectorExpr {
     2  .  .  X: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "pkgcmd"
     5  .  .  }
     6  .  .  Sel: *ast.Ident {
     7  .  .  .  NamePos: -
     8  .  .  .  Name: "RootApp"
     9  .  .  }
    10  .  }
    11  }
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "RootApp"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "RootApp"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "RootAPPXXXXXX"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "RootAPPXXXXXX"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.SelectorExpr {
    13  .  .  X: *ast.Ident {
    14  .  .  .  NamePos: -
    15  .  .  .  Name: "pkgcmd"
    16  .  .  }
    17  .  .  Sel: *ast.Ident {
    18  .  .  .  NamePos: -
    19  .  .  .  Name: "RootApp"
    20  .  .  }
    21  .  }
    22  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "RootAPPXXXXXX"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "RootAPPXXXXXX"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.SelectorExpr {
    11  .  .  .  .  X: *ast.Ident {
    12  .  .  .  .  .  NamePos: -
    13  .  .  .  .  .  Name: "pkgcmd"
    14  .  .  .  .  }
    15  .  .  .  .  Sel: *ast.Ident {
    16  .  .  .  .  .  NamePos: -
    17  .  .  .  .  .  Name: "RootApp"
    18  .  .  .  .  }
    19  .  .  .  }
    20  .  .  }
    21  .  }
    22  }
     0  nil
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "RootApp"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "RootApp"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "Source"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "Source"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.SelectorExpr {
    13  .  .  X: *ast.Ident {
    14  .  .  .  NamePos: -
    15  .  .  .  Name: "pkgcmd"
    16  .  .  }
    17  .  .  Sel: *ast.Ident {
    18  .  .  .  NamePos: -
    19  .  .  .  Name: "Source"
    20  .  .  }
    21  .  }
    22  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "Source"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.SelectorExpr {
    11  .  .  .  .  X: *ast.Ident {
    12  .  .  .  .  .  NamePos: -
    13  .  .  .  .  .  Name: "pkgcmd"
    14  .  .  .  .  }
    15  .  .  .  .  Sel: *ast.Ident {
    16  .  .  .  .  .  NamePos: -
    17  .  .  .  .  .  Name: "Source"
    18  .  .  .  .  }
    19  .  .  .  }
    20  .  .  }
    21  .  }
    22  }
     0  nil
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "Source"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "PointerStruct"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "PointerStruct"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.StarExpr {
    13  .  .  Star: -
    14  .  .  X: *ast.SelectorExpr {
    15  .  .  .  X: *ast.Ident {
    16  .  .  .  .  NamePos: -
    17  .  .  .  .  Name: "pkgcmd"
    18  .  .  .  }
    19  .  .  .  Sel: *ast.Ident {
    20  .  .  .  .  NamePos: -
    21  .  .  .  .  Name: "RootApp"
    22  .  .  .  }
    23  .  .  }
    24  .  }
    25  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "PointerStruct"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "PointerStruct"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.StarExpr {
    11  .  .  .  .  Star: -
    12  .  .  .  .  X: *ast.SelectorExpr {
    13  .  .  .  .  .  X: *ast.Ident {
    14  .  .  .  .  .  .  NamePos: -
    15  .  .  .  .  .  .  Name: "pkgcmd"
    16  .  .  .  .  .  }
    17  .  .  .  .  .  Sel: *ast.Ident {
    18  .  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  .  Name: "RootApp"
    20  .  .  .  .  .  }
    21  .  .  .  .  }
    22  .  .  .  }
    23  .  .  }
    24  .  }
    25  }
     0  nil
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.SelectorExpr {
     3  .  .  X: *ast.Ident {
     4  .  .  .  NamePos: -
     5  .  .  .  Name: "pkgcmd"
     6  .  .  }
     7  .  .  Sel: *ast.Ident {
     8  .  .  .  NamePos: -
     9  .  .  .  Name: "RootApp"
    10  .  .  }
    11  .  }
    12  }
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "RootApp"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "RootApp"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "PointInt"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "PointInt"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.StarExpr {
    13  .  .  Star: -
    14  .  .  X: *ast.Ident {
    15  .  .  .  NamePos: -
    16  .  .  .  Name: "int"
    17  .  .  }
    18  .  }
    19  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "PointInt"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "PointInt"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.StarExpr {
    11  .  .  .  .  Star: -
    12  .  .  .  .  X: *ast.Ident {
    13  .  .  .  .  .  NamePos: -
    14  .  .  .  .  .  Name: "int"
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  nil
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "int"
     5  .  }
     6  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "PointString"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "PointString"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.StarExpr {
    13  .  .  Star: -
    14  .  .  X: *ast.Ident {
    15  .  .  .  NamePos: -
    16  .  .  .  Name: "string"
    17  .  .  }
    18  .  }
    19  .  Tag: *ast.BasicLit {
    20  .  .  ValuePos: -
    21  .  .  Kind: STRING
    22  .  .  Value: "`json:\"pointstring\"`"
    23  .  }
    24  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "PointString"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "PointString"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.StarExpr {
    11  .  .  .  .  Star: -
    12  .  .  .  .  X: *ast.Ident {
    13  .  .  .  .  .  NamePos: -
    14  .  .  .  .  .  Name: "string"
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  .  Tag: *ast.BasicLit {
    18  .  .  .  .  ValuePos: -
    19  .  .  .  .  Kind: STRING
    20  .  .  .  .  Value: "`json:\"pointstring\"`"
    21  .  .  .  }
    22  .  .  }
    23  .  }
    24  }
     0  nil
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "string"
     5  .  }
     6  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "string"
     3  }
     0  nil
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "`json:\"pointstring\"`"
     4  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "PointSlice"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "PointSlice"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.StarExpr {
    13  .  .  Star: -
    14  .  .  X: *ast.ArrayType {
    15  .  .  .  Lbrack: -
    16  .  .  .  Elt: *ast.Ident {
    17  .  .  .  .  NamePos: -
    18  .  .  .  .  Name: "int"
    19  .  .  .  }
    20  .  .  }
    21  .  }
    22  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "PointSlice"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "PointSlice"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.StarExpr {
    11  .  .  .  .  Star: -
    12  .  .  .  .  X: *ast.ArrayType {
    13  .  .  .  .  .  Lbrack: -
    14  .  .  .  .  .  Elt: *ast.Ident {
    15  .  .  .  .  .  .  NamePos: -
    16  .  .  .  .  .  .  Name: "int"
    17  .  .  .  .  .  }
    18  .  .  .  .  }
    19  .  .  .  }
    20  .  .  }
    21  .  }
    22  }
     0  nil
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.ArrayType {
     3  .  .  Lbrack: -
     4  .  .  Elt: *ast.Ident {
     5  .  .  .  NamePos: -
     6  .  .  .  Name: "int"
     7  .  .  }
     8  .  }
     9  }
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Elt: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "int"
     5  .  }
     6  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "PointMap"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "PointMap"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.StarExpr {
    13  .  .  Star: -
    14  .  .  X: *ast.MapType {
    15  .  .  .  Map: -
    16  .  .  .  Key: *ast.Ident {
    17  .  .  .  .  NamePos: -
    18  .  .  .  .  Name: "string"
    19  .  .  .  }
    20  .  .  .  Value: *ast.Ident {
    21  .  .  .  .  NamePos: -
    22  .  .  .  .  Name: "int"
    23  .  .  .  }
    24  .  .  }
    25  .  }
    26  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "PointMap"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "PointMap"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.StarExpr {
    11  .  .  .  .  Star: -
    12  .  .  .  .  X: *ast.MapType {
    13  .  .  .  .  .  Map: -
    14  .  .  .  .  .  Key: *ast.Ident {
    15  .  .  .  .  .  .  NamePos: -
    16  .  .  .  .  .  .  Name: "string"
    17  .  .  .  .  .  }
    18  .  .  .  .  .  Value: *ast.Ident {
    19  .  .  .  .  .  .  NamePos: -
    20  .  .  .  .  .  .  Name: "int"
    21  .  .  .  .  .  }
    22  .  .  .  .  }
    23  .  .  .  }
    24  .  .  }
    25  .  }
    26  }
     0  nil
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.MapType {
     3  .  .  Map: -
     4  .  .  Key: *ast.Ident {
     5  .  .  .  NamePos: -
     6  .  .  .  Name: "string"
     7  .  .  }
     8  .  .  Value: *ast.Ident {
     9  .  .  .  NamePos: -
    10  .  .  .  Name: "int"
    11  .  .  }
    12  .  }
    13  }
     0  *ast.MapType {
     1  .  Map: -
     2  .  Key: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "string"
     5  .  }
     6  .  Value: *ast.Ident {
     7  .  .  NamePos: -
     8  .  .  Name: "int"
     9  .  }
    10  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "string"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "All"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "All"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "bool"
    15  .  }
    16  .  Tag: *ast.BasicLit {
    17  .  .  ValuePos: -
    18  .  .  Kind: STRING
    19  .  .  Value: "`json:\"all\"`"
    20  .  }
    21  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "All"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "All"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "bool"
    13  .  .  .  }
    14  .  .  .  Tag: *ast.BasicLit {
    15  .  .  .  .  ValuePos: -
    16  .  .  .  .  Kind: STRING
    17  .  .  .  .  Value: "`json:\"all\"`"
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "bool"
     3  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "`json:\"all\"`"
     4  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "BuildTags"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "BuildTags"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "string"
    15  .  }
    16  .  Tag: *ast.BasicLit {
    17  .  .  ValuePos: -
    18  .  .  Kind: STRING
    19  .  .  Value: "`mapstructure:\"tags\"`"
    20  .  }
    21  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "BuildTags"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "BuildTags"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "string"
    13  .  .  .  }
    14  .  .  .  Tag: *ast.BasicLit {
    15  .  .  .  .  ValuePos: -
    16  .  .  .  .  Kind: STRING
    17  .  .  .  .  Value: "`mapstructure:\"tags\"`"
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "string"
     3  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "`mapstructure:\"tags\"`"
     4  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "Version"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "Version"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "int"
    15  .  }
    16  .  Tag: *ast.BasicLit {
    17  .  .  ValuePos: -
    18  .  .  Kind: STRING
    19  .  .  Value: "`json:\"-\"`"
    20  .  }
    21  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Version"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "Version"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "int"
    13  .  .  .  }
    14  .  .  .  Tag: *ast.BasicLit {
    15  .  .  .  .  ValuePos: -
    16  .  .  .  .  Kind: STRING
    17  .  .  .  .  Value: "`json:\"-\"`"
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "`json:\"-\"`"
     4  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "Slices"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "Slices"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.ArrayType {
    13  .  .  Lbrack: -
    14  .  .  Elt: *ast.Ident {
    15  .  .  .  NamePos: -
    16  .  .  .  Name: "int"
    17  .  .  }
    18  .  }
    19  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Slices"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "Slices"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.ArrayType {
    11  .  .  .  .  Lbrack: -
    12  .  .  .  .  Elt: *ast.Ident {
    13  .  .  .  .  .  NamePos: -
    14  .  .  .  .  .  Name: "int"
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  nil
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Elt: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "int"
     5  .  }
     6  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "SlicesStruct"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "SlicesStruct"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.ArrayType {
    13  .  .  Lbrack: -
    14  .  .  Elt: *ast.SelectorExpr {
    15  .  .  .  X: *ast.Ident {
    16  .  .  .  .  NamePos: -
    17  .  .  .  .  Name: "pkgcmd"
    18  .  .  .  }
    19  .  .  .  Sel: *ast.Ident {
    20  .  .  .  .  NamePos: -
    21  .  .  .  .  Name: "Source"
    22  .  .  .  }
    23  .  .  }
    24  .  }
    25  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "SlicesStruct"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "SlicesStruct"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.ArrayType {
    11  .  .  .  .  Lbrack: -
    12  .  .  .  .  Elt: *ast.SelectorExpr {
    13  .  .  .  .  .  X: *ast.Ident {
    14  .  .  .  .  .  .  NamePos: -
    15  .  .  .  .  .  .  Name: "pkgcmd"
    16  .  .  .  .  .  }
    17  .  .  .  .  .  Sel: *ast.Ident {
    18  .  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  .  Name: "Source"
    20  .  .  .  .  .  }
    21  .  .  .  .  }
    22  .  .  .  }
    23  .  .  }
    24  .  }
    25  }
     0  nil
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Elt: *ast.SelectorExpr {
     3  .  .  X: *ast.Ident {
     4  .  .  .  NamePos: -
     5  .  .  .  Name: "pkgcmd"
     6  .  .  }
     7  .  .  Sel: *ast.Ident {
     8  .  .  .  NamePos: -
     9  .  .  .  Name: "Source"
    10  .  .  }
    11  .  }
    12  }
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "Source"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "SlicesPointerStruct"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "SlicesPointerStruct"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.ArrayType {
    13  .  .  Lbrack: -
    14  .  .  Elt: *ast.StarExpr {
    15  .  .  .  Star: -
    16  .  .  .  X: *ast.SelectorExpr {
    17  .  .  .  .  X: *ast.Ident {
    18  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  Name: "pkgcmd"
    20  .  .  .  .  }
    21  .  .  .  .  Sel: *ast.Ident {
    22  .  .  .  .  .  NamePos: -
    23  .  .  .  .  .  Name: "Source"
    24  .  .  .  .  }
    25  .  .  .  }
    26  .  .  }
    27  .  }
    28  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "SlicesPointerStruct"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "SlicesPointerStruct"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.ArrayType {
    11  .  .  .  .  Lbrack: -
    12  .  .  .  .  Elt: *ast.StarExpr {
    13  .  .  .  .  .  Star: -
    14  .  .  .  .  .  X: *ast.SelectorExpr {
    15  .  .  .  .  .  .  X: *ast.Ident {
    16  .  .  .  .  .  .  .  NamePos: -
    17  .  .  .  .  .  .  .  Name: "pkgcmd"
    18  .  .  .  .  .  .  }
    19  .  .  .  .  .  .  Sel: *ast.Ident {
    20  .  .  .  .  .  .  .  NamePos: -
    21  .  .  .  .  .  .  .  Name: "Source"
    22  .  .  .  .  .  .  }
    23  .  .  .  .  .  }
    24  .  .  .  .  }
    25  .  .  .  }
    26  .  .  }
    27  .  }
    28  }
     0  nil
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Elt: *ast.StarExpr {
     3  .  .  Star: -
     4  .  .  X: *ast.SelectorExpr {
     5  .  .  .  X: *ast.Ident {
     6  .  .  .  .  NamePos: -
     7  .  .  .  .  Name: "pkgcmd"
     8  .  .  .  }
     9  .  .  .  Sel: *ast.Ident {
    10  .  .  .  .  NamePos: -
    11  .  .  .  .  Name: "Source"
    12  .  .  .  }
    13  .  .  }
    14  .  }
    15  }
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.SelectorExpr {
     3  .  .  X: *ast.Ident {
     4  .  .  .  NamePos: -
     5  .  .  .  Name: "pkgcmd"
     6  .  .  }
     7  .  .  Sel: *ast.Ident {
     8  .  .  .  NamePos: -
     9  .  .  .  Name: "Source"
    10  .  .  }
    11  .  }
    12  }
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "Source"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "SlicePoint"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "SlicePoint"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.ArrayType {
    13  .  .  Lbrack: -
    14  .  .  Elt: *ast.StarExpr {
    15  .  .  .  Star: -
    16  .  .  .  X: *ast.Ident {
    17  .  .  .  .  NamePos: -
    18  .  .  .  .  Name: "int"
    19  .  .  .  }
    20  .  .  }
    21  .  }
    22  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "SlicePoint"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "SlicePoint"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.ArrayType {
    11  .  .  .  .  Lbrack: -
    12  .  .  .  .  Elt: *ast.StarExpr {
    13  .  .  .  .  .  Star: -
    14  .  .  .  .  .  X: *ast.Ident {
    15  .  .  .  .  .  .  NamePos: -
    16  .  .  .  .  .  .  Name: "int"
    17  .  .  .  .  .  }
    18  .  .  .  .  }
    19  .  .  .  }
    20  .  .  }
    21  .  }
    22  }
     0  nil
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Elt: *ast.StarExpr {
     3  .  .  Star: -
     4  .  .  X: *ast.Ident {
     5  .  .  .  NamePos: -
     6  .  .  .  Name: "int"
     7  .  .  }
     8  .  }
     9  }
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "int"
     5  .  }
     6  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "Arrayint"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "Arrayint"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.ArrayType {
    13  .  .  Lbrack: -
    14  .  .  Len: *ast.BasicLit {
    15  .  .  .  ValuePos: -
    16  .  .  .  Kind: INT
    17  .  .  .  Value: "8"
    18  .  .  }
    19  .  .  Elt: *ast.Ident {
    20  .  .  .  NamePos: -
    21  .  .  .  Name: "int"
    22  .  .  }
    23  .  }
    24  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Arrayint"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "Arrayint"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.ArrayType {
    11  .  .  .  .  Lbrack: -
    12  .  .  .  .  Len: *ast.BasicLit {
    13  .  .  .  .  .  ValuePos: -
    14  .  .  .  .  .  Kind: INT
    15  .  .  .  .  .  Value: "8"
    16  .  .  .  .  }
    17  .  .  .  .  Elt: *ast.Ident {
    18  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  Name: "int"
    20  .  .  .  .  }
    21  .  .  .  }
    22  .  .  }
    23  .  }
    24  }
     0  nil
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Len: *ast.BasicLit {
     3  .  .  ValuePos: -
     4  .  .  Kind: INT
     5  .  .  Value: "8"
     6  .  }
     7  .  Elt: *ast.Ident {
     8  .  .  NamePos: -
     9  .  .  Name: "int"
    10  .  }
    11  }
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: INT
     3  .  Value: "8"
     4  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "ArrayPointer"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "ArrayPointer"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.ArrayType {
    13  .  .  Lbrack: -
    14  .  .  Len: *ast.BasicLit {
    15  .  .  .  ValuePos: -
    16  .  .  .  Kind: INT
    17  .  .  .  Value: "8"
    18  .  .  }
    19  .  .  Elt: *ast.StarExpr {
    20  .  .  .  Star: -
    21  .  .  .  X: *ast.Ident {
    22  .  .  .  .  NamePos: -
    23  .  .  .  .  Name: "int"
    24  .  .  .  }
    25  .  .  }
    26  .  }
    27  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "ArrayPointer"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "ArrayPointer"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.ArrayType {
    11  .  .  .  .  Lbrack: -
    12  .  .  .  .  Len: *ast.BasicLit {
    13  .  .  .  .  .  ValuePos: -
    14  .  .  .  .  .  Kind: INT
    15  .  .  .  .  .  Value: "8"
    16  .  .  .  .  }
    17  .  .  .  .  Elt: *ast.StarExpr {
    18  .  .  .  .  .  Star: -
    19  .  .  .  .  .  X: *ast.Ident {
    20  .  .  .  .  .  .  NamePos: -
    21  .  .  .  .  .  .  Name: "int"
    22  .  .  .  .  .  }
    23  .  .  .  .  }
    24  .  .  .  }
    25  .  .  }
    26  .  }
    27  }
     0  nil
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Len: *ast.BasicLit {
     3  .  .  ValuePos: -
     4  .  .  Kind: INT
     5  .  .  Value: "8"
     6  .  }
     7  .  Elt: *ast.StarExpr {
     8  .  .  Star: -
     9  .  .  X: *ast.Ident {
    10  .  .  .  NamePos: -
    11  .  .  .  Name: "int"
    12  .  .  }
    13  .  }
    14  }
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: INT
     3  .  Value: "8"
     4  }
     0  nil
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "int"
     5  .  }
     6  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "ArrayStruct"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "ArrayStruct"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.ArrayType {
    13  .  .  Lbrack: -
    14  .  .  Len: *ast.BasicLit {
    15  .  .  .  ValuePos: -
    16  .  .  .  Kind: INT
    17  .  .  .  Value: "8"
    18  .  .  }
    19  .  .  Elt: *ast.SelectorExpr {
    20  .  .  .  X: *ast.Ident {
    21  .  .  .  .  NamePos: -
    22  .  .  .  .  Name: "pkgcmd"
    23  .  .  .  }
    24  .  .  .  Sel: *ast.Ident {
    25  .  .  .  .  NamePos: -
    26  .  .  .  .  Name: "RootApp"
    27  .  .  .  }
    28  .  .  }
    29  .  }
    30  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "ArrayStruct"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "ArrayStruct"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.ArrayType {
    11  .  .  .  .  Lbrack: -
    12  .  .  .  .  Len: *ast.BasicLit {
    13  .  .  .  .  .  ValuePos: -
    14  .  .  .  .  .  Kind: INT
    15  .  .  .  .  .  Value: "8"
    16  .  .  .  .  }
    17  .  .  .  .  Elt: *ast.SelectorExpr {
    18  .  .  .  .  .  X: *ast.Ident {
    19  .  .  .  .  .  .  NamePos: -
    20  .  .  .  .  .  .  Name: "pkgcmd"
    21  .  .  .  .  .  }
    22  .  .  .  .  .  Sel: *ast.Ident {
    23  .  .  .  .  .  .  NamePos: -
    24  .  .  .  .  .  .  Name: "RootApp"
    25  .  .  .  .  .  }
    26  .  .  .  .  }
    27  .  .  .  }
    28  .  .  }
    29  .  }
    30  }
     0  nil
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Len: *ast.BasicLit {
     3  .  .  ValuePos: -
     4  .  .  Kind: INT
     5  .  .  Value: "8"
     6  .  }
     7  .  Elt: *ast.SelectorExpr {
     8  .  .  X: *ast.Ident {
     9  .  .  .  NamePos: -
    10  .  .  .  Name: "pkgcmd"
    11  .  .  }
    12  .  .  Sel: *ast.Ident {
    13  .  .  .  NamePos: -
    14  .  .  .  Name: "RootApp"
    15  .  .  }
    16  .  }
    17  }
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: INT
     3  .  Value: "8"
     4  }
     0  nil
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "RootApp"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "RootApp"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "ArrayStructPointer"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "ArrayStructPointer"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.ArrayType {
    13  .  .  Lbrack: -
    14  .  .  Len: *ast.BasicLit {
    15  .  .  .  ValuePos: -
    16  .  .  .  Kind: INT
    17  .  .  .  Value: "8"
    18  .  .  }
    19  .  .  Elt: *ast.StarExpr {
    20  .  .  .  Star: -
    21  .  .  .  X: *ast.SelectorExpr {
    22  .  .  .  .  X: *ast.Ident {
    23  .  .  .  .  .  NamePos: -
    24  .  .  .  .  .  Name: "pkgcmd"
    25  .  .  .  .  }
    26  .  .  .  .  Sel: *ast.Ident {
    27  .  .  .  .  .  NamePos: -
    28  .  .  .  .  .  Name: "RootApp"
    29  .  .  .  .  }
    30  .  .  .  }
    31  .  .  }
    32  .  }
    33  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "ArrayStructPointer"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "ArrayStructPointer"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.ArrayType {
    11  .  .  .  .  Lbrack: -
    12  .  .  .  .  Len: *ast.BasicLit {
    13  .  .  .  .  .  ValuePos: -
    14  .  .  .  .  .  Kind: INT
    15  .  .  .  .  .  Value: "8"
    16  .  .  .  .  }
    17  .  .  .  .  Elt: *ast.StarExpr {
    18  .  .  .  .  .  Star: -
    19  .  .  .  .  .  X: *ast.SelectorExpr {
    20  .  .  .  .  .  .  X: *ast.Ident {
    21  .  .  .  .  .  .  .  NamePos: -
    22  .  .  .  .  .  .  .  Name: "pkgcmd"
    23  .  .  .  .  .  .  }
    24  .  .  .  .  .  .  Sel: *ast.Ident {
    25  .  .  .  .  .  .  .  NamePos: -
    26  .  .  .  .  .  .  .  Name: "RootApp"
    27  .  .  .  .  .  .  }
    28  .  .  .  .  .  }
    29  .  .  .  .  }
    30  .  .  .  }
    31  .  .  }
    32  .  }
    33  }
     0  nil
     0  *ast.ArrayType {
     1  .  Lbrack: -
     2  .  Len: *ast.BasicLit {
     3  .  .  ValuePos: -
     4  .  .  Kind: INT
     5  .  .  Value: "8"
     6  .  }
     7  .  Elt: *ast.StarExpr {
     8  .  .  Star: -
     9  .  .  X: *ast.SelectorExpr {
    10  .  .  .  X: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "pkgcmd"
    13  .  .  .  }
    14  .  .  .  Sel: *ast.Ident {
    15  .  .  .  .  NamePos: -
    16  .  .  .  .  Name: "RootApp"
    17  .  .  .  }
    18  .  .  }
    19  .  }
    20  }
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: INT
     3  .  Value: "8"
     4  }
     0  nil
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.SelectorExpr {
     3  .  .  X: *ast.Ident {
     4  .  .  .  NamePos: -
     5  .  .  .  Name: "pkgcmd"
     6  .  .  }
     7  .  .  Sel: *ast.Ident {
     8  .  .  .  NamePos: -
     9  .  .  .  Name: "RootApp"
    10  .  .  }
    11  .  }
    12  }
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "RootApp"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "RootApp"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Type: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "Mocker"
     4  .  }
     5  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Mocker"
     3  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "mocker"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "mocker"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "Mocker"
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "mocker"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "mocker"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "Mocker"
    13  .  .  .  }
    14  .  .  }
    15  .  }
    16  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Mocker"
     3  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "Maps"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "Maps"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.MapType {
    13  .  .  Map: -
    14  .  .  Key: *ast.Ident {
    15  .  .  .  NamePos: -
    16  .  .  .  Name: "string"
    17  .  .  }
    18  .  .  Value: *ast.Ident {
    19  .  .  .  NamePos: -
    20  .  .  .  Name: "int"
    21  .  .  }
    22  .  }
    23  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Maps"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "Maps"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.MapType {
    11  .  .  .  .  Map: -
    12  .  .  .  .  Key: *ast.Ident {
    13  .  .  .  .  .  NamePos: -
    14  .  .  .  .  .  Name: "string"
    15  .  .  .  .  }
    16  .  .  .  .  Value: *ast.Ident {
    17  .  .  .  .  .  NamePos: -
    18  .  .  .  .  .  Name: "int"
    19  .  .  .  .  }
    20  .  .  .  }
    21  .  .  }
    22  .  }
    23  }
     0  nil
     0  *ast.MapType {
     1  .  Map: -
     2  .  Key: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "string"
     5  .  }
     6  .  Value: *ast.Ident {
     7  .  .  NamePos: -
     8  .  .  Name: "int"
     9  .  }
    10  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "string"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "MapsStruct"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "MapsStruct"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.MapType {
    13  .  .  Map: -
    14  .  .  Key: *ast.Ident {
    15  .  .  .  NamePos: -
    16  .  .  .  Name: "string"
    17  .  .  }
    18  .  .  Value: *ast.SelectorExpr {
    19  .  .  .  X: *ast.Ident {
    20  .  .  .  .  NamePos: -
    21  .  .  .  .  Name: "pkgcmd"
    22  .  .  .  }
    23  .  .  .  Sel: *ast.Ident {
    24  .  .  .  .  NamePos: -
    25  .  .  .  .  Name: "Source"
    26  .  .  .  }
    27  .  .  }
    28  .  }
    29  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "MapsStruct"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "MapsStruct"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.MapType {
    11  .  .  .  .  Map: -
    12  .  .  .  .  Key: *ast.Ident {
    13  .  .  .  .  .  NamePos: -
    14  .  .  .  .  .  Name: "string"
    15  .  .  .  .  }
    16  .  .  .  .  Value: *ast.SelectorExpr {
    17  .  .  .  .  .  X: *ast.Ident {
    18  .  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  .  Name: "pkgcmd"
    20  .  .  .  .  .  }
    21  .  .  .  .  .  Sel: *ast.Ident {
    22  .  .  .  .  .  .  NamePos: -
    23  .  .  .  .  .  .  Name: "Source"
    24  .  .  .  .  .  }
    25  .  .  .  .  }
    26  .  .  .  }
    27  .  .  }
    28  .  }
    29  }
     0  nil
     0  *ast.MapType {
     1  .  Map: -
     2  .  Key: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "string"
     5  .  }
     6  .  Value: *ast.SelectorExpr {
     7  .  .  X: *ast.Ident {
     8  .  .  .  NamePos: -
     9  .  .  .  Name: "pkgcmd"
    10  .  .  }
    11  .  .  Sel: *ast.Ident {
    12  .  .  .  NamePos: -
    13  .  .  .  Name: "Source"
    14  .  .  }
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "string"
     3  }
     0  nil
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "Source"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "MapsPointerStruct"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "MapsPointerStruct"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.MapType {
    13  .  .  Map: -
    14  .  .  Key: *ast.Ident {
    15  .  .  .  NamePos: -
    16  .  .  .  Name: "string"
    17  .  .  }
    18  .  .  Value: *ast.StarExpr {
    19  .  .  .  Star: -
    20  .  .  .  X: *ast.SelectorExpr {
    21  .  .  .  .  X: *ast.Ident {
    22  .  .  .  .  .  NamePos: -
    23  .  .  .  .  .  Name: "pkgcmd"
    24  .  .  .  .  }
    25  .  .  .  .  Sel: *ast.Ident {
    26  .  .  .  .  .  NamePos: -
    27  .  .  .  .  .  Name: "Source"
    28  .  .  .  .  }
    29  .  .  .  }
    30  .  .  }
    31  .  }
    32  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "MapsPointerStruct"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "MapsPointerStruct"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.MapType {
    11  .  .  .  .  Map: -
    12  .  .  .  .  Key: *ast.Ident {
    13  .  .  .  .  .  NamePos: -
    14  .  .  .  .  .  Name: "string"
    15  .  .  .  .  }
    16  .  .  .  .  Value: *ast.StarExpr {
    17  .  .  .  .  .  Star: -
    18  .  .  .  .  .  X: *ast.SelectorExpr {
    19  .  .  .  .  .  .  X: *ast.Ident {
    20  .  .  .  .  .  .  .  NamePos: -
    21  .  .  .  .  .  .  .  Name: "pkgcmd"
    22  .  .  .  .  .  .  }
    23  .  .  .  .  .  .  Sel: *ast.Ident {
    24  .  .  .  .  .  .  .  NamePos: -
    25  .  .  .  .  .  .  .  Name: "Source"
    26  .  .  .  .  .  .  }
    27  .  .  .  .  .  }
    28  .  .  .  .  }
    29  .  .  .  }
    30  .  .  }
    31  .  }
    32  }
     0  nil
     0  *ast.MapType {
     1  .  Map: -
     2  .  Key: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "string"
     5  .  }
     6  .  Value: *ast.StarExpr {
     7  .  .  Star: -
     8  .  .  X: *ast.SelectorExpr {
     9  .  .  .  X: *ast.Ident {
    10  .  .  .  .  NamePos: -
    11  .  .  .  .  Name: "pkgcmd"
    12  .  .  .  }
    13  .  .  .  Sel: *ast.Ident {
    14  .  .  .  .  NamePos: -
    15  .  .  .  .  Name: "Source"
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "string"
     3  }
     0  nil
     0  *ast.StarExpr {
     1  .  Star: -
     2  .  X: *ast.SelectorExpr {
     3  .  .  X: *ast.Ident {
     4  .  .  .  NamePos: -
     5  .  .  .  Name: "pkgcmd"
     6  .  .  }
     7  .  .  Sel: *ast.Ident {
     8  .  .  .  NamePos: -
     9  .  .  .  Name: "Source"
    10  .  .  }
    11  .  }
    12  }
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "Source"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "innerSource"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "innerSource"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "Source"
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "innerSource"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "innerSource"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "Source"
    13  .  .  .  }
    14  .  .  }
    15  .  }
    16  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.FuncDecl {
     1  .  Name: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "main"
     4  .  .  Obj: *ast.Object {
     5  .  .  .  Kind: func
     6  .  .  .  Name: "main"
     7  .  .  .  Decl: *(obj @ 0)
     8  .  .  }
     9  .  }
    10  .  Type: *ast.FuncType {
    11  .  .  Func: -
    12  .  .  Params: *ast.FieldList {
    13  .  .  .  Opening: -
    14  .  .  .  Closing: -
    15  .  .  }
    16  .  }
    17  .  Body: *ast.BlockStmt {
    18  .  .  Lbrace: -
    19  .  .  List: []ast.Stmt (len = 2) {
    20  .  .  .  0: *ast.DeclStmt {
    21  .  .  .  .  Decl: *ast.GenDecl {
    22  .  .  .  .  .  TokPos: -
    23  .  .  .  .  .  Tok: var
    24  .  .  .  .  .  Lparen: -
    25  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    26  .  .  .  .  .  .  0: *ast.ValueSpec {
    27  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    28  .  .  .  .  .  .  .  .  0: *ast.Ident {
    29  .  .  .  .  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  .  .  .  .  Name: "_"
    31  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    32  .  .  .  .  .  .  .  .  .  .  Kind: var
    33  .  .  .  .  .  .  .  .  .  .  Name: "_"
    34  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 26)
    35  .  .  .  .  .  .  .  .  .  .  Data: 0
    36  .  .  .  .  .  .  .  .  .  }
    37  .  .  .  .  .  .  .  .  }
    38  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    40  .  .  .  .  .  .  .  .  X: *ast.Ident {
    41  .  .  .  .  .  .  .  .  .  NamePos: -
    42  .  .  .  .  .  .  .  .  .  Name: "http"
    43  .  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    45  .  .  .  .  .  .  .  .  .  NamePos: -
    46  .  .  .  .  .  .  .  .  .  Name: "Request"
    47  .  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  }
    50  .  .  .  .  .  }
    51  .  .  .  .  .  Rparen: -
    52  .  .  .  .  }
    53  .  .  .  }
    54  .  .  .  1: *ast.ExprStmt {
    55  .  .  .  .  X: *ast.CallExpr {
    56  .  .  .  .  .  Fun: *ast.SelectorExpr {
    57  .  .  .  .  .  .  X: *ast.Ident {
    58  .  .  .  .  .  .  .  NamePos: -
    59  .  .  .  .  .  .  .  Name: "pkgcmd"
    60  .  .  .  .  .  .  }
    61  .  .  .  .  .  .  Sel: *ast.Ident {
    62  .  .  .  .  .  .  .  NamePos: -
    63  .  .  .  .  .  .  .  Name: "Execute"
    64  .  .  .  .  .  .  }
    65  .  .  .  .  .  }
    66  .  .  .  .  .  Lparen: -
    67  .  .  .  .  .  Ellipsis: -
    68  .  .  .  .  .  Rparen: -
    69  .  .  .  .  }
    70  .  .  .  }
    71  .  .  }
    72  .  .  Rbrace: -
    73  .  }
    74  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "main"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: func
     5  .  .  Name: "main"
     6  .  .  Decl: *ast.FuncDecl {
     7  .  .  .  Name: *(obj @ 0)
     8  .  .  .  Type: *ast.FuncType {
     9  .  .  .  .  Func: -
    10  .  .  .  .  Params: *ast.FieldList {
    11  .  .  .  .  .  Opening: -
    12  .  .  .  .  .  Closing: -
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Body: *ast.BlockStmt {
    16  .  .  .  .  Lbrace: -
    17  .  .  .  .  List: []ast.Stmt (len = 2) {
    18  .  .  .  .  .  0: *ast.DeclStmt {
    19  .  .  .  .  .  .  Decl: *ast.GenDecl {
    20  .  .  .  .  .  .  .  TokPos: -
    21  .  .  .  .  .  .  .  Tok: var
    22  .  .  .  .  .  .  .  Lparen: -
    23  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    24  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    25  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    26  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    27  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    28  .  .  .  .  .  .  .  .  .  .  .  Name: "_"
    29  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    30  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    31  .  .  .  .  .  .  .  .  .  .  .  .  Name: "_"
    32  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 24)
    33  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
    34  .  .  .  .  .  .  .  .  .  .  .  }
    35  .  .  .  .  .  .  .  .  .  .  }
    36  .  .  .  .  .  .  .  .  .  }
    37  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    38  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
    39  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    40  .  .  .  .  .  .  .  .  .  .  .  Name: "http"
    41  .  .  .  .  .  .  .  .  .  .  }
    42  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    43  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    44  .  .  .  .  .  .  .  .  .  .  .  Name: "Request"
    45  .  .  .  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  .  .  }
    47  .  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  Rparen: -
    50  .  .  .  .  .  .  }
    51  .  .  .  .  .  }
    52  .  .  .  .  .  1: *ast.ExprStmt {
    53  .  .  .  .  .  .  X: *ast.CallExpr {
    54  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
    55  .  .  .  .  .  .  .  .  X: *ast.Ident {
    56  .  .  .  .  .  .  .  .  .  NamePos: -
    57  .  .  .  .  .  .  .  .  .  Name: "pkgcmd"
    58  .  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    60  .  .  .  .  .  .  .  .  .  NamePos: -
    61  .  .  .  .  .  .  .  .  .  Name: "Execute"
    62  .  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  .  Lparen: -
    65  .  .  .  .  .  .  .  Ellipsis: -
    66  .  .  .  .  .  .  .  Rparen: -
    67  .  .  .  .  .  .  }
    68  .  .  .  .  .  }
    69  .  .  .  .  }
    70  .  .  .  .  Rbrace: -
    71  .  .  .  }
    72  .  .  }
    73  .  }
    74  }
     0  nil
     0  *ast.FuncType {
     1  .  Func: -
     2  .  Params: *ast.FieldList {
     3  .  .  Opening: -
     4  .  .  Closing: -
     5  .  }
     6  }
     0  *ast.FieldList {
     1  .  Opening: -
     2  .  Closing: -
     3  }
     0  nil
     0  nil
     0  *ast.BlockStmt {
     1  .  Lbrace: -
     2  .  List: []ast.Stmt (len = 2) {
     3  .  .  0: *ast.DeclStmt {
     4  .  .  .  Decl: *ast.GenDecl {
     5  .  .  .  .  TokPos: -
     6  .  .  .  .  Tok: var
     7  .  .  .  .  Lparen: -
     8  .  .  .  .  Specs: []ast.Spec (len = 1) {
     9  .  .  .  .  .  0: *ast.ValueSpec {
    10  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    11  .  .  .  .  .  .  .  0: *ast.Ident {
    12  .  .  .  .  .  .  .  .  NamePos: -
    13  .  .  .  .  .  .  .  .  Name: "_"
    14  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    15  .  .  .  .  .  .  .  .  .  Kind: var
    16  .  .  .  .  .  .  .  .  .  Name: "_"
    17  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 9)
    18  .  .  .  .  .  .  .  .  .  Data: 0
    19  .  .  .  .  .  .  .  .  }
    20  .  .  .  .  .  .  .  }
    21  .  .  .  .  .  .  }
    22  .  .  .  .  .  .  Type: *ast.SelectorExpr {
    23  .  .  .  .  .  .  .  X: *ast.Ident {
    24  .  .  .  .  .  .  .  .  NamePos: -
    25  .  .  .  .  .  .  .  .  Name: "http"
    26  .  .  .  .  .  .  .  }
    27  .  .  .  .  .  .  .  Sel: *ast.Ident {
    28  .  .  .  .  .  .  .  .  NamePos: -
    29  .  .  .  .  .  .  .  .  Name: "Request"
    30  .  .  .  .  .  .  .  }
    31  .  .  .  .  .  .  }
    32  .  .  .  .  .  }
    33  .  .  .  .  }
    34  .  .  .  .  Rparen: -
    35  .  .  .  }
    36  .  .  }
    37  .  .  1: *ast.ExprStmt {
    38  .  .  .  X: *ast.CallExpr {
    39  .  .  .  .  Fun: *ast.SelectorExpr {
    40  .  .  .  .  .  X: *ast.Ident {
    41  .  .  .  .  .  .  NamePos: -
    42  .  .  .  .  .  .  Name: "pkgcmd"
    43  .  .  .  .  .  }
    44  .  .  .  .  .  Sel: *ast.Ident {
    45  .  .  .  .  .  .  NamePos: -
    46  .  .  .  .  .  .  Name: "Execute"
    47  .  .  .  .  .  }
    48  .  .  .  .  }
    49  .  .  .  .  Lparen: -
    50  .  .  .  .  Ellipsis: -
    51  .  .  .  .  Rparen: -
    52  .  .  .  }
    53  .  .  }
    54  .  }
    55  .  Rbrace: -
    56  }
     0  *ast.DeclStmt {
     1  .  Decl: *ast.GenDecl {
     2  .  .  TokPos: -
     3  .  .  Tok: var
     4  .  .  Lparen: -
     5  .  .  Specs: []ast.Spec (len = 1) {
     6  .  .  .  0: *ast.ValueSpec {
     7  .  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  .  0: *ast.Ident {
     9  .  .  .  .  .  .  NamePos: -
    10  .  .  .  .  .  .  Name: "_"
    11  .  .  .  .  .  .  Obj: *ast.Object {
    12  .  .  .  .  .  .  .  Kind: var
    13  .  .  .  .  .  .  .  Name: "_"
    14  .  .  .  .  .  .  .  Decl: *(obj @ 6)
    15  .  .  .  .  .  .  .  Data: 0
    16  .  .  .  .  .  .  }
    17  .  .  .  .  .  }
    18  .  .  .  .  }
    19  .  .  .  .  Type: *ast.SelectorExpr {
    20  .  .  .  .  .  X: *ast.Ident {
    21  .  .  .  .  .  .  NamePos: -
    22  .  .  .  .  .  .  Name: "http"
    23  .  .  .  .  .  }
    24  .  .  .  .  .  Sel: *ast.Ident {
    25  .  .  .  .  .  .  NamePos: -
    26  .  .  .  .  .  .  Name: "Request"
    27  .  .  .  .  .  }
    28  .  .  .  .  }
    29  .  .  .  }
    30  .  .  }
    31  .  .  Rparen: -
    32  .  }
    33  }
     0  *ast.GenDecl {
     1  .  TokPos: -
     2  .  Tok: var
     3  .  Lparen: -
     4  .  Specs: []ast.Spec (len = 1) {
     5  .  .  0: *ast.ValueSpec {
     6  .  .  .  Names: []*ast.Ident (len = 1) {
     7  .  .  .  .  0: *ast.Ident {
     8  .  .  .  .  .  NamePos: -
     9  .  .  .  .  .  Name: "_"
    10  .  .  .  .  .  Obj: *ast.Object {
    11  .  .  .  .  .  .  Kind: var
    12  .  .  .  .  .  .  Name: "_"
    13  .  .  .  .  .  .  Decl: *(obj @ 5)
    14  .  .  .  .  .  .  Data: 0
    15  .  .  .  .  .  }
    16  .  .  .  .  }
    17  .  .  .  }
    18  .  .  .  Type: *ast.SelectorExpr {
    19  .  .  .  .  X: *ast.Ident {
    20  .  .  .  .  .  NamePos: -
    21  .  .  .  .  .  Name: "http"
    22  .  .  .  .  }
    23  .  .  .  .  Sel: *ast.Ident {
    24  .  .  .  .  .  NamePos: -
    25  .  .  .  .  .  Name: "Request"
    26  .  .  .  .  }
    27  .  .  .  }
    28  .  .  }
    29  .  }
    30  .  Rparen: -
    31  }
     0  *ast.ValueSpec {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "_"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "_"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  .  Data: 0
    10  .  .  .  }
    11  .  .  }
    12  .  }
    13  .  Type: *ast.SelectorExpr {
    14  .  .  X: *ast.Ident {
    15  .  .  .  NamePos: -
    16  .  .  .  Name: "http"
    17  .  .  }
    18  .  .  Sel: *ast.Ident {
    19  .  .  .  NamePos: -
    20  .  .  .  Name: "Request"
    21  .  .  }
    22  .  }
    23  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "_"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "_"
     6  .  .  Decl: *ast.ValueSpec {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.SelectorExpr {
    11  .  .  .  .  X: *ast.Ident {
    12  .  .  .  .  .  NamePos: -
    13  .  .  .  .  .  Name: "http"
    14  .  .  .  .  }
    15  .  .  .  .  Sel: *ast.Ident {
    16  .  .  .  .  .  NamePos: -
    17  .  .  .  .  .  Name: "Request"
    18  .  .  .  .  }
    19  .  .  .  }
    20  .  .  }
    21  .  .  Data: 0
    22  .  }
    23  }
     0  nil
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "http"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "Request"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "http"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Request"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.ExprStmt {
     1  .  X: *ast.CallExpr {
     2  .  .  Fun: *ast.SelectorExpr {
     3  .  .  .  X: *ast.Ident {
     4  .  .  .  .  NamePos: -
     5  .  .  .  .  Name: "pkgcmd"
     6  .  .  .  }
     7  .  .  .  Sel: *ast.Ident {
     8  .  .  .  .  NamePos: -
     9  .  .  .  .  Name: "Execute"
    10  .  .  .  }
    11  .  .  }
    12  .  .  Lparen: -
    13  .  .  Ellipsis: -
    14  .  .  Rparen: -
    15  .  }
    16  }
     0  *ast.CallExpr {
     1  .  Fun: *ast.SelectorExpr {
     2  .  .  X: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "pkgcmd"
     5  .  .  }
     6  .  .  Sel: *ast.Ident {
     7  .  .  .  NamePos: -
     8  .  .  .  Name: "Execute"
     9  .  .  }
    10  .  }
    11  .  Lparen: -
    12  .  Ellipsis: -
    13  .  Rparen: -
    14  }
     0  *ast.SelectorExpr {
     1  .  X: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "pkgcmd"
     4  .  }
     5  .  Sel: *ast.Ident {
     6  .  .  NamePos: -
     7  .  .  Name: "Execute"
     8  .  }
     9  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "pkgcmd"
     3  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Execute"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.File {
     1  .  Package: -
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 4) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  Doc: *ast.CommentGroup {
     9  .  .  .  .  List: []*ast.Comment (len = 1) {
    10  .  .  .  .  .  0: *ast.Comment {
    11  .  .  .  .  .  .  Slash: -
    12  .  .  .  .  .  .  Text: "// Mocker ..."
    13  .  .  .  .  .  }
    14  .  .  .  .  }
    15  .  .  .  }
    16  .  .  .  TokPos: -
    17  .  .  .  Tok: type
    18  .  .  .  Lparen: -
    19  .  .  .  Specs: []ast.Spec (len = 1) {
    20  .  .  .  .  0: *ast.TypeSpec {
    21  .  .  .  .  .  Name: *ast.Ident {
    22  .  .  .  .  .  .  NamePos: -
    23  .  .  .  .  .  .  Name: "Mocker"
    24  .  .  .  .  .  .  Obj: *ast.Object {
    25  .  .  .  .  .  .  .  Kind: type
    26  .  .  .  .  .  .  .  Name: "Mocker"
    27  .  .  .  .  .  .  .  Decl: *(obj @ 20)
    28  .  .  .  .  .  .  }
    29  .  .  .  .  .  }
    30  .  .  .  .  .  Assign: -
    31  .  .  .  .  .  Type: *ast.InterfaceType {
    32  .  .  .  .  .  .  Interface: -
    33  .  .  .  .  .  .  Methods: *ast.FieldList {
    34  .  .  .  .  .  .  .  Opening: -
    35  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
    36  .  .  .  .  .  .  .  .  0: *ast.Field {
    37  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    38  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    39  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    40  .  .  .  .  .  .  .  .  .  .  .  Name: "Mock"
    41  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    42  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
    43  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Mock"
    44  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 36)
    45  .  .  .  .  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  .  .  .  }
    47  .  .  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
    49  .  .  .  .  .  .  .  .  .  .  Func: -
    50  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
    51  .  .  .  .  .  .  .  .  .  .  .  Opening: -
    52  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    53  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    54  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    55  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    56  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    57  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    58  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    59  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    60  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    61  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 53)
    62  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    65  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    66  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    67  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
    68  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    69  .  .  .  .  .  .  .  .  .  .  .  .  }
    70  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
    71  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    72  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    73  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    74  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    75  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    76  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    77  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    78  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 70)
    79  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    82  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    83  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    84  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
    85  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    86  .  .  .  .  .  .  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  .  .  .  .  Closing: -
    89  .  .  .  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
    91  .  .  .  .  .  .  .  .  .  .  .  Opening: -
    92  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    93  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    94  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    95  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    96  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    97  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
    98  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    99  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
   101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 93)
   102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   104  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   105  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   108  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   109  .  .  .  .  .  .  .  .  .  .  .  .  }
   110  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   111  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   114  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
   115  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   116  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   117  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
   118  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 110)
   119  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   122  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   123  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   124  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   125  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   126  .  .  .  .  .  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   129  .  .  .  .  .  .  .  .  .  .  }
   130  .  .  .  .  .  .  .  .  .  }
   131  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  .  Closing: -
   134  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  Incomplete: false
   136  .  .  .  .  .  }
   137  .  .  .  .  }
   138  .  .  .  }
   139  .  .  .  Rparen: -
   140  .  .  }
   141  .  .  1: *ast.GenDecl {
   142  .  .  .  Doc: *ast.CommentGroup {
   143  .  .  .  .  List: []*ast.Comment (len = 1) {
   144  .  .  .  .  .  0: *ast.Comment {
   145  .  .  .  .  .  .  Slash: -
   146  .  .  .  .  .  .  Text: "// Test ..."
   147  .  .  .  .  .  }
   148  .  .  .  .  }
   149  .  .  .  }
   150  .  .  .  TokPos: -
   151  .  .  .  Tok: type
   152  .  .  .  Lparen: -
   153  .  .  .  Specs: []ast.Spec (len = 1) {
   154  .  .  .  .  0: *ast.TypeSpec {
   155  .  .  .  .  .  Name: *ast.Ident {
   156  .  .  .  .  .  .  NamePos: -
   157  .  .  .  .  .  .  Name: "Test"
   158  .  .  .  .  .  .  Obj: *ast.Object {
   159  .  .  .  .  .  .  .  Kind: type
   160  .  .  .  .  .  .  .  Name: "Test"
   161  .  .  .  .  .  .  .  Decl: *(obj @ 154)
   162  .  .  .  .  .  .  }
   163  .  .  .  .  .  }
   164  .  .  .  .  .  Assign: -
   165  .  .  .  .  .  Type: *ast.StructType {
   166  .  .  .  .  .  .  Struct: -
   167  .  .  .  .  .  .  Fields: *ast.FieldList {
   168  .  .  .  .  .  .  .  Opening: -
   169  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   170  .  .  .  .  .  .  .  .  0: *ast.Field {
   171  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   172  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   173  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   174  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   175  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   176  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   177  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   178  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 170)
   179  .  .  .  .  .  .  .  .  .  .  .  }
   180  .  .  .  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  .  .  }
   182  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   183  .  .  .  .  .  .  .  .  .  .  NamePos: -
   184  .  .  .  .  .  .  .  .  .  .  Name: "int"
   185  .  .  .  .  .  .  .  .  .  }
   186  .  .  .  .  .  .  .  .  }
   187  .  .  .  .  .  .  .  }
   188  .  .  .  .  .  .  .  Closing: -
   189  .  .  .  .  .  .  }
   190  .  .  .  .  .  .  Incomplete: false
   191  .  .  .  .  .  }
   192  .  .  .  .  }
   193  .  .  .  }
   194  .  .  .  Rparen: -
   195  .  .  }
   196  .  .  2: *ast.GenDecl {
   197  .  .  .  Doc: *ast.CommentGroup {
   198  .  .  .  .  List: []*ast.Comment (len = 1) {
   199  .  .  .  .  .  0: *ast.Comment {
   200  .  .  .  .  .  .  Slash: -
   201  .  .  .  .  .  .  Text: "// Source defines enum of Source values"
   202  .  .  .  .  .  }
   203  .  .  .  .  }
   204  .  .  .  }
   205  .  .  .  TokPos: -
   206  .  .  .  Tok: type
   207  .  .  .  Lparen: -
   208  .  .  .  Specs: []ast.Spec (len = 1) {
   209  .  .  .  .  0: *ast.TypeSpec {
   210  .  .  .  .  .  Name: *ast.Ident {
   211  .  .  .  .  .  .  NamePos: -
   212  .  .  .  .  .  .  Name: "Source"
   213  .  .  .  .  .  .  Obj: *ast.Object {
   214  .  .  .  .  .  .  .  Kind: type
   215  .  .  .  .  .  .  .  Name: "Source"
   216  .  .  .  .  .  .  .  Decl: *(obj @ 209)
   217  .  .  .  .  .  .  }
   218  .  .  .  .  .  }
   219  .  .  .  .  .  Assign: -
   220  .  .  .  .  .  Type: *ast.Ident {
   221  .  .  .  .  .  .  NamePos: -
   222  .  .  .  .  .  .  Name: "string"
   223  .  .  .  .  .  }
   224  .  .  .  .  }
   225  .  .  .  }
   226  .  .  .  Rparen: -
   227  .  .  }
   228  .  .  3: *ast.GenDecl {
   229  .  .  .  Doc: *ast.CommentGroup {
   230  .  .  .  .  List: []*ast.Comment (len = 1) {
   231  .  .  .  .  .  0: *ast.Comment {
   232  .  .  .  .  .  .  Slash: -
   233  .  .  .  .  .  .  Text: "// express source types."
   234  .  .  .  .  .  }
   235  .  .  .  .  }
   236  .  .  .  }
   237  .  .  .  TokPos: -
   238  .  .  .  Tok: const
   239  .  .  .  Lparen: -
   240  .  .  .  Specs: []ast.Spec (len = 7) {
   241  .  .  .  .  0: *ast.ValueSpec {
   242  .  .  .  .  .  Doc: *ast.CommentGroup {
   243  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   244  .  .  .  .  .  .  .  0: *ast.Comment {
   245  .  .  .  .  .  .  .  .  Slash: -
   246  .  .  .  .  .  .  .  .  Text: "// Operator ..."
   247  .  .  .  .  .  .  .  }
   248  .  .  .  .  .  .  }
   249  .  .  .  .  .  }
   250  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   251  .  .  .  .  .  .  0: *ast.Ident {
   252  .  .  .  .  .  .  .  NamePos: -
   253  .  .  .  .  .  .  .  Name: "Operator"
   254  .  .  .  .  .  .  .  Obj: *ast.Object {
   255  .  .  .  .  .  .  .  .  Kind: const
   256  .  .  .  .  .  .  .  .  Name: "Operator"
   257  .  .  .  .  .  .  .  .  Decl: *(obj @ 241)
   258  .  .  .  .  .  .  .  .  Data: 0
   259  .  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  }
   261  .  .  .  .  .  }
   262  .  .  .  .  .  Type: *ast.Ident {
   263  .  .  .  .  .  .  NamePos: -
   264  .  .  .  .  .  .  Name: "Source"
   265  .  .  .  .  .  .  Obj: *(obj @ 213)
   266  .  .  .  .  .  }
   267  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   268  .  .  .  .  .  .  0: *ast.BasicLit {
   269  .  .  .  .  .  .  .  ValuePos: -
   270  .  .  .  .  .  .  .  Kind: STRING
   271  .  .  .  .  .  .  .  Value: "\"OPERATOR\""
   272  .  .  .  .  .  .  }
   273  .  .  .  .  .  }
   274  .  .  .  .  }
   275  .  .  .  .  1: *ast.ValueSpec {
   276  .  .  .  .  .  Doc: *ast.CommentGroup {
   277  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   278  .  .  .  .  .  .  .  0: *ast.Comment {
   279  .  .  .  .  .  .  .  .  Slash: -
   280  .  .  .  .  .  .  .  .  Text: "// IOS ..."
   281  .  .  .  .  .  .  .  }
   282  .  .  .  .  .  .  }
   283  .  .  .  .  .  }
   284  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   285  .  .  .  .  .  .  0: *ast.Ident {
   286  .  .  .  .  .  .  .  NamePos: -
   287  .  .  .  .  .  .  .  Name: "IOS"
   288  .  .  .  .  .  .  .  Obj: *ast.Object {
   289  .  .  .  .  .  .  .  .  Kind: const
   290  .  .  .  .  .  .  .  .  Name: "IOS"
   291  .  .  .  .  .  .  .  .  Decl: *(obj @ 275)
   292  .  .  .  .  .  .  .  .  Data: 1
   293  .  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  }
   295  .  .  .  .  .  }
   296  .  .  .  .  .  Type: *ast.Ident {
   297  .  .  .  .  .  .  NamePos: -
   298  .  .  .  .  .  .  Name: "Source"
   299  .  .  .  .  .  .  Obj: *(obj @ 213)
   300  .  .  .  .  .  }
   301  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   302  .  .  .  .  .  .  0: *ast.BasicLit {
   303  .  .  .  .  .  .  .  ValuePos: -
   304  .  .  .  .  .  .  .  Kind: STRING
   305  .  .  .  .  .  .  .  Value: "\"IOS\""
   306  .  .  .  .  .  .  }
   307  .  .  .  .  .  }
   308  .  .  .  .  }
   309  .  .  .  .  2: *ast.ValueSpec {
   310  .  .  .  .  .  Doc: *ast.CommentGroup {
   311  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   312  .  .  .  .  .  .  .  0: *ast.Comment {
   313  .  .  .  .  .  .  .  .  Slash: -
   314  .  .  .  .  .  .  .  .  Text: "// Android ..."
   315  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  }
   317  .  .  .  .  .  }
   318  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   319  .  .  .  .  .  .  0: *ast.Ident {
   320  .  .  .  .  .  .  .  NamePos: -
   321  .  .  .  .  .  .  .  Name: "Android"
   322  .  .  .  .  .  .  .  Obj: *ast.Object {
   323  .  .  .  .  .  .  .  .  Kind: const
   324  .  .  .  .  .  .  .  .  Name: "Android"
   325  .  .  .  .  .  .  .  .  Decl: *(obj @ 309)
   326  .  .  .  .  .  .  .  .  Data: 2
   327  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  }
   329  .  .  .  .  .  }
   330  .  .  .  .  .  Type: *ast.Ident {
   331  .  .  .  .  .  .  NamePos: -
   332  .  .  .  .  .  .  Name: "Source"
   333  .  .  .  .  .  .  Obj: *(obj @ 213)
   334  .  .  .  .  .  }
   335  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   336  .  .  .  .  .  .  0: *ast.BasicLit {
   337  .  .  .  .  .  .  .  ValuePos: -
   338  .  .  .  .  .  .  .  Kind: STRING
   339  .  .  .  .  .  .  .  Value: "\"ANDROID\""
   340  .  .  .  .  .  .  }
   341  .  .  .  .  .  }
   342  .  .  .  .  }
   343  .  .  .  .  3: *ast.ValueSpec {
   344  .  .  .  .  .  Doc: *ast.CommentGroup {
   345  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   346  .  .  .  .  .  .  .  0: *ast.Comment {
   347  .  .  .  .  .  .  .  .  Slash: -
   348  .  .  .  .  .  .  .  .  Text: "// Partner ..."
   349  .  .  .  .  .  .  .  }
   350  .  .  .  .  .  .  }
   351  .  .  .  .  .  }
   352  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   353  .  .  .  .  .  .  0: *ast.Ident {
   354  .  .  .  .  .  .  .  NamePos: -
   355  .  .  .  .  .  .  .  Name: "Partner"
   356  .  .  .  .  .  .  .  Obj: *ast.Object {
   357  .  .  .  .  .  .  .  .  Kind: const
   358  .  .  .  .  .  .  .  .  Name: "Partner"
   359  .  .  .  .  .  .  .  .  Decl: *(obj @ 343)
   360  .  .  .  .  .  .  .  .  Data: 3
   361  .  .  .  .  .  .  .  }
   362  .  .  .  .  .  .  }
   363  .  .  .  .  .  }
   364  .  .  .  .  .  Type: *ast.Ident {
   365  .  .  .  .  .  .  NamePos: -
   366  .  .  .  .  .  .  Name: "Source"
   367  .  .  .  .  .  .  Obj: *(obj @ 213)
   368  .  .  .  .  .  }
   369  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   370  .  .  .  .  .  .  0: *ast.BasicLit {
   371  .  .  .  .  .  .  .  ValuePos: -
   372  .  .  .  .  .  .  .  Kind: STRING
   373  .  .  .  .  .  .  .  Value: "\"PARTNER\""
   374  .  .  .  .  .  .  }
   375  .  .  .  .  .  }
   376  .  .  .  .  }
   377  .  .  .  .  4: *ast.ValueSpec {
   378  .  .  .  .  .  Doc: *ast.CommentGroup {
   379  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   380  .  .  .  .  .  .  .  0: *ast.Comment {
   381  .  .  .  .  .  .  .  .  Slash: -
   382  .  .  .  .  .  .  .  .  Text: "// GEWEB ..."
   383  .  .  .  .  .  .  .  }
   384  .  .  .  .  .  .  }
   385  .  .  .  .  .  }
   386  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   387  .  .  .  .  .  .  0: *ast.Ident {
   388  .  .  .  .  .  .  .  NamePos: -
   389  .  .  .  .  .  .  .  Name: "GEWEB"
   390  .  .  .  .  .  .  .  Obj: *ast.Object {
   391  .  .  .  .  .  .  .  .  Kind: const
   392  .  .  .  .  .  .  .  .  Name: "GEWEB"
   393  .  .  .  .  .  .  .  .  Decl: *(obj @ 377)
   394  .  .  .  .  .  .  .  .  Data: 4
   395  .  .  .  .  .  .  .  }
   396  .  .  .  .  .  .  }
   397  .  .  .  .  .  }
   398  .  .  .  .  .  Type: *ast.Ident {
   399  .  .  .  .  .  .  NamePos: -
   400  .  .  .  .  .  .  Name: "Source"
   401  .  .  .  .  .  .  Obj: *(obj @ 213)
   402  .  .  .  .  .  }
   403  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   404  .  .  .  .  .  .  0: *ast.BasicLit {
   405  .  .  .  .  .  .  .  ValuePos: -
   406  .  .  .  .  .  .  .  Kind: STRING
   407  .  .  .  .  .  .  .  Value: "\"GEWEB\""
   408  .  .  .  .  .  .  }
   409  .  .  .  .  .  }
   410  .  .  .  .  }
   411  .  .  .  .  5: *ast.ValueSpec {
   412  .  .  .  .  .  Doc: *ast.CommentGroup {
   413  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   414  .  .  .  .  .  .  .  0: *ast.Comment {
   415  .  .  .  .  .  .  .  .  Slash: -
   416  .  .  .  .  .  .  .  .  Text: "// WEBAPI ..."
   417  .  .  .  .  .  .  .  }
   418  .  .  .  .  .  .  }
   419  .  .  .  .  .  }
   420  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   421  .  .  .  .  .  .  0: *ast.Ident {
   422  .  .  .  .  .  .  .  NamePos: -
   423  .  .  .  .  .  .  .  Name: "WEBAPI"
   424  .  .  .  .  .  .  .  Obj: *ast.Object {
   425  .  .  .  .  .  .  .  .  Kind: const
   426  .  .  .  .  .  .  .  .  Name: "WEBAPI"
   427  .  .  .  .  .  .  .  .  Decl: *(obj @ 411)
   428  .  .  .  .  .  .  .  .  Data: 5
   429  .  .  .  .  .  .  .  }
   430  .  .  .  .  .  .  }
   431  .  .  .  .  .  }
   432  .  .  .  .  .  Type: *ast.Ident {
   433  .  .  .  .  .  .  NamePos: -
   434  .  .  .  .  .  .  Name: "Source"
   435  .  .  .  .  .  .  Obj: *(obj @ 213)
   436  .  .  .  .  .  }
   437  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   438  .  .  .  .  .  .  0: *ast.BasicLit {
   439  .  .  .  .  .  .  .  ValuePos: -
   440  .  .  .  .  .  .  .  Kind: STRING
   441  .  .  .  .  .  .  .  Value: "\"WEBAPI\""
   442  .  .  .  .  .  .  }
   443  .  .  .  .  .  }
   444  .  .  .  .  .  Comment: *ast.CommentGroup {
   445  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   446  .  .  .  .  .  .  .  0: *ast.Comment {
   447  .  .  .  .  .  .  .  .  Slash: -
   448  .  .  .  .  .  .  .  .  Text: "// source of a DeliveryLinkRequest if it was created via web-microsite"
   449  .  .  .  .  .  .  .  }
   450  .  .  .  .  .  .  }
   451  .  .  .  .  .  }
   452  .  .  .  .  }
   453  .  .  .  .  6: *ast.ValueSpec {
   454  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   455  .  .  .  .  .  .  0: *ast.Ident {
   456  .  .  .  .  .  .  .  NamePos: -
   457  .  .  .  .  .  .  .  Name: "defaultBookingCodePrefix"
   458  .  .  .  .  .  .  .  Obj: *ast.Object {
   459  .  .  .  .  .  .  .  .  Kind: const
   460  .  .  .  .  .  .  .  .  Name: "defaultBookingCodePrefix"
   461  .  .  .  .  .  .  .  .  Decl: *(obj @ 453)
   462  .  .  .  .  .  .  .  .  Data: 6
   463  .  .  .  .  .  .  .  }
   464  .  .  .  .  .  .  }
   465  .  .  .  .  .  }
   466  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   467  .  .  .  .  .  .  0: *ast.BasicLit {
   468  .  .  .  .  .  .  .  ValuePos: -
   469  .  .  .  .  .  .  .  Kind: STRING
   470  .  .  .  .  .  .  .  Value: "\"EXPRESS\""
   471  .  .  .  .  .  .  }
   472  .  .  .  .  .  }
   473  .  .  .  .  }
   474  .  .  .  }
   475  .  .  .  Rparen: -
   476  .  .  }
   477  .  }
   478  .  Scope: *ast.Scope {
   479  .  .  Objects: map[string]*ast.Object (len = 10) {
   480  .  .  .  "Test": *(obj @ 158)
   481  .  .  .  "Operator": *(obj @ 254)
   482  .  .  .  "Android": *(obj @ 322)
   483  .  .  .  "GEWEB": *(obj @ 390)
   484  .  .  .  "WEBAPI": *(obj @ 424)
   485  .  .  .  "Mocker": *(obj @ 24)
   486  .  .  .  "Source": *(obj @ 213)
   487  .  .  .  "IOS": *(obj @ 288)
   488  .  .  .  "Partner": *(obj @ 356)
   489  .  .  .  "defaultBookingCodePrefix": *(obj @ 458)
   490  .  .  }
   491  .  }
   492  .  Unresolved: []*ast.Ident (len = 6) {
   493  .  .  0: *(obj @ 65)
   494  .  .  1: *(obj @ 82)
   495  .  .  2: *(obj @ 105)
   496  .  .  3: *(obj @ 122)
   497  .  .  4: *(obj @ 182)
   498  .  .  5: *(obj @ 220)
   499  .  }
   500  .  Comments: []*ast.CommentGroup (len = 11) {
   501  .  .  0: *(obj @ 8)
   502  .  .  1: *(obj @ 142)
   503  .  .  2: *(obj @ 197)
   504  .  .  3: *(obj @ 229)
   505  .  .  4: *(obj @ 242)
   506  .  .  5: *(obj @ 276)
   507  .  .  6: *(obj @ 310)
   508  .  .  7: *(obj @ 344)
   509  .  .  8: *(obj @ 378)
   510  .  .  9: *(obj @ 412)
   511  .  .  10: *(obj @ 444)
   512  .  }
   513  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "main"
     3  }
     0  nil
     0  *ast.GenDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// Mocker ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  TokPos: -
    10  .  Tok: type
    11  .  Lparen: -
    12  .  Specs: []ast.Spec (len = 1) {
    13  .  .  0: *ast.TypeSpec {
    14  .  .  .  Name: *ast.Ident {
    15  .  .  .  .  NamePos: -
    16  .  .  .  .  Name: "Mocker"
    17  .  .  .  .  Obj: *ast.Object {
    18  .  .  .  .  .  Kind: type
    19  .  .  .  .  .  Name: "Mocker"
    20  .  .  .  .  .  Decl: *(obj @ 13)
    21  .  .  .  .  }
    22  .  .  .  }
    23  .  .  .  Assign: -
    24  .  .  .  Type: *ast.InterfaceType {
    25  .  .  .  .  Interface: -
    26  .  .  .  .  Methods: *ast.FieldList {
    27  .  .  .  .  .  Opening: -
    28  .  .  .  .  .  List: []*ast.Field (len = 1) {
    29  .  .  .  .  .  .  0: *ast.Field {
    30  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    31  .  .  .  .  .  .  .  .  0: *ast.Ident {
    32  .  .  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  .  .  Name: "Mock"
    34  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    35  .  .  .  .  .  .  .  .  .  .  Kind: func
    36  .  .  .  .  .  .  .  .  .  .  Name: "Mock"
    37  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 29)
    38  .  .  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  .  .  }
    40  .  .  .  .  .  .  .  }
    41  .  .  .  .  .  .  .  Type: *ast.FuncType {
    42  .  .  .  .  .  .  .  .  Func: -
    43  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
    44  .  .  .  .  .  .  .  .  .  Opening: -
    45  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    46  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    47  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    48  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    49  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    50  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    51  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    52  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    53  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    54  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 46)
    55  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    56  .  .  .  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    59  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    60  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
    61  .  .  .  .  .  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
    64  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    65  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    66  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    67  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    68  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    69  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    70  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    71  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 63)
    72  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    73  .  .  .  .  .  .  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  .  .  .  .  .  }
    75  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    76  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    77  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
    78  .  .  .  .  .  .  .  .  .  .  .  }
    79  .  .  .  .  .  .  .  .  .  .  }
    80  .  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  .  Closing: -
    82  .  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
    84  .  .  .  .  .  .  .  .  .  Opening: -
    85  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    86  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    87  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    88  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    89  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    90  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
    91  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    92  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    93  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
    94  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 86)
    95  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    96  .  .  .  .  .  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    99  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   100  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   101  .  .  .  .  .  .  .  .  .  .  .  }
   102  .  .  .  .  .  .  .  .  .  .  }
   103  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   104  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   105  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   106  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   107  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
   108  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
   111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 103)
   112  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   113  .  .  .  .  .  .  .  .  .  .  .  .  }
   114  .  .  .  .  .  .  .  .  .  .  .  }
   115  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   116  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   117  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   118  .  .  .  .  .  .  .  .  .  .  .  }
   119  .  .  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  .  .  .  Closing: -
   122  .  .  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  .  }
   124  .  .  .  .  .  .  }
   125  .  .  .  .  .  }
   126  .  .  .  .  .  Closing: -
   127  .  .  .  .  }
   128  .  .  .  .  Incomplete: false
   129  .  .  .  }
   130  .  .  }
   131  .  }
   132  .  Rparen: -
   133  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// Mocker ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// Mocker ..."
     3  }
     0  nil
     0  nil
     0  *ast.TypeSpec {
     1  .  Name: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "Mocker"
     4  .  .  Obj: *ast.Object {
     5  .  .  .  Kind: type
     6  .  .  .  Name: "Mocker"
     7  .  .  .  Decl: *(obj @ 0)
     8  .  .  }
     9  .  }
    10  .  Assign: -
    11  .  Type: *ast.InterfaceType {
    12  .  .  Interface: -
    13  .  .  Methods: *ast.FieldList {
    14  .  .  .  Opening: -
    15  .  .  .  List: []*ast.Field (len = 1) {
    16  .  .  .  .  0: *ast.Field {
    17  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    18  .  .  .  .  .  .  0: *ast.Ident {
    19  .  .  .  .  .  .  .  NamePos: -
    20  .  .  .  .  .  .  .  Name: "Mock"
    21  .  .  .  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  .  .  .  Kind: func
    23  .  .  .  .  .  .  .  .  Name: "Mock"
    24  .  .  .  .  .  .  .  .  Decl: *(obj @ 16)
    25  .  .  .  .  .  .  .  }
    26  .  .  .  .  .  .  }
    27  .  .  .  .  .  }
    28  .  .  .  .  .  Type: *ast.FuncType {
    29  .  .  .  .  .  .  Func: -
    30  .  .  .  .  .  .  Params: *ast.FieldList {
    31  .  .  .  .  .  .  .  Opening: -
    32  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    33  .  .  .  .  .  .  .  .  0: *ast.Field {
    34  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    35  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    36  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    37  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    38  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    39  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    40  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    41  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 33)
    42  .  .  .  .  .  .  .  .  .  .  .  }
    43  .  .  .  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  .  .  .  }
    45  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    46  .  .  .  .  .  .  .  .  .  .  NamePos: -
    47  .  .  .  .  .  .  .  .  .  .  Name: "int"
    48  .  .  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  .  }
    50  .  .  .  .  .  .  .  .  1: *ast.Field {
    51  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    52  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    53  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    54  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    55  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    56  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    57  .  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    58  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 50)
    59  .  .  .  .  .  .  .  .  .  .  .  }
    60  .  .  .  .  .  .  .  .  .  .  }
    61  .  .  .  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    63  .  .  .  .  .  .  .  .  .  .  NamePos: -
    64  .  .  .  .  .  .  .  .  .  .  Name: "int"
    65  .  .  .  .  .  .  .  .  .  }
    66  .  .  .  .  .  .  .  .  }
    67  .  .  .  .  .  .  .  }
    68  .  .  .  .  .  .  .  Closing: -
    69  .  .  .  .  .  .  }
    70  .  .  .  .  .  .  Results: *ast.FieldList {
    71  .  .  .  .  .  .  .  Opening: -
    72  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    73  .  .  .  .  .  .  .  .  0: *ast.Field {
    74  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    75  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    76  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    77  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
    78  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    79  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    80  .  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
    81  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 73)
    82  .  .  .  .  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  .  .  .  }
    85  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    86  .  .  .  .  .  .  .  .  .  .  NamePos: -
    87  .  .  .  .  .  .  .  .  .  .  Name: "int"
    88  .  .  .  .  .  .  .  .  .  }
    89  .  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  .  .  1: *ast.Field {
    91  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    92  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    93  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    94  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
    95  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    96  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    97  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
    98  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 90)
    99  .  .  .  .  .  .  .  .  .  .  .  }
   100  .  .  .  .  .  .  .  .  .  .  }
   101  .  .  .  .  .  .  .  .  .  }
   102  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   103  .  .  .  .  .  .  .  .  .  .  NamePos: -
   104  .  .  .  .  .  .  .  .  .  .  Name: "string"
   105  .  .  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  .  .  }
   107  .  .  .  .  .  .  .  }
   108  .  .  .  .  .  .  .  Closing: -
   109  .  .  .  .  .  .  }
   110  .  .  .  .  .  }
   111  .  .  .  .  }
   112  .  .  .  }
   113  .  .  .  Closing: -
   114  .  .  }
   115  .  .  Incomplete: false
   116  .  }
   117  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Mocker"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Mocker"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *(obj @ 0)
     8  .  .  .  Assign: -
     9  .  .  .  Type: *ast.InterfaceType {
    10  .  .  .  .  Interface: -
    11  .  .  .  .  Methods: *ast.FieldList {
    12  .  .  .  .  .  Opening: -
    13  .  .  .  .  .  List: []*ast.Field (len = 1) {
    14  .  .  .  .  .  .  0: *ast.Field {
    15  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  .  .  .  .  0: *ast.Ident {
    17  .  .  .  .  .  .  .  .  .  NamePos: -
    18  .  .  .  .  .  .  .  .  .  Name: "Mock"
    19  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    20  .  .  .  .  .  .  .  .  .  .  Kind: func
    21  .  .  .  .  .  .  .  .  .  .  Name: "Mock"
    22  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 14)
    23  .  .  .  .  .  .  .  .  .  }
    24  .  .  .  .  .  .  .  .  }
    25  .  .  .  .  .  .  .  }
    26  .  .  .  .  .  .  .  Type: *ast.FuncType {
    27  .  .  .  .  .  .  .  .  Func: -
    28  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
    29  .  .  .  .  .  .  .  .  .  Opening: -
    30  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    31  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    32  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    33  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    34  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    35  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    36  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    37  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    38  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    39  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 31)
    40  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    41  .  .  .  .  .  .  .  .  .  .  .  .  }
    42  .  .  .  .  .  .  .  .  .  .  .  }
    43  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    44  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    45  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
    46  .  .  .  .  .  .  .  .  .  .  .  }
    47  .  .  .  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
    49  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    50  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    51  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    52  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    53  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    54  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    55  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    56  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 48)
    57  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  .  .  .  .  .  }
    60  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    61  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    62  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
    63  .  .  .  .  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  .  .  .  .  }
    65  .  .  .  .  .  .  .  .  .  }
    66  .  .  .  .  .  .  .  .  .  Closing: -
    67  .  .  .  .  .  .  .  .  }
    68  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
    69  .  .  .  .  .  .  .  .  .  Opening: -
    70  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    71  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    72  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    73  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    74  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    75  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
    76  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    77  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    78  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
    79  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 71)
    80  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    81  .  .  .  .  .  .  .  .  .  .  .  .  }
    82  .  .  .  .  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    84  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    85  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
    86  .  .  .  .  .  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
    89  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    90  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    91  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    92  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
    93  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    94  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    95  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
    96  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 88)
    97  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  .  .  .  .  .  }
    99  .  .  .  .  .  .  .  .  .  .  .  }
   100  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   101  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   102  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   103  .  .  .  .  .  .  .  .  .  .  .  }
   104  .  .  .  .  .  .  .  .  .  .  }
   105  .  .  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  .  .  .  Closing: -
   107  .  .  .  .  .  .  .  .  }
   108  .  .  .  .  .  .  .  }
   109  .  .  .  .  .  .  }
   110  .  .  .  .  .  }
   111  .  .  .  .  .  Closing: -
   112  .  .  .  .  }
   113  .  .  .  .  Incomplete: false
   114  .  .  .  }
   115  .  .  }
   116  .  }
   117  }
     0  nil
     0  *ast.InterfaceType {
     1  .  Interface: -
     2  .  Methods: *ast.FieldList {
     3  .  .  Opening: -
     4  .  .  List: []*ast.Field (len = 1) {
     5  .  .  .  0: *ast.Field {
     6  .  .  .  .  Names: []*ast.Ident (len = 1) {
     7  .  .  .  .  .  0: *ast.Ident {
     8  .  .  .  .  .  .  NamePos: -
     9  .  .  .  .  .  .  Name: "Mock"
    10  .  .  .  .  .  .  Obj: *ast.Object {
    11  .  .  .  .  .  .  .  Kind: func
    12  .  .  .  .  .  .  .  Name: "Mock"
    13  .  .  .  .  .  .  .  Decl: *(obj @ 5)
    14  .  .  .  .  .  .  }
    15  .  .  .  .  .  }
    16  .  .  .  .  }
    17  .  .  .  .  Type: *ast.FuncType {
    18  .  .  .  .  .  Func: -
    19  .  .  .  .  .  Params: *ast.FieldList {
    20  .  .  .  .  .  .  Opening: -
    21  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    22  .  .  .  .  .  .  .  0: *ast.Field {
    23  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    24  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    25  .  .  .  .  .  .  .  .  .  .  NamePos: -
    26  .  .  .  .  .  .  .  .  .  .  Name: "input"
    27  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    28  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    29  .  .  .  .  .  .  .  .  .  .  .  Name: "input"
    30  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 22)
    31  .  .  .  .  .  .  .  .  .  .  }
    32  .  .  .  .  .  .  .  .  .  }
    33  .  .  .  .  .  .  .  .  }
    34  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  .  .  .  .  Name: "int"
    37  .  .  .  .  .  .  .  .  }
    38  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  .  1: *ast.Field {
    40  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    41  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    42  .  .  .  .  .  .  .  .  .  .  NamePos: -
    43  .  .  .  .  .  .  .  .  .  .  Name: "output"
    44  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    45  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    46  .  .  .  .  .  .  .  .  .  .  .  Name: "output"
    47  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 39)
    48  .  .  .  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  .  .  }
    50  .  .  .  .  .  .  .  .  }
    51  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    52  .  .  .  .  .  .  .  .  .  NamePos: -
    53  .  .  .  .  .  .  .  .  .  Name: "int"
    54  .  .  .  .  .  .  .  .  }
    55  .  .  .  .  .  .  .  }
    56  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  Closing: -
    58  .  .  .  .  .  }
    59  .  .  .  .  .  Results: *ast.FieldList {
    60  .  .  .  .  .  .  Opening: -
    61  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    62  .  .  .  .  .  .  .  0: *ast.Field {
    63  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    64  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    65  .  .  .  .  .  .  .  .  .  .  NamePos: -
    66  .  .  .  .  .  .  .  .  .  .  Name: "code"
    67  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    68  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    69  .  .  .  .  .  .  .  .  .  .  .  Name: "code"
    70  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 62)
    71  .  .  .  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  .  .  .  }
    73  .  .  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    75  .  .  .  .  .  .  .  .  .  NamePos: -
    76  .  .  .  .  .  .  .  .  .  Name: "int"
    77  .  .  .  .  .  .  .  .  }
    78  .  .  .  .  .  .  .  }
    79  .  .  .  .  .  .  .  1: *ast.Field {
    80  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    81  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    82  .  .  .  .  .  .  .  .  .  .  NamePos: -
    83  .  .  .  .  .  .  .  .  .  .  Name: "str"
    84  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    85  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    86  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
    87  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 79)
    88  .  .  .  .  .  .  .  .  .  .  }
    89  .  .  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    92  .  .  .  .  .  .  .  .  .  NamePos: -
    93  .  .  .  .  .  .  .  .  .  Name: "string"
    94  .  .  .  .  .  .  .  .  }
    95  .  .  .  .  .  .  .  }
    96  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  Closing: -
    98  .  .  .  .  .  }
    99  .  .  .  .  }
   100  .  .  .  }
   101  .  .  }
   102  .  .  Closing: -
   103  .  }
   104  .  Incomplete: false
   105  }
     0  *ast.FieldList {
     1  .  Opening: -
     2  .  List: []*ast.Field (len = 1) {
     3  .  .  0: *ast.Field {
     4  .  .  .  Names: []*ast.Ident (len = 1) {
     5  .  .  .  .  0: *ast.Ident {
     6  .  .  .  .  .  NamePos: -
     7  .  .  .  .  .  Name: "Mock"
     8  .  .  .  .  .  Obj: *ast.Object {
     9  .  .  .  .  .  .  Kind: func
    10  .  .  .  .  .  .  Name: "Mock"
    11  .  .  .  .  .  .  Decl: *(obj @ 3)
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Type: *ast.FuncType {
    16  .  .  .  .  Func: -
    17  .  .  .  .  Params: *ast.FieldList {
    18  .  .  .  .  .  Opening: -
    19  .  .  .  .  .  List: []*ast.Field (len = 2) {
    20  .  .  .  .  .  .  0: *ast.Field {
    21  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    22  .  .  .  .  .  .  .  .  0: *ast.Ident {
    23  .  .  .  .  .  .  .  .  .  NamePos: -
    24  .  .  .  .  .  .  .  .  .  Name: "input"
    25  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    26  .  .  .  .  .  .  .  .  .  .  Kind: var
    27  .  .  .  .  .  .  .  .  .  .  Name: "input"
    28  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 20)
    29  .  .  .  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  .  .  }
    31  .  .  .  .  .  .  .  }
    32  .  .  .  .  .  .  .  Type: *ast.Ident {
    33  .  .  .  .  .  .  .  .  NamePos: -
    34  .  .  .  .  .  .  .  .  Name: "int"
    35  .  .  .  .  .  .  .  }
    36  .  .  .  .  .  .  }
    37  .  .  .  .  .  .  1: *ast.Field {
    38  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    39  .  .  .  .  .  .  .  .  0: *ast.Ident {
    40  .  .  .  .  .  .  .  .  .  NamePos: -
    41  .  .  .  .  .  .  .  .  .  Name: "output"
    42  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    43  .  .  .  .  .  .  .  .  .  .  Kind: var
    44  .  .  .  .  .  .  .  .  .  .  Name: "output"
    45  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 37)
    46  .  .  .  .  .  .  .  .  .  }
    47  .  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  Type: *ast.Ident {
    50  .  .  .  .  .  .  .  .  NamePos: -
    51  .  .  .  .  .  .  .  .  Name: "int"
    52  .  .  .  .  .  .  .  }
    53  .  .  .  .  .  .  }
    54  .  .  .  .  .  }
    55  .  .  .  .  .  Closing: -
    56  .  .  .  .  }
    57  .  .  .  .  Results: *ast.FieldList {
    58  .  .  .  .  .  Opening: -
    59  .  .  .  .  .  List: []*ast.Field (len = 2) {
    60  .  .  .  .  .  .  0: *ast.Field {
    61  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    62  .  .  .  .  .  .  .  .  0: *ast.Ident {
    63  .  .  .  .  .  .  .  .  .  NamePos: -
    64  .  .  .  .  .  .  .  .  .  Name: "code"
    65  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    66  .  .  .  .  .  .  .  .  .  .  Kind: var
    67  .  .  .  .  .  .  .  .  .  .  Name: "code"
    68  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 60)
    69  .  .  .  .  .  .  .  .  .  }
    70  .  .  .  .  .  .  .  .  }
    71  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  .  Type: *ast.Ident {
    73  .  .  .  .  .  .  .  .  NamePos: -
    74  .  .  .  .  .  .  .  .  Name: "int"
    75  .  .  .  .  .  .  .  }
    76  .  .  .  .  .  .  }
    77  .  .  .  .  .  .  1: *ast.Field {
    78  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    79  .  .  .  .  .  .  .  .  0: *ast.Ident {
    80  .  .  .  .  .  .  .  .  .  NamePos: -
    81  .  .  .  .  .  .  .  .  .  Name: "str"
    82  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    83  .  .  .  .  .  .  .  .  .  .  Kind: var
    84  .  .  .  .  .  .  .  .  .  .  Name: "str"
    85  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 77)
    86  .  .  .  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  }
    89  .  .  .  .  .  .  .  Type: *ast.Ident {
    90  .  .  .  .  .  .  .  .  NamePos: -
    91  .  .  .  .  .  .  .  .  Name: "string"
    92  .  .  .  .  .  .  .  }
    93  .  .  .  .  .  .  }
    94  .  .  .  .  .  }
    95  .  .  .  .  .  Closing: -
    96  .  .  .  .  }
    97  .  .  .  }
    98  .  .  }
    99  .  }
   100  .  Closing: -
   101  }
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "Mock"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: func
     7  .  .  .  .  Name: "Mock"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.FuncType {
    13  .  .  Func: -
    14  .  .  Params: *ast.FieldList {
    15  .  .  .  Opening: -
    16  .  .  .  List: []*ast.Field (len = 2) {
    17  .  .  .  .  0: *ast.Field {
    18  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    19  .  .  .  .  .  .  0: *ast.Ident {
    20  .  .  .  .  .  .  .  NamePos: -
    21  .  .  .  .  .  .  .  Name: "input"
    22  .  .  .  .  .  .  .  Obj: *ast.Object {
    23  .  .  .  .  .  .  .  .  Kind: var
    24  .  .  .  .  .  .  .  .  Name: "input"
    25  .  .  .  .  .  .  .  .  Decl: *(obj @ 17)
    26  .  .  .  .  .  .  .  }
    27  .  .  .  .  .  .  }
    28  .  .  .  .  .  }
    29  .  .  .  .  .  Type: *ast.Ident {
    30  .  .  .  .  .  .  NamePos: -
    31  .  .  .  .  .  .  Name: "int"
    32  .  .  .  .  .  }
    33  .  .  .  .  }
    34  .  .  .  .  1: *ast.Field {
    35  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    36  .  .  .  .  .  .  0: *ast.Ident {
    37  .  .  .  .  .  .  .  NamePos: -
    38  .  .  .  .  .  .  .  Name: "output"
    39  .  .  .  .  .  .  .  Obj: *ast.Object {
    40  .  .  .  .  .  .  .  .  Kind: var
    41  .  .  .  .  .  .  .  .  Name: "output"
    42  .  .  .  .  .  .  .  .  Decl: *(obj @ 34)
    43  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  }
    45  .  .  .  .  .  }
    46  .  .  .  .  .  Type: *ast.Ident {
    47  .  .  .  .  .  .  NamePos: -
    48  .  .  .  .  .  .  Name: "int"
    49  .  .  .  .  .  }
    50  .  .  .  .  }
    51  .  .  .  }
    52  .  .  .  Closing: -
    53  .  .  }
    54  .  .  Results: *ast.FieldList {
    55  .  .  .  Opening: -
    56  .  .  .  List: []*ast.Field (len = 2) {
    57  .  .  .  .  0: *ast.Field {
    58  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    59  .  .  .  .  .  .  0: *ast.Ident {
    60  .  .  .  .  .  .  .  NamePos: -
    61  .  .  .  .  .  .  .  Name: "code"
    62  .  .  .  .  .  .  .  Obj: *ast.Object {
    63  .  .  .  .  .  .  .  .  Kind: var
    64  .  .  .  .  .  .  .  .  Name: "code"
    65  .  .  .  .  .  .  .  .  Decl: *(obj @ 57)
    66  .  .  .  .  .  .  .  }
    67  .  .  .  .  .  .  }
    68  .  .  .  .  .  }
    69  .  .  .  .  .  Type: *ast.Ident {
    70  .  .  .  .  .  .  NamePos: -
    71  .  .  .  .  .  .  Name: "int"
    72  .  .  .  .  .  }
    73  .  .  .  .  }
    74  .  .  .  .  1: *ast.Field {
    75  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    76  .  .  .  .  .  .  0: *ast.Ident {
    77  .  .  .  .  .  .  .  NamePos: -
    78  .  .  .  .  .  .  .  Name: "str"
    79  .  .  .  .  .  .  .  Obj: *ast.Object {
    80  .  .  .  .  .  .  .  .  Kind: var
    81  .  .  .  .  .  .  .  .  Name: "str"
    82  .  .  .  .  .  .  .  .  Decl: *(obj @ 74)
    83  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  }
    85  .  .  .  .  .  }
    86  .  .  .  .  .  Type: *ast.Ident {
    87  .  .  .  .  .  .  NamePos: -
    88  .  .  .  .  .  .  Name: "string"
    89  .  .  .  .  .  }
    90  .  .  .  .  }
    91  .  .  .  }
    92  .  .  .  Closing: -
    93  .  .  }
    94  .  }
    95  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Mock"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: func
     5  .  .  Name: "Mock"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.FuncType {
    11  .  .  .  .  Func: -
    12  .  .  .  .  Params: *ast.FieldList {
    13  .  .  .  .  .  Opening: -
    14  .  .  .  .  .  List: []*ast.Field (len = 2) {
    15  .  .  .  .  .  .  0: *ast.Field {
    16  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    17  .  .  .  .  .  .  .  .  0: *ast.Ident {
    18  .  .  .  .  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  .  .  .  .  Name: "input"
    20  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    21  .  .  .  .  .  .  .  .  .  .  Kind: var
    22  .  .  .  .  .  .  .  .  .  .  Name: "input"
    23  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 15)
    24  .  .  .  .  .  .  .  .  .  }
    25  .  .  .  .  .  .  .  .  }
    26  .  .  .  .  .  .  .  }
    27  .  .  .  .  .  .  .  Type: *ast.Ident {
    28  .  .  .  .  .  .  .  .  NamePos: -
    29  .  .  .  .  .  .  .  .  Name: "int"
    30  .  .  .  .  .  .  .  }
    31  .  .  .  .  .  .  }
    32  .  .  .  .  .  .  1: *ast.Field {
    33  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    34  .  .  .  .  .  .  .  .  0: *ast.Ident {
    35  .  .  .  .  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  .  .  .  .  Name: "output"
    37  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    38  .  .  .  .  .  .  .  .  .  .  Kind: var
    39  .  .  .  .  .  .  .  .  .  .  Name: "output"
    40  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 32)
    41  .  .  .  .  .  .  .  .  .  }
    42  .  .  .  .  .  .  .  .  }
    43  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  .  Type: *ast.Ident {
    45  .  .  .  .  .  .  .  .  NamePos: -
    46  .  .  .  .  .  .  .  .  Name: "int"
    47  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  }
    49  .  .  .  .  .  }
    50  .  .  .  .  .  Closing: -
    51  .  .  .  .  }
    52  .  .  .  .  Results: *ast.FieldList {
    53  .  .  .  .  .  Opening: -
    54  .  .  .  .  .  List: []*ast.Field (len = 2) {
    55  .  .  .  .  .  .  0: *ast.Field {
    56  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    57  .  .  .  .  .  .  .  .  0: *ast.Ident {
    58  .  .  .  .  .  .  .  .  .  NamePos: -
    59  .  .  .  .  .  .  .  .  .  Name: "code"
    60  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    61  .  .  .  .  .  .  .  .  .  .  Kind: var
    62  .  .  .  .  .  .  .  .  .  .  Name: "code"
    63  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 55)
    64  .  .  .  .  .  .  .  .  .  }
    65  .  .  .  .  .  .  .  .  }
    66  .  .  .  .  .  .  .  }
    67  .  .  .  .  .  .  .  Type: *ast.Ident {
    68  .  .  .  .  .  .  .  .  NamePos: -
    69  .  .  .  .  .  .  .  .  Name: "int"
    70  .  .  .  .  .  .  .  }
    71  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  1: *ast.Field {
    73  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    74  .  .  .  .  .  .  .  .  0: *ast.Ident {
    75  .  .  .  .  .  .  .  .  .  NamePos: -
    76  .  .  .  .  .  .  .  .  .  Name: "str"
    77  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    78  .  .  .  .  .  .  .  .  .  .  Kind: var
    79  .  .  .  .  .  .  .  .  .  .  Name: "str"
    80  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 72)
    81  .  .  .  .  .  .  .  .  .  }
    82  .  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  .  Type: *ast.Ident {
    85  .  .  .  .  .  .  .  .  NamePos: -
    86  .  .  .  .  .  .  .  .  Name: "string"
    87  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  }
    89  .  .  .  .  .  }
    90  .  .  .  .  .  Closing: -
    91  .  .  .  .  }
    92  .  .  .  }
    93  .  .  }
    94  .  }
    95  }
     0  nil
     0  *ast.FuncType {
     1  .  Func: -
     2  .  Params: *ast.FieldList {
     3  .  .  Opening: -
     4  .  .  List: []*ast.Field (len = 2) {
     5  .  .  .  0: *ast.Field {
     6  .  .  .  .  Names: []*ast.Ident (len = 1) {
     7  .  .  .  .  .  0: *ast.Ident {
     8  .  .  .  .  .  .  NamePos: -
     9  .  .  .  .  .  .  Name: "input"
    10  .  .  .  .  .  .  Obj: *ast.Object {
    11  .  .  .  .  .  .  .  Kind: var
    12  .  .  .  .  .  .  .  Name: "input"
    13  .  .  .  .  .  .  .  Decl: *(obj @ 5)
    14  .  .  .  .  .  .  }
    15  .  .  .  .  .  }
    16  .  .  .  .  }
    17  .  .  .  .  Type: *ast.Ident {
    18  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  Name: "int"
    20  .  .  .  .  }
    21  .  .  .  }
    22  .  .  .  1: *ast.Field {
    23  .  .  .  .  Names: []*ast.Ident (len = 1) {
    24  .  .  .  .  .  0: *ast.Ident {
    25  .  .  .  .  .  .  NamePos: -
    26  .  .  .  .  .  .  Name: "output"
    27  .  .  .  .  .  .  Obj: *ast.Object {
    28  .  .  .  .  .  .  .  Kind: var
    29  .  .  .  .  .  .  .  Name: "output"
    30  .  .  .  .  .  .  .  Decl: *(obj @ 22)
    31  .  .  .  .  .  .  }
    32  .  .  .  .  .  }
    33  .  .  .  .  }
    34  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  Name: "int"
    37  .  .  .  .  }
    38  .  .  .  }
    39  .  .  }
    40  .  .  Closing: -
    41  .  }
    42  .  Results: *ast.FieldList {
    43  .  .  Opening: -
    44  .  .  List: []*ast.Field (len = 2) {
    45  .  .  .  0: *ast.Field {
    46  .  .  .  .  Names: []*ast.Ident (len = 1) {
    47  .  .  .  .  .  0: *ast.Ident {
    48  .  .  .  .  .  .  NamePos: -
    49  .  .  .  .  .  .  Name: "code"
    50  .  .  .  .  .  .  Obj: *ast.Object {
    51  .  .  .  .  .  .  .  Kind: var
    52  .  .  .  .  .  .  .  Name: "code"
    53  .  .  .  .  .  .  .  Decl: *(obj @ 45)
    54  .  .  .  .  .  .  }
    55  .  .  .  .  .  }
    56  .  .  .  .  }
    57  .  .  .  .  Type: *ast.Ident {
    58  .  .  .  .  .  NamePos: -
    59  .  .  .  .  .  Name: "int"
    60  .  .  .  .  }
    61  .  .  .  }
    62  .  .  .  1: *ast.Field {
    63  .  .  .  .  Names: []*ast.Ident (len = 1) {
    64  .  .  .  .  .  0: *ast.Ident {
    65  .  .  .  .  .  .  NamePos: -
    66  .  .  .  .  .  .  Name: "str"
    67  .  .  .  .  .  .  Obj: *ast.Object {
    68  .  .  .  .  .  .  .  Kind: var
    69  .  .  .  .  .  .  .  Name: "str"
    70  .  .  .  .  .  .  .  Decl: *(obj @ 62)
    71  .  .  .  .  .  .  }
    72  .  .  .  .  .  }
    73  .  .  .  .  }
    74  .  .  .  .  Type: *ast.Ident {
    75  .  .  .  .  .  NamePos: -
    76  .  .  .  .  .  Name: "string"
    77  .  .  .  .  }
    78  .  .  .  }
    79  .  .  }
    80  .  .  Closing: -
    81  .  }
    82  }
     0  *ast.FieldList {
     1  .  Opening: -
     2  .  List: []*ast.Field (len = 2) {
     3  .  .  0: *ast.Field {
     4  .  .  .  Names: []*ast.Ident (len = 1) {
     5  .  .  .  .  0: *ast.Ident {
     6  .  .  .  .  .  NamePos: -
     7  .  .  .  .  .  Name: "input"
     8  .  .  .  .  .  Obj: *ast.Object {
     9  .  .  .  .  .  .  Kind: var
    10  .  .  .  .  .  .  Name: "input"
    11  .  .  .  .  .  .  Decl: *(obj @ 3)
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Type: *ast.Ident {
    16  .  .  .  .  NamePos: -
    17  .  .  .  .  Name: "int"
    18  .  .  .  }
    19  .  .  }
    20  .  .  1: *ast.Field {
    21  .  .  .  Names: []*ast.Ident (len = 1) {
    22  .  .  .  .  0: *ast.Ident {
    23  .  .  .  .  .  NamePos: -
    24  .  .  .  .  .  Name: "output"
    25  .  .  .  .  .  Obj: *ast.Object {
    26  .  .  .  .  .  .  Kind: var
    27  .  .  .  .  .  .  Name: "output"
    28  .  .  .  .  .  .  Decl: *(obj @ 20)
    29  .  .  .  .  .  }
    30  .  .  .  .  }
    31  .  .  .  }
    32  .  .  .  Type: *ast.Ident {
    33  .  .  .  .  NamePos: -
    34  .  .  .  .  Name: "int"
    35  .  .  .  }
    36  .  .  }
    37  .  }
    38  .  Closing: -
    39  }
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "input"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "input"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "int"
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "input"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "input"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "int"
    13  .  .  .  }
    14  .  .  }
    15  .  }
    16  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "output"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "output"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "int"
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "output"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "output"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "int"
    13  .  .  .  }
    14  .  .  }
    15  .  }
    16  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.FieldList {
     1  .  Opening: -
     2  .  List: []*ast.Field (len = 2) {
     3  .  .  0: *ast.Field {
     4  .  .  .  Names: []*ast.Ident (len = 1) {
     5  .  .  .  .  0: *ast.Ident {
     6  .  .  .  .  .  NamePos: -
     7  .  .  .  .  .  Name: "code"
     8  .  .  .  .  .  Obj: *ast.Object {
     9  .  .  .  .  .  .  Kind: var
    10  .  .  .  .  .  .  Name: "code"
    11  .  .  .  .  .  .  Decl: *(obj @ 3)
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Type: *ast.Ident {
    16  .  .  .  .  NamePos: -
    17  .  .  .  .  Name: "int"
    18  .  .  .  }
    19  .  .  }
    20  .  .  1: *ast.Field {
    21  .  .  .  Names: []*ast.Ident (len = 1) {
    22  .  .  .  .  0: *ast.Ident {
    23  .  .  .  .  .  NamePos: -
    24  .  .  .  .  .  Name: "str"
    25  .  .  .  .  .  Obj: *ast.Object {
    26  .  .  .  .  .  .  Kind: var
    27  .  .  .  .  .  .  Name: "str"
    28  .  .  .  .  .  .  Decl: *(obj @ 20)
    29  .  .  .  .  .  }
    30  .  .  .  .  }
    31  .  .  .  }
    32  .  .  .  Type: *ast.Ident {
    33  .  .  .  .  NamePos: -
    34  .  .  .  .  Name: "string"
    35  .  .  .  }
    36  .  .  }
    37  .  }
    38  .  Closing: -
    39  }
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "code"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "code"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "int"
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "code"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "code"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "int"
    13  .  .  .  }
    14  .  .  }
    15  .  }
    16  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "str"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "str"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "string"
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "str"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "str"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "string"
    13  .  .  .  }
    14  .  .  }
    15  .  }
    16  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "string"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.GenDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// Test ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  TokPos: -
    10  .  Tok: type
    11  .  Lparen: -
    12  .  Specs: []ast.Spec (len = 1) {
    13  .  .  0: *ast.TypeSpec {
    14  .  .  .  Name: *ast.Ident {
    15  .  .  .  .  NamePos: -
    16  .  .  .  .  Name: "Test"
    17  .  .  .  .  Obj: *ast.Object {
    18  .  .  .  .  .  Kind: type
    19  .  .  .  .  .  Name: "Test"
    20  .  .  .  .  .  Decl: *(obj @ 13)
    21  .  .  .  .  }
    22  .  .  .  }
    23  .  .  .  Assign: -
    24  .  .  .  Type: *ast.StructType {
    25  .  .  .  .  Struct: -
    26  .  .  .  .  Fields: *ast.FieldList {
    27  .  .  .  .  .  Opening: -
    28  .  .  .  .  .  List: []*ast.Field (len = 1) {
    29  .  .  .  .  .  .  0: *ast.Field {
    30  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    31  .  .  .  .  .  .  .  .  0: *ast.Ident {
    32  .  .  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  .  .  Name: "a"
    34  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    35  .  .  .  .  .  .  .  .  .  .  Kind: var
    36  .  .  .  .  .  .  .  .  .  .  Name: "a"
    37  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 29)
    38  .  .  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  .  .  }
    40  .  .  .  .  .  .  .  }
    41  .  .  .  .  .  .  .  Type: *ast.Ident {
    42  .  .  .  .  .  .  .  .  NamePos: -
    43  .  .  .  .  .  .  .  .  Name: "int"
    44  .  .  .  .  .  .  .  }
    45  .  .  .  .  .  .  }
    46  .  .  .  .  .  }
    47  .  .  .  .  .  Closing: -
    48  .  .  .  .  }
    49  .  .  .  .  Incomplete: false
    50  .  .  .  }
    51  .  .  }
    52  .  }
    53  .  Rparen: -
    54  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// Test ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// Test ..."
     3  }
     0  nil
     0  nil
     0  *ast.TypeSpec {
     1  .  Name: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "Test"
     4  .  .  Obj: *ast.Object {
     5  .  .  .  Kind: type
     6  .  .  .  Name: "Test"
     7  .  .  .  Decl: *(obj @ 0)
     8  .  .  }
     9  .  }
    10  .  Assign: -
    11  .  Type: *ast.StructType {
    12  .  .  Struct: -
    13  .  .  Fields: *ast.FieldList {
    14  .  .  .  Opening: -
    15  .  .  .  List: []*ast.Field (len = 1) {
    16  .  .  .  .  0: *ast.Field {
    17  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    18  .  .  .  .  .  .  0: *ast.Ident {
    19  .  .  .  .  .  .  .  NamePos: -
    20  .  .  .  .  .  .  .  Name: "a"
    21  .  .  .  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  .  .  .  Kind: var
    23  .  .  .  .  .  .  .  .  Name: "a"
    24  .  .  .  .  .  .  .  .  Decl: *(obj @ 16)
    25  .  .  .  .  .  .  .  }
    26  .  .  .  .  .  .  }
    27  .  .  .  .  .  }
    28  .  .  .  .  .  Type: *ast.Ident {
    29  .  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  .  Name: "int"
    31  .  .  .  .  .  }
    32  .  .  .  .  }
    33  .  .  .  }
    34  .  .  .  Closing: -
    35  .  .  }
    36  .  .  Incomplete: false
    37  .  }
    38  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Test"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Test"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *(obj @ 0)
     8  .  .  .  Assign: -
     9  .  .  .  Type: *ast.StructType {
    10  .  .  .  .  Struct: -
    11  .  .  .  .  Fields: *ast.FieldList {
    12  .  .  .  .  .  Opening: -
    13  .  .  .  .  .  List: []*ast.Field (len = 1) {
    14  .  .  .  .  .  .  0: *ast.Field {
    15  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  .  .  .  .  0: *ast.Ident {
    17  .  .  .  .  .  .  .  .  .  NamePos: -
    18  .  .  .  .  .  .  .  .  .  Name: "a"
    19  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    20  .  .  .  .  .  .  .  .  .  .  Kind: var
    21  .  .  .  .  .  .  .  .  .  .  Name: "a"
    22  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 14)
    23  .  .  .  .  .  .  .  .  .  }
    24  .  .  .  .  .  .  .  .  }
    25  .  .  .  .  .  .  .  }
    26  .  .  .  .  .  .  .  Type: *ast.Ident {
    27  .  .  .  .  .  .  .  .  NamePos: -
    28  .  .  .  .  .  .  .  .  Name: "int"
    29  .  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  }
    31  .  .  .  .  .  }
    32  .  .  .  .  .  Closing: -
    33  .  .  .  .  }
    34  .  .  .  .  Incomplete: false
    35  .  .  .  }
    36  .  .  }
    37  .  }
    38  }
     0  nil
     0  *ast.StructType {
     1  .  Struct: -
     2  .  Fields: *ast.FieldList {
     3  .  .  Opening: -
     4  .  .  List: []*ast.Field (len = 1) {
     5  .  .  .  0: *ast.Field {
     6  .  .  .  .  Names: []*ast.Ident (len = 1) {
     7  .  .  .  .  .  0: *ast.Ident {
     8  .  .  .  .  .  .  NamePos: -
     9  .  .  .  .  .  .  Name: "a"
    10  .  .  .  .  .  .  Obj: *ast.Object {
    11  .  .  .  .  .  .  .  Kind: var
    12  .  .  .  .  .  .  .  Name: "a"
    13  .  .  .  .  .  .  .  Decl: *(obj @ 5)
    14  .  .  .  .  .  .  }
    15  .  .  .  .  .  }
    16  .  .  .  .  }
    17  .  .  .  .  Type: *ast.Ident {
    18  .  .  .  .  .  NamePos: -
    19  .  .  .  .  .  Name: "int"
    20  .  .  .  .  }
    21  .  .  .  }
    22  .  .  }
    23  .  .  Closing: -
    24  .  }
    25  .  Incomplete: false
    26  }
     0  *ast.FieldList {
     1  .  Opening: -
     2  .  List: []*ast.Field (len = 1) {
     3  .  .  0: *ast.Field {
     4  .  .  .  Names: []*ast.Ident (len = 1) {
     5  .  .  .  .  0: *ast.Ident {
     6  .  .  .  .  .  NamePos: -
     7  .  .  .  .  .  Name: "a"
     8  .  .  .  .  .  Obj: *ast.Object {
     9  .  .  .  .  .  .  Kind: var
    10  .  .  .  .  .  .  Name: "a"
    11  .  .  .  .  .  .  Decl: *(obj @ 3)
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Type: *ast.Ident {
    16  .  .  .  .  NamePos: -
    17  .  .  .  .  Name: "int"
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  .  Closing: -
    22  }
     0  *ast.Field {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "a"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: var
     7  .  .  .  .  Name: "a"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  }
    10  .  .  }
    11  .  }
    12  .  Type: *ast.Ident {
    13  .  .  NamePos: -
    14  .  .  Name: "int"
    15  .  }
    16  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "a"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: var
     5  .  .  Name: "a"
     6  .  .  Decl: *ast.Field {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Type: *ast.Ident {
    11  .  .  .  .  NamePos: -
    12  .  .  .  .  Name: "int"
    13  .  .  .  }
    14  .  .  }
    15  .  }
    16  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "int"
     3  }
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  nil
     0  *ast.GenDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// Source defines enum of Source values"
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  TokPos: -
    10  .  Tok: type
    11  .  Lparen: -
    12  .  Specs: []ast.Spec (len = 1) {
    13  .  .  0: *ast.TypeSpec {
    14  .  .  .  Name: *ast.Ident {
    15  .  .  .  .  NamePos: -
    16  .  .  .  .  Name: "Source"
    17  .  .  .  .  Obj: *ast.Object {
    18  .  .  .  .  .  Kind: type
    19  .  .  .  .  .  Name: "Source"
    20  .  .  .  .  .  Decl: *(obj @ 13)
    21  .  .  .  .  }
    22  .  .  .  }
    23  .  .  .  Assign: -
    24  .  .  .  Type: *ast.Ident {
    25  .  .  .  .  NamePos: -
    26  .  .  .  .  Name: "string"
    27  .  .  .  }
    28  .  .  }
    29  .  }
    30  .  Rparen: -
    31  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// Source defines enum of Source values"
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// Source defines enum of Source values"
     3  }
     0  nil
     0  nil
     0  *ast.TypeSpec {
     1  .  Name: *ast.Ident {
     2  .  .  NamePos: -
     3  .  .  Name: "Source"
     4  .  .  Obj: *ast.Object {
     5  .  .  .  Kind: type
     6  .  .  .  Name: "Source"
     7  .  .  .  Decl: *(obj @ 0)
     8  .  .  }
     9  .  }
    10  .  Assign: -
    11  .  Type: *ast.Ident {
    12  .  .  NamePos: -
    13  .  .  Name: "string"
    14  .  }
    15  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Source"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *(obj @ 0)
     8  .  .  .  Assign: -
     9  .  .  .  Type: *ast.Ident {
    10  .  .  .  .  NamePos: -
    11  .  .  .  .  Name: "string"
    12  .  .  .  }
    13  .  .  }
    14  .  }
    15  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "string"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.GenDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// express source types."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  TokPos: -
    10  .  Tok: const
    11  .  Lparen: -
    12  .  Specs: []ast.Spec (len = 7) {
    13  .  .  0: *ast.ValueSpec {
    14  .  .  .  Doc: *ast.CommentGroup {
    15  .  .  .  .  List: []*ast.Comment (len = 1) {
    16  .  .  .  .  .  0: *ast.Comment {
    17  .  .  .  .  .  .  Slash: -
    18  .  .  .  .  .  .  Text: "// Operator ..."
    19  .  .  .  .  .  }
    20  .  .  .  .  }
    21  .  .  .  }
    22  .  .  .  Names: []*ast.Ident (len = 1) {
    23  .  .  .  .  0: *ast.Ident {
    24  .  .  .  .  .  NamePos: -
    25  .  .  .  .  .  Name: "Operator"
    26  .  .  .  .  .  Obj: *ast.Object {
    27  .  .  .  .  .  .  Kind: const
    28  .  .  .  .  .  .  Name: "Operator"
    29  .  .  .  .  .  .  Decl: *(obj @ 13)
    30  .  .  .  .  .  .  Data: 0
    31  .  .  .  .  .  }
    32  .  .  .  .  }
    33  .  .  .  }
    34  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  NamePos: -
    36  .  .  .  .  Name: "Source"
    37  .  .  .  .  Obj: *ast.Object {
    38  .  .  .  .  .  Kind: type
    39  .  .  .  .  .  Name: "Source"
    40  .  .  .  .  .  Decl: *ast.TypeSpec {
    41  .  .  .  .  .  .  Name: *ast.Ident {
    42  .  .  .  .  .  .  .  NamePos: -
    43  .  .  .  .  .  .  .  Name: "Source"
    44  .  .  .  .  .  .  .  Obj: *(obj @ 37)
    45  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  Assign: -
    47  .  .  .  .  .  .  Type: *ast.Ident {
    48  .  .  .  .  .  .  .  NamePos: -
    49  .  .  .  .  .  .  .  Name: "string"
    50  .  .  .  .  .  .  }
    51  .  .  .  .  .  }
    52  .  .  .  .  }
    53  .  .  .  }
    54  .  .  .  Values: []ast.Expr (len = 1) {
    55  .  .  .  .  0: *ast.BasicLit {
    56  .  .  .  .  .  ValuePos: -
    57  .  .  .  .  .  Kind: STRING
    58  .  .  .  .  .  Value: "\"OPERATOR\""
    59  .  .  .  .  }
    60  .  .  .  }
    61  .  .  }
    62  .  .  1: *ast.ValueSpec {
    63  .  .  .  Doc: *ast.CommentGroup {
    64  .  .  .  .  List: []*ast.Comment (len = 1) {
    65  .  .  .  .  .  0: *ast.Comment {
    66  .  .  .  .  .  .  Slash: -
    67  .  .  .  .  .  .  Text: "// IOS ..."
    68  .  .  .  .  .  }
    69  .  .  .  .  }
    70  .  .  .  }
    71  .  .  .  Names: []*ast.Ident (len = 1) {
    72  .  .  .  .  0: *ast.Ident {
    73  .  .  .  .  .  NamePos: -
    74  .  .  .  .  .  Name: "IOS"
    75  .  .  .  .  .  Obj: *ast.Object {
    76  .  .  .  .  .  .  Kind: const
    77  .  .  .  .  .  .  Name: "IOS"
    78  .  .  .  .  .  .  Decl: *(obj @ 62)
    79  .  .  .  .  .  .  Data: 1
    80  .  .  .  .  .  }
    81  .  .  .  .  }
    82  .  .  .  }
    83  .  .  .  Type: *ast.Ident {
    84  .  .  .  .  NamePos: -
    85  .  .  .  .  Name: "Source"
    86  .  .  .  .  Obj: *(obj @ 37)
    87  .  .  .  }
    88  .  .  .  Values: []ast.Expr (len = 1) {
    89  .  .  .  .  0: *ast.BasicLit {
    90  .  .  .  .  .  ValuePos: -
    91  .  .  .  .  .  Kind: STRING
    92  .  .  .  .  .  Value: "\"IOS\""
    93  .  .  .  .  }
    94  .  .  .  }
    95  .  .  }
    96  .  .  2: *ast.ValueSpec {
    97  .  .  .  Doc: *ast.CommentGroup {
    98  .  .  .  .  List: []*ast.Comment (len = 1) {
    99  .  .  .  .  .  0: *ast.Comment {
   100  .  .  .  .  .  .  Slash: -
   101  .  .  .  .  .  .  Text: "// Android ..."
   102  .  .  .  .  .  }
   103  .  .  .  .  }
   104  .  .  .  }
   105  .  .  .  Names: []*ast.Ident (len = 1) {
   106  .  .  .  .  0: *ast.Ident {
   107  .  .  .  .  .  NamePos: -
   108  .  .  .  .  .  Name: "Android"
   109  .  .  .  .  .  Obj: *ast.Object {
   110  .  .  .  .  .  .  Kind: const
   111  .  .  .  .  .  .  Name: "Android"
   112  .  .  .  .  .  .  Decl: *(obj @ 96)
   113  .  .  .  .  .  .  Data: 2
   114  .  .  .  .  .  }
   115  .  .  .  .  }
   116  .  .  .  }
   117  .  .  .  Type: *ast.Ident {
   118  .  .  .  .  NamePos: -
   119  .  .  .  .  Name: "Source"
   120  .  .  .  .  Obj: *(obj @ 37)
   121  .  .  .  }
   122  .  .  .  Values: []ast.Expr (len = 1) {
   123  .  .  .  .  0: *ast.BasicLit {
   124  .  .  .  .  .  ValuePos: -
   125  .  .  .  .  .  Kind: STRING
   126  .  .  .  .  .  Value: "\"ANDROID\""
   127  .  .  .  .  }
   128  .  .  .  }
   129  .  .  }
   130  .  .  3: *ast.ValueSpec {
   131  .  .  .  Doc: *ast.CommentGroup {
   132  .  .  .  .  List: []*ast.Comment (len = 1) {
   133  .  .  .  .  .  0: *ast.Comment {
   134  .  .  .  .  .  .  Slash: -
   135  .  .  .  .  .  .  Text: "// Partner ..."
   136  .  .  .  .  .  }
   137  .  .  .  .  }
   138  .  .  .  }
   139  .  .  .  Names: []*ast.Ident (len = 1) {
   140  .  .  .  .  0: *ast.Ident {
   141  .  .  .  .  .  NamePos: -
   142  .  .  .  .  .  Name: "Partner"
   143  .  .  .  .  .  Obj: *ast.Object {
   144  .  .  .  .  .  .  Kind: const
   145  .  .  .  .  .  .  Name: "Partner"
   146  .  .  .  .  .  .  Decl: *(obj @ 130)
   147  .  .  .  .  .  .  Data: 3
   148  .  .  .  .  .  }
   149  .  .  .  .  }
   150  .  .  .  }
   151  .  .  .  Type: *ast.Ident {
   152  .  .  .  .  NamePos: -
   153  .  .  .  .  Name: "Source"
   154  .  .  .  .  Obj: *(obj @ 37)
   155  .  .  .  }
   156  .  .  .  Values: []ast.Expr (len = 1) {
   157  .  .  .  .  0: *ast.BasicLit {
   158  .  .  .  .  .  ValuePos: -
   159  .  .  .  .  .  Kind: STRING
   160  .  .  .  .  .  Value: "\"PARTNER\""
   161  .  .  .  .  }
   162  .  .  .  }
   163  .  .  }
   164  .  .  4: *ast.ValueSpec {
   165  .  .  .  Doc: *ast.CommentGroup {
   166  .  .  .  .  List: []*ast.Comment (len = 1) {
   167  .  .  .  .  .  0: *ast.Comment {
   168  .  .  .  .  .  .  Slash: -
   169  .  .  .  .  .  .  Text: "// GEWEB ..."
   170  .  .  .  .  .  }
   171  .  .  .  .  }
   172  .  .  .  }
   173  .  .  .  Names: []*ast.Ident (len = 1) {
   174  .  .  .  .  0: *ast.Ident {
   175  .  .  .  .  .  NamePos: -
   176  .  .  .  .  .  Name: "GEWEB"
   177  .  .  .  .  .  Obj: *ast.Object {
   178  .  .  .  .  .  .  Kind: const
   179  .  .  .  .  .  .  Name: "GEWEB"
   180  .  .  .  .  .  .  Decl: *(obj @ 164)
   181  .  .  .  .  .  .  Data: 4
   182  .  .  .  .  .  }
   183  .  .  .  .  }
   184  .  .  .  }
   185  .  .  .  Type: *ast.Ident {
   186  .  .  .  .  NamePos: -
   187  .  .  .  .  Name: "Source"
   188  .  .  .  .  Obj: *(obj @ 37)
   189  .  .  .  }
   190  .  .  .  Values: []ast.Expr (len = 1) {
   191  .  .  .  .  0: *ast.BasicLit {
   192  .  .  .  .  .  ValuePos: -
   193  .  .  .  .  .  Kind: STRING
   194  .  .  .  .  .  Value: "\"GEWEB\""
   195  .  .  .  .  }
   196  .  .  .  }
   197  .  .  }
   198  .  .  5: *ast.ValueSpec {
   199  .  .  .  Doc: *ast.CommentGroup {
   200  .  .  .  .  List: []*ast.Comment (len = 1) {
   201  .  .  .  .  .  0: *ast.Comment {
   202  .  .  .  .  .  .  Slash: -
   203  .  .  .  .  .  .  Text: "// WEBAPI ..."
   204  .  .  .  .  .  }
   205  .  .  .  .  }
   206  .  .  .  }
   207  .  .  .  Names: []*ast.Ident (len = 1) {
   208  .  .  .  .  0: *ast.Ident {
   209  .  .  .  .  .  NamePos: -
   210  .  .  .  .  .  Name: "WEBAPI"
   211  .  .  .  .  .  Obj: *ast.Object {
   212  .  .  .  .  .  .  Kind: const
   213  .  .  .  .  .  .  Name: "WEBAPI"
   214  .  .  .  .  .  .  Decl: *(obj @ 198)
   215  .  .  .  .  .  .  Data: 5
   216  .  .  .  .  .  }
   217  .  .  .  .  }
   218  .  .  .  }
   219  .  .  .  Type: *ast.Ident {
   220  .  .  .  .  NamePos: -
   221  .  .  .  .  Name: "Source"
   222  .  .  .  .  Obj: *(obj @ 37)
   223  .  .  .  }
   224  .  .  .  Values: []ast.Expr (len = 1) {
   225  .  .  .  .  0: *ast.BasicLit {
   226  .  .  .  .  .  ValuePos: -
   227  .  .  .  .  .  Kind: STRING
   228  .  .  .  .  .  Value: "\"WEBAPI\""
   229  .  .  .  .  }
   230  .  .  .  }
   231  .  .  .  Comment: *ast.CommentGroup {
   232  .  .  .  .  List: []*ast.Comment (len = 1) {
   233  .  .  .  .  .  0: *ast.Comment {
   234  .  .  .  .  .  .  Slash: -
   235  .  .  .  .  .  .  Text: "// source of a DeliveryLinkRequest if it was created via web-microsite"
   236  .  .  .  .  .  }
   237  .  .  .  .  }
   238  .  .  .  }
   239  .  .  }
   240  .  .  6: *ast.ValueSpec {
   241  .  .  .  Names: []*ast.Ident (len = 1) {
   242  .  .  .  .  0: *ast.Ident {
   243  .  .  .  .  .  NamePos: -
   244  .  .  .  .  .  Name: "defaultBookingCodePrefix"
   245  .  .  .  .  .  Obj: *ast.Object {
   246  .  .  .  .  .  .  Kind: const
   247  .  .  .  .  .  .  Name: "defaultBookingCodePrefix"
   248  .  .  .  .  .  .  Decl: *(obj @ 240)
   249  .  .  .  .  .  .  Data: 6
   250  .  .  .  .  .  }
   251  .  .  .  .  }
   252  .  .  .  }
   253  .  .  .  Values: []ast.Expr (len = 1) {
   254  .  .  .  .  0: *ast.BasicLit {
   255  .  .  .  .  .  ValuePos: -
   256  .  .  .  .  .  Kind: STRING
   257  .  .  .  .  .  Value: "\"EXPRESS\""
   258  .  .  .  .  }
   259  .  .  .  }
   260  .  .  }
   261  .  }
   262  .  Rparen: -
   263  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// express source types."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// express source types."
     3  }
     0  nil
     0  nil
     0  *ast.ValueSpec {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// Operator ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Names: []*ast.Ident (len = 1) {
    10  .  .  0: *ast.Ident {
    11  .  .  .  NamePos: -
    12  .  .  .  Name: "Operator"
    13  .  .  .  Obj: *ast.Object {
    14  .  .  .  .  Kind: const
    15  .  .  .  .  Name: "Operator"
    16  .  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  .  Data: 0
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  .  Type: *ast.Ident {
    22  .  .  NamePos: -
    23  .  .  Name: "Source"
    24  .  .  Obj: *ast.Object {
    25  .  .  .  Kind: type
    26  .  .  .  Name: "Source"
    27  .  .  .  Decl: *ast.TypeSpec {
    28  .  .  .  .  Name: *ast.Ident {
    29  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  Name: "Source"
    31  .  .  .  .  .  Obj: *(obj @ 24)
    32  .  .  .  .  }
    33  .  .  .  .  Assign: -
    34  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  Name: "string"
    37  .  .  .  .  }
    38  .  .  .  }
    39  .  .  }
    40  .  }
    41  .  Values: []ast.Expr (len = 1) {
    42  .  .  0: *ast.BasicLit {
    43  .  .  .  ValuePos: -
    44  .  .  .  Kind: STRING
    45  .  .  .  Value: "\"OPERATOR\""
    46  .  .  }
    47  .  }
    48  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// Operator ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// Operator ..."
     3  }
     0  nil
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Operator"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: const
     5  .  .  Name: "Operator"
     6  .  .  Decl: *ast.ValueSpec {
     7  .  .  .  Doc: *ast.CommentGroup {
     8  .  .  .  .  List: []*ast.Comment (len = 1) {
     9  .  .  .  .  .  0: *ast.Comment {
    10  .  .  .  .  .  .  Slash: -
    11  .  .  .  .  .  .  Text: "// Operator ..."
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  0: *(obj @ 0)
    17  .  .  .  }
    18  .  .  .  Type: *ast.Ident {
    19  .  .  .  .  NamePos: -
    20  .  .  .  .  Name: "Source"
    21  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  Kind: type
    23  .  .  .  .  .  Name: "Source"
    24  .  .  .  .  .  Decl: *ast.TypeSpec {
    25  .  .  .  .  .  .  Name: *ast.Ident {
    26  .  .  .  .  .  .  .  NamePos: -
    27  .  .  .  .  .  .  .  Name: "Source"
    28  .  .  .  .  .  .  .  Obj: *(obj @ 21)
    29  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  Assign: -
    31  .  .  .  .  .  .  Type: *ast.Ident {
    32  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  Name: "string"
    34  .  .  .  .  .  .  }
    35  .  .  .  .  .  }
    36  .  .  .  .  }
    37  .  .  .  }
    38  .  .  .  Values: []ast.Expr (len = 1) {
    39  .  .  .  .  0: *ast.BasicLit {
    40  .  .  .  .  .  ValuePos: -
    41  .  .  .  .  .  Kind: STRING
    42  .  .  .  .  .  Value: "\"OPERATOR\""
    43  .  .  .  .  }
    44  .  .  .  }
    45  .  .  }
    46  .  .  Data: 0
    47  .  }
    48  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Source"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *ast.Ident {
     8  .  .  .  .  NamePos: -
     9  .  .  .  .  Name: "Source"
    10  .  .  .  .  Obj: *(obj @ 3)
    11  .  .  .  }
    12  .  .  .  Assign: -
    13  .  .  .  Type: *ast.Ident {
    14  .  .  .  .  NamePos: -
    15  .  .  .  .  Name: "string"
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"OPERATOR\""
     4  }
     0  nil
     0  nil
     0  *ast.ValueSpec {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// IOS ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Names: []*ast.Ident (len = 1) {
    10  .  .  0: *ast.Ident {
    11  .  .  .  NamePos: -
    12  .  .  .  Name: "IOS"
    13  .  .  .  Obj: *ast.Object {
    14  .  .  .  .  Kind: const
    15  .  .  .  .  Name: "IOS"
    16  .  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  .  Data: 1
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  .  Type: *ast.Ident {
    22  .  .  NamePos: -
    23  .  .  Name: "Source"
    24  .  .  Obj: *ast.Object {
    25  .  .  .  Kind: type
    26  .  .  .  Name: "Source"
    27  .  .  .  Decl: *ast.TypeSpec {
    28  .  .  .  .  Name: *ast.Ident {
    29  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  Name: "Source"
    31  .  .  .  .  .  Obj: *(obj @ 24)
    32  .  .  .  .  }
    33  .  .  .  .  Assign: -
    34  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  Name: "string"
    37  .  .  .  .  }
    38  .  .  .  }
    39  .  .  }
    40  .  }
    41  .  Values: []ast.Expr (len = 1) {
    42  .  .  0: *ast.BasicLit {
    43  .  .  .  ValuePos: -
    44  .  .  .  Kind: STRING
    45  .  .  .  Value: "\"IOS\""
    46  .  .  }
    47  .  }
    48  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// IOS ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// IOS ..."
     3  }
     0  nil
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "IOS"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: const
     5  .  .  Name: "IOS"
     6  .  .  Decl: *ast.ValueSpec {
     7  .  .  .  Doc: *ast.CommentGroup {
     8  .  .  .  .  List: []*ast.Comment (len = 1) {
     9  .  .  .  .  .  0: *ast.Comment {
    10  .  .  .  .  .  .  Slash: -
    11  .  .  .  .  .  .  Text: "// IOS ..."
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  0: *(obj @ 0)
    17  .  .  .  }
    18  .  .  .  Type: *ast.Ident {
    19  .  .  .  .  NamePos: -
    20  .  .  .  .  Name: "Source"
    21  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  Kind: type
    23  .  .  .  .  .  Name: "Source"
    24  .  .  .  .  .  Decl: *ast.TypeSpec {
    25  .  .  .  .  .  .  Name: *ast.Ident {
    26  .  .  .  .  .  .  .  NamePos: -
    27  .  .  .  .  .  .  .  Name: "Source"
    28  .  .  .  .  .  .  .  Obj: *(obj @ 21)
    29  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  Assign: -
    31  .  .  .  .  .  .  Type: *ast.Ident {
    32  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  Name: "string"
    34  .  .  .  .  .  .  }
    35  .  .  .  .  .  }
    36  .  .  .  .  }
    37  .  .  .  }
    38  .  .  .  Values: []ast.Expr (len = 1) {
    39  .  .  .  .  0: *ast.BasicLit {
    40  .  .  .  .  .  ValuePos: -
    41  .  .  .  .  .  Kind: STRING
    42  .  .  .  .  .  Value: "\"IOS\""
    43  .  .  .  .  }
    44  .  .  .  }
    45  .  .  }
    46  .  .  Data: 1
    47  .  }
    48  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Source"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *ast.Ident {
     8  .  .  .  .  NamePos: -
     9  .  .  .  .  Name: "Source"
    10  .  .  .  .  Obj: *(obj @ 3)
    11  .  .  .  }
    12  .  .  .  Assign: -
    13  .  .  .  Type: *ast.Ident {
    14  .  .  .  .  NamePos: -
    15  .  .  .  .  Name: "string"
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"IOS\""
     4  }
     0  nil
     0  nil
     0  *ast.ValueSpec {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// Android ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Names: []*ast.Ident (len = 1) {
    10  .  .  0: *ast.Ident {
    11  .  .  .  NamePos: -
    12  .  .  .  Name: "Android"
    13  .  .  .  Obj: *ast.Object {
    14  .  .  .  .  Kind: const
    15  .  .  .  .  Name: "Android"
    16  .  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  .  Data: 2
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  .  Type: *ast.Ident {
    22  .  .  NamePos: -
    23  .  .  Name: "Source"
    24  .  .  Obj: *ast.Object {
    25  .  .  .  Kind: type
    26  .  .  .  Name: "Source"
    27  .  .  .  Decl: *ast.TypeSpec {
    28  .  .  .  .  Name: *ast.Ident {
    29  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  Name: "Source"
    31  .  .  .  .  .  Obj: *(obj @ 24)
    32  .  .  .  .  }
    33  .  .  .  .  Assign: -
    34  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  Name: "string"
    37  .  .  .  .  }
    38  .  .  .  }
    39  .  .  }
    40  .  }
    41  .  Values: []ast.Expr (len = 1) {
    42  .  .  0: *ast.BasicLit {
    43  .  .  .  ValuePos: -
    44  .  .  .  Kind: STRING
    45  .  .  .  Value: "\"ANDROID\""
    46  .  .  }
    47  .  }
    48  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// Android ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// Android ..."
     3  }
     0  nil
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Android"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: const
     5  .  .  Name: "Android"
     6  .  .  Decl: *ast.ValueSpec {
     7  .  .  .  Doc: *ast.CommentGroup {
     8  .  .  .  .  List: []*ast.Comment (len = 1) {
     9  .  .  .  .  .  0: *ast.Comment {
    10  .  .  .  .  .  .  Slash: -
    11  .  .  .  .  .  .  Text: "// Android ..."
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  0: *(obj @ 0)
    17  .  .  .  }
    18  .  .  .  Type: *ast.Ident {
    19  .  .  .  .  NamePos: -
    20  .  .  .  .  Name: "Source"
    21  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  Kind: type
    23  .  .  .  .  .  Name: "Source"
    24  .  .  .  .  .  Decl: *ast.TypeSpec {
    25  .  .  .  .  .  .  Name: *ast.Ident {
    26  .  .  .  .  .  .  .  NamePos: -
    27  .  .  .  .  .  .  .  Name: "Source"
    28  .  .  .  .  .  .  .  Obj: *(obj @ 21)
    29  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  Assign: -
    31  .  .  .  .  .  .  Type: *ast.Ident {
    32  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  Name: "string"
    34  .  .  .  .  .  .  }
    35  .  .  .  .  .  }
    36  .  .  .  .  }
    37  .  .  .  }
    38  .  .  .  Values: []ast.Expr (len = 1) {
    39  .  .  .  .  0: *ast.BasicLit {
    40  .  .  .  .  .  ValuePos: -
    41  .  .  .  .  .  Kind: STRING
    42  .  .  .  .  .  Value: "\"ANDROID\""
    43  .  .  .  .  }
    44  .  .  .  }
    45  .  .  }
    46  .  .  Data: 2
    47  .  }
    48  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Source"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *ast.Ident {
     8  .  .  .  .  NamePos: -
     9  .  .  .  .  Name: "Source"
    10  .  .  .  .  Obj: *(obj @ 3)
    11  .  .  .  }
    12  .  .  .  Assign: -
    13  .  .  .  Type: *ast.Ident {
    14  .  .  .  .  NamePos: -
    15  .  .  .  .  Name: "string"
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"ANDROID\""
     4  }
     0  nil
     0  nil
     0  *ast.ValueSpec {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// Partner ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Names: []*ast.Ident (len = 1) {
    10  .  .  0: *ast.Ident {
    11  .  .  .  NamePos: -
    12  .  .  .  Name: "Partner"
    13  .  .  .  Obj: *ast.Object {
    14  .  .  .  .  Kind: const
    15  .  .  .  .  Name: "Partner"
    16  .  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  .  Data: 3
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  .  Type: *ast.Ident {
    22  .  .  NamePos: -
    23  .  .  Name: "Source"
    24  .  .  Obj: *ast.Object {
    25  .  .  .  Kind: type
    26  .  .  .  Name: "Source"
    27  .  .  .  Decl: *ast.TypeSpec {
    28  .  .  .  .  Name: *ast.Ident {
    29  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  Name: "Source"
    31  .  .  .  .  .  Obj: *(obj @ 24)
    32  .  .  .  .  }
    33  .  .  .  .  Assign: -
    34  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  Name: "string"
    37  .  .  .  .  }
    38  .  .  .  }
    39  .  .  }
    40  .  }
    41  .  Values: []ast.Expr (len = 1) {
    42  .  .  0: *ast.BasicLit {
    43  .  .  .  ValuePos: -
    44  .  .  .  Kind: STRING
    45  .  .  .  Value: "\"PARTNER\""
    46  .  .  }
    47  .  }
    48  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// Partner ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// Partner ..."
     3  }
     0  nil
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Partner"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: const
     5  .  .  Name: "Partner"
     6  .  .  Decl: *ast.ValueSpec {
     7  .  .  .  Doc: *ast.CommentGroup {
     8  .  .  .  .  List: []*ast.Comment (len = 1) {
     9  .  .  .  .  .  0: *ast.Comment {
    10  .  .  .  .  .  .  Slash: -
    11  .  .  .  .  .  .  Text: "// Partner ..."
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  0: *(obj @ 0)
    17  .  .  .  }
    18  .  .  .  Type: *ast.Ident {
    19  .  .  .  .  NamePos: -
    20  .  .  .  .  Name: "Source"
    21  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  Kind: type
    23  .  .  .  .  .  Name: "Source"
    24  .  .  .  .  .  Decl: *ast.TypeSpec {
    25  .  .  .  .  .  .  Name: *ast.Ident {
    26  .  .  .  .  .  .  .  NamePos: -
    27  .  .  .  .  .  .  .  Name: "Source"
    28  .  .  .  .  .  .  .  Obj: *(obj @ 21)
    29  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  Assign: -
    31  .  .  .  .  .  .  Type: *ast.Ident {
    32  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  Name: "string"
    34  .  .  .  .  .  .  }
    35  .  .  .  .  .  }
    36  .  .  .  .  }
    37  .  .  .  }
    38  .  .  .  Values: []ast.Expr (len = 1) {
    39  .  .  .  .  0: *ast.BasicLit {
    40  .  .  .  .  .  ValuePos: -
    41  .  .  .  .  .  Kind: STRING
    42  .  .  .  .  .  Value: "\"PARTNER\""
    43  .  .  .  .  }
    44  .  .  .  }
    45  .  .  }
    46  .  .  Data: 3
    47  .  }
    48  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Source"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *ast.Ident {
     8  .  .  .  .  NamePos: -
     9  .  .  .  .  Name: "Source"
    10  .  .  .  .  Obj: *(obj @ 3)
    11  .  .  .  }
    12  .  .  .  Assign: -
    13  .  .  .  Type: *ast.Ident {
    14  .  .  .  .  NamePos: -
    15  .  .  .  .  Name: "string"
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"PARTNER\""
     4  }
     0  nil
     0  nil
     0  *ast.ValueSpec {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// GEWEB ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Names: []*ast.Ident (len = 1) {
    10  .  .  0: *ast.Ident {
    11  .  .  .  NamePos: -
    12  .  .  .  Name: "GEWEB"
    13  .  .  .  Obj: *ast.Object {
    14  .  .  .  .  Kind: const
    15  .  .  .  .  Name: "GEWEB"
    16  .  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  .  Data: 4
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  .  Type: *ast.Ident {
    22  .  .  NamePos: -
    23  .  .  Name: "Source"
    24  .  .  Obj: *ast.Object {
    25  .  .  .  Kind: type
    26  .  .  .  Name: "Source"
    27  .  .  .  Decl: *ast.TypeSpec {
    28  .  .  .  .  Name: *ast.Ident {
    29  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  Name: "Source"
    31  .  .  .  .  .  Obj: *(obj @ 24)
    32  .  .  .  .  }
    33  .  .  .  .  Assign: -
    34  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  Name: "string"
    37  .  .  .  .  }
    38  .  .  .  }
    39  .  .  }
    40  .  }
    41  .  Values: []ast.Expr (len = 1) {
    42  .  .  0: *ast.BasicLit {
    43  .  .  .  ValuePos: -
    44  .  .  .  Kind: STRING
    45  .  .  .  Value: "\"GEWEB\""
    46  .  .  }
    47  .  }
    48  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// GEWEB ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// GEWEB ..."
     3  }
     0  nil
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "GEWEB"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: const
     5  .  .  Name: "GEWEB"
     6  .  .  Decl: *ast.ValueSpec {
     7  .  .  .  Doc: *ast.CommentGroup {
     8  .  .  .  .  List: []*ast.Comment (len = 1) {
     9  .  .  .  .  .  0: *ast.Comment {
    10  .  .  .  .  .  .  Slash: -
    11  .  .  .  .  .  .  Text: "// GEWEB ..."
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  0: *(obj @ 0)
    17  .  .  .  }
    18  .  .  .  Type: *ast.Ident {
    19  .  .  .  .  NamePos: -
    20  .  .  .  .  Name: "Source"
    21  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  Kind: type
    23  .  .  .  .  .  Name: "Source"
    24  .  .  .  .  .  Decl: *ast.TypeSpec {
    25  .  .  .  .  .  .  Name: *ast.Ident {
    26  .  .  .  .  .  .  .  NamePos: -
    27  .  .  .  .  .  .  .  Name: "Source"
    28  .  .  .  .  .  .  .  Obj: *(obj @ 21)
    29  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  Assign: -
    31  .  .  .  .  .  .  Type: *ast.Ident {
    32  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  Name: "string"
    34  .  .  .  .  .  .  }
    35  .  .  .  .  .  }
    36  .  .  .  .  }
    37  .  .  .  }
    38  .  .  .  Values: []ast.Expr (len = 1) {
    39  .  .  .  .  0: *ast.BasicLit {
    40  .  .  .  .  .  ValuePos: -
    41  .  .  .  .  .  Kind: STRING
    42  .  .  .  .  .  Value: "\"GEWEB\""
    43  .  .  .  .  }
    44  .  .  .  }
    45  .  .  }
    46  .  .  Data: 4
    47  .  }
    48  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Source"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *ast.Ident {
     8  .  .  .  .  NamePos: -
     9  .  .  .  .  Name: "Source"
    10  .  .  .  .  Obj: *(obj @ 3)
    11  .  .  .  }
    12  .  .  .  Assign: -
    13  .  .  .  Type: *ast.Ident {
    14  .  .  .  .  NamePos: -
    15  .  .  .  .  Name: "string"
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"GEWEB\""
     4  }
     0  nil
     0  nil
     0  *ast.ValueSpec {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: -
     5  .  .  .  .  Text: "// WEBAPI ..."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Names: []*ast.Ident (len = 1) {
    10  .  .  0: *ast.Ident {
    11  .  .  .  NamePos: -
    12  .  .  .  Name: "WEBAPI"
    13  .  .  .  Obj: *ast.Object {
    14  .  .  .  .  Kind: const
    15  .  .  .  .  Name: "WEBAPI"
    16  .  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  .  Data: 5
    18  .  .  .  }
    19  .  .  }
    20  .  }
    21  .  Type: *ast.Ident {
    22  .  .  NamePos: -
    23  .  .  Name: "Source"
    24  .  .  Obj: *ast.Object {
    25  .  .  .  Kind: type
    26  .  .  .  Name: "Source"
    27  .  .  .  Decl: *ast.TypeSpec {
    28  .  .  .  .  Name: *ast.Ident {
    29  .  .  .  .  .  NamePos: -
    30  .  .  .  .  .  Name: "Source"
    31  .  .  .  .  .  Obj: *(obj @ 24)
    32  .  .  .  .  }
    33  .  .  .  .  Assign: -
    34  .  .  .  .  Type: *ast.Ident {
    35  .  .  .  .  .  NamePos: -
    36  .  .  .  .  .  Name: "string"
    37  .  .  .  .  }
    38  .  .  .  }
    39  .  .  }
    40  .  }
    41  .  Values: []ast.Expr (len = 1) {
    42  .  .  0: *ast.BasicLit {
    43  .  .  .  ValuePos: -
    44  .  .  .  Kind: STRING
    45  .  .  .  Value: "\"WEBAPI\""
    46  .  .  }
    47  .  }
    48  .  Comment: *ast.CommentGroup {
    49  .  .  List: []*ast.Comment (len = 1) {
    50  .  .  .  0: *ast.Comment {
    51  .  .  .  .  Slash: -
    52  .  .  .  .  Text: "// source of a DeliveryLinkRequest if it was created via web-microsite"
    53  .  .  .  }
    54  .  .  }
    55  .  }
    56  }
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// WEBAPI ..."
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// WEBAPI ..."
     3  }
     0  nil
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "WEBAPI"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: const
     5  .  .  Name: "WEBAPI"
     6  .  .  Decl: *ast.ValueSpec {
     7  .  .  .  Doc: *ast.CommentGroup {
     8  .  .  .  .  List: []*ast.Comment (len = 1) {
     9  .  .  .  .  .  0: *ast.Comment {
    10  .  .  .  .  .  .  Slash: -
    11  .  .  .  .  .  .  Text: "// WEBAPI ..."
    12  .  .  .  .  .  }
    13  .  .  .  .  }
    14  .  .  .  }
    15  .  .  .  Names: []*ast.Ident (len = 1) {
    16  .  .  .  .  0: *(obj @ 0)
    17  .  .  .  }
    18  .  .  .  Type: *ast.Ident {
    19  .  .  .  .  NamePos: -
    20  .  .  .  .  Name: "Source"
    21  .  .  .  .  Obj: *ast.Object {
    22  .  .  .  .  .  Kind: type
    23  .  .  .  .  .  Name: "Source"
    24  .  .  .  .  .  Decl: *ast.TypeSpec {
    25  .  .  .  .  .  .  Name: *ast.Ident {
    26  .  .  .  .  .  .  .  NamePos: -
    27  .  .  .  .  .  .  .  Name: "Source"
    28  .  .  .  .  .  .  .  Obj: *(obj @ 21)
    29  .  .  .  .  .  .  }
    30  .  .  .  .  .  .  Assign: -
    31  .  .  .  .  .  .  Type: *ast.Ident {
    32  .  .  .  .  .  .  .  NamePos: -
    33  .  .  .  .  .  .  .  Name: "string"
    34  .  .  .  .  .  .  }
    35  .  .  .  .  .  }
    36  .  .  .  .  }
    37  .  .  .  }
    38  .  .  .  Values: []ast.Expr (len = 1) {
    39  .  .  .  .  0: *ast.BasicLit {
    40  .  .  .  .  .  ValuePos: -
    41  .  .  .  .  .  Kind: STRING
    42  .  .  .  .  .  Value: "\"WEBAPI\""
    43  .  .  .  .  }
    44  .  .  .  }
    45  .  .  .  Comment: *ast.CommentGroup {
    46  .  .  .  .  List: []*ast.Comment (len = 1) {
    47  .  .  .  .  .  0: *ast.Comment {
    48  .  .  .  .  .  .  Slash: -
    49  .  .  .  .  .  .  Text: "// source of a DeliveryLinkRequest if it was created via web-microsite"
    50  .  .  .  .  .  }
    51  .  .  .  .  }
    52  .  .  .  }
    53  .  .  }
    54  .  .  Data: 5
    55  .  }
    56  }
     0  nil
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "Source"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: type
     5  .  .  Name: "Source"
     6  .  .  Decl: *ast.TypeSpec {
     7  .  .  .  Name: *ast.Ident {
     8  .  .  .  .  NamePos: -
     9  .  .  .  .  Name: "Source"
    10  .  .  .  .  Obj: *(obj @ 3)
    11  .  .  .  }
    12  .  .  .  Assign: -
    13  .  .  .  Type: *ast.Ident {
    14  .  .  .  .  NamePos: -
    15  .  .  .  .  Name: "string"
    16  .  .  .  }
    17  .  .  }
    18  .  }
    19  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"WEBAPI\""
     4  }
     0  nil
     0  *ast.CommentGroup {
     1  .  List: []*ast.Comment (len = 1) {
     2  .  .  0: *ast.Comment {
     3  .  .  .  Slash: -
     4  .  .  .  Text: "// source of a DeliveryLinkRequest if it was created via web-microsite"
     5  .  .  }
     6  .  }
     7  }
     0  *ast.Comment {
     1  .  Slash: -
     2  .  Text: "// source of a DeliveryLinkRequest if it was created via web-microsite"
     3  }
     0  nil
     0  nil
     0  nil
     0  *ast.ValueSpec {
     1  .  Names: []*ast.Ident (len = 1) {
     2  .  .  0: *ast.Ident {
     3  .  .  .  NamePos: -
     4  .  .  .  Name: "defaultBookingCodePrefix"
     5  .  .  .  Obj: *ast.Object {
     6  .  .  .  .  Kind: const
     7  .  .  .  .  Name: "defaultBookingCodePrefix"
     8  .  .  .  .  Decl: *(obj @ 0)
     9  .  .  .  .  Data: 6
    10  .  .  .  }
    11  .  .  }
    12  .  }
    13  .  Values: []ast.Expr (len = 1) {
    14  .  .  0: *ast.BasicLit {
    15  .  .  .  ValuePos: -
    16  .  .  .  Kind: STRING
    17  .  .  .  Value: "\"EXPRESS\""
    18  .  .  }
    19  .  }
    20  }
     0  *ast.Ident {
     1  .  NamePos: -
     2  .  Name: "defaultBookingCodePrefix"
     3  .  Obj: *ast.Object {
     4  .  .  Kind: const
     5  .  .  Name: "defaultBookingCodePrefix"
     6  .  .  Decl: *ast.ValueSpec {
     7  .  .  .  Names: []*ast.Ident (len = 1) {
     8  .  .  .  .  0: *(obj @ 0)
     9  .  .  .  }
    10  .  .  .  Values: []ast.Expr (len = 1) {
    11  .  .  .  .  0: *ast.BasicLit {
    12  .  .  .  .  .  ValuePos: -
    13  .  .  .  .  .  Kind: STRING
    14  .  .  .  .  .  Value: "\"EXPRESS\""
    15  .  .  .  .  }
    16  .  .  .  }
    17  .  .  }
    18  .  .  Data: 6
    19  .  }
    20  }
     0  nil
     0  *ast.BasicLit {
     1  .  ValuePos: -
     2  .  Kind: STRING
     3  .  Value: "\"EXPRESS\""
     4  }
     0  nil
     0  nil
     0  nil
     0  nil
import  map[]
import  map[]
